[
    {
        "id": "2c4527dad914ec1c",
        "type": "tab",
        "label": "Flow 4",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3267d34c9be8d15b",
        "type": "tab",
        "label": "create versioned crosslinks",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b0c6d4cf1e903799",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "32ccf302392ab325",
        "type": "tab",
        "label": "create versioned crosslinks",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fca036ab5aa23301",
        "type": "subflow",
        "name": "Retrieve Settings",
        "info": "Retrieve an automation configuartaion object attachment from vault, or from Redis if alread exist, if not existing, it will be stored in Redis. \r\n\r\n### Node information\r\n:Initial Release (string): With building blocks version x.x.x\r\n:Description (string): Retrieve an automation configuartaion object attachment from vault, or from Redis if alread exist, if not existing, it will be stored in Redis. \r\n\r\n### Inputs\r\n: args.settings_name (string) : *(optional)* the name of the automation configuartaion object in vault, if not provided, the name '-client_id-__settings' will be used. \r\n: args.attachment_name (string) : *(optional)* the name of the object attachment in vault, it has to be a .json file, defaults to 'settings.json'. \r\n: args.keep (boolean) : *(optional)* If **false**, delete the args object. Defaults to **false**.\r\n: args.expire (integer): *(optional)* Number of seconds after redis deletes the topic automatically. Default is 24h.\r\n\r\n### Outputs\r\n1. Success\r\n: payload (object): attachment converted to an object/array\r\n\r\n1. Failure\r\n: payload (object): Error message on channel 2\r\n",
        "category": "Veeva Vault",
        "in": [
            {
                "x": 140,
                "y": 40,
                "wires": [
                    {
                        "id": "641eac4e6a3a1072"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1800,
                "y": 480,
                "wires": [
                    {
                        "id": "9ffbd2aa8e3b35c4",
                        "port": 0
                    },
                    {
                        "id": "2fa9a7a10b10782e",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1410,
                "y": 380,
                "wires": [
                    {
                        "id": "434ac0347080cde9",
                        "port": 0
                    },
                    {
                        "id": "80dbe2c3859434ef",
                        "port": 1
                    },
                    {
                        "id": "74e13d47f28fa1de",
                        "port": 1
                    },
                    {
                        "id": "bd54ec6a24f9d859",
                        "port": 1
                    },
                    {
                        "id": "e20436251156a60f",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#ff0000",
        "inputLabels": [
            "get settings"
        ],
        "outputLabels": [
            "Success",
            "Error"
        ],
        "icon": "node-red/white-globe.svg"
    },
    {
        "id": "4e5b03000136f2c8",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "5267b0000f591768",
        "type": "subflow",
        "name": "Update Vers",
        "info": "",
        "category": "Veeva Vault",
        "in": [
            {
                "x": 100,
                "y": 180,
                "wires": [
                    {
                        "id": "1acf79d7de254fd3"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1490,
                "y": 40,
                "wires": [
                    {
                        "id": "32a3990622cb2699",
                        "port": 0
                    },
                    {
                        "id": "42dce4eaa0da0a7f",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1370,
                "y": 500,
                "wires": [
                    {
                        "id": "3bc5a284b042a731",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#Ff0000",
        "inputLabels": [
            "Update Version"
        ],
        "outputLabels": [
            "return result",
            "Error"
        ],
        "icon": "font-awesome/fa-angle-double-up"
    },
    {
        "id": "1548160fce6f102c",
        "type": "subflow",
        "name": "Input Form",
        "info": "Build a generic input form.\n\n### Inputs\n\n: title (string): The title of the input form.\n: description (string): The main description rendered above the selection table.\n: type (string): The input type (e.g. checkbox, radio), if empty or false, the table is a plain output table.\n: tableheader (object): An object with a list of column names (see below for details).\n: dataarray (array of objects): Table data (see below for details), with checked=true a row can be preselected.\n: flow (string): The flow name that will be called on form submit. The flow needs to listen for POST request on **/nodes/\\<flow\\>**\n: hiddenfields (array of objects): Additional parameters that will be sent to the target flow (see below for details).\n: httpcalls (positive Integer): if provided, a 'go back' button is added which goes back the given number of steps in window history.\n: NOTE (na): strings provided for description, tableheader and dataarray will not be escaped, i.e. html code can be added (e.g. links and formatting), the creator of the automation must ensure that not unintended code-injection occurs.\n\n### Output\n: payload (html): The input page that can be returned to the browser.\n\n### Details\n\nThe tableheader is an object containing a columns field that contains a list of header names.\n\n    tableheader = {\n            columns: [\n                \"column 1 header\",\n                \"column 2 header\",\n                \"column 3 header\"\n            ]\n    }\n\nDataarray is an array of objects that contains the row data.\n\n    dataarray = [\n        {\n            selection: \"the value that will be posted on form submit when row 1 was selected.\"\n            columns: [\n                \"value for column 1, row 1\",\n                \"value for column 2, row 1\",\n                \"value for column 3, row 1\"\n            ]\n            checked: true\n        },\n        {\n            selection: \"the value that will be posted on form submit when row 2 was selected.\"\n            columns: [\n                \"value for column 1, row 2\",\n                \"value for column 2, row 2\",\n                \"value for column 3, row 2\"\n            ]\n        },\n        {\n            selection: \"the value that will be posted on form submit when row 3 was selected.\"\n            columns: [\n                \"value for column 1, row 3\",\n                \"value for column 2, row 3\",\n                \"value for column 3, row 3\"\n            ]\n        }\n    ]\n\nhiddenfields is an array of objects that contains name / value pairs with extra parameters for the target flow.\n\n    hiddenfields = [\n        {\n            name: \"name of the first parameter\",\n            value: \"value of the first parameter\"\n        },\n        {\n            name: \"name of the second parameter\",\n            value: \"value of the second parameter\"\n        }\n    ]",
        "category": "Veeva Vault",
        "in": [
            {
                "x": 80,
                "y": 160,
                "wires": [
                    {
                        "id": "9376135244af7288"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1020,
                "y": 160,
                "wires": [
                    {
                        "id": "0efcb5b4634a5b92",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#F3B567",
        "icon": "font-awesome/fa-file-text-o"
    },
    {
        "id": "2ece8d9b40a70275",
        "type": "subflow",
        "name": "Input Form (3)",
        "info": "Build a generic input form.\n\n### Inputs\n\n: title (string): The title of the input form.\n: description (string): The main description rendered above the selection table.\n: type (string): The input type (e.g. checkbox, radio), if empty or false, the table is a plain output table.\n: tableheader (object): An object with a list of column names (see below for details).\n: dataarray (array of objects): Table data (see below for details), with checked=true a row can be preselected.\n: flow (string): The flow name that will be called on form submit. The flow needs to listen for POST request on *\\<flow\\>**\n: hiddenfields (array of objects): Additional parameters that will be sent to the target flow (see below for details).\n: httpcalls (positive Integer): if provided, a 'go back' button is added which goes back the given number of steps in window history.\n: unescaped (boolean): defaults to false, if true, strings provided for description, tableheader and dataarray will not be escaped, i.e. html code can be added (e.g. links and formatting).\n\n### Output\n: payload (html): The input page that can be returned to the browser.\n\n### Details\n\nThe tableheader is an object containing a columns field that contains a list of header names.\n\n    tableheader = {\n            columns: [\n                \"column 1 header\",\n                \"column 2 header\",\n                \"column 3 header\"\n            ]\n    }\n\nDataarray is an array of objects that contains the row data.\n\n    dataarray = [\n        {\n            selection: \"the value that will be posted on form submit when row 1 was selected.\"\n            columns: [\n                \"value for column 1, row 1\",\n                \"value for column 2, row 1\",\n                \"value for column 3, row 1\"\n            ]\n            checked: true\n        },\n        {\n            selection: \"the value that will be posted on form submit when row 2 was selected.\"\n            columns: [\n                \"value for column 1, row 2\",\n                \"value for column 2, row 2\",\n                \"value for column 3, row 2\"\n            ]\n        },\n        {\n            selection: \"the value that will be posted on form submit when row 3 was selected.\"\n            columns: [\n                \"value for column 1, row 3\",\n                \"value for column 2, row 3\",\n                \"value for column 3, row 3\"\n            ]\n        }\n    ]\n\nhiddenfields is an array of objects that contains name / value pairs with extra parameters for the target flow.\n\n    hiddenfields = [\n        {\n            name: \"name of the first parameter\",\n            value: \"value of the first parameter\"\n        },\n        {\n            name: \"name of the second parameter\",\n            value: \"value of the second parameter\"\n        }\n    ]",
        "category": "Veeva Vault",
        "in": [
            {
                "x": 80,
                "y": 160,
                "wires": [
                    {
                        "id": "e1cf81e0db9ec340"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1020,
                "y": 160,
                "wires": [
                    {
                        "id": "2af9888f9639bac2",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {
            "type": "brave-input-form"
        },
        "color": "#FFCC66",
        "icon": "font-awesome/fa-file-text-o"
    },
    {
        "id": "391f8570abc63add",
        "type": "subflow",
        "name": "Create Single Document Version",
        "info": "Add a new draft version of an existing document.\r\n\r\n### Node information\r\n:Vault API version (string): 22.3\r\n:Initial Release (string): With building blocks version 3.5.0\r\n:Description (string): You can choose to either use the existing source file, or a new source file. These actions will increase the document’s minor version number.\r\n\r\n### Inputs\r\n\r\n: vault_api (string) :  The API endpoint for the Vault.\r\n: session_id (string) :  A Veeva Vault session id.\r\n: args.doc_id (string) : The ID of the document that should be versioned. \r\n: args.keep (boolean) :If `TRUE`, the arguments (in args) are kept after building block execution. If `FALSE` , the arguments will be deleted.\r\n\r\n### Body Parameter\r\n\r\n: description__v (string) : (Optional) Add a Version Description for the new draft version.\r\n\r\nIn case of same content as in previous version:\r\n\r\n: createDraft (string) : Set to \"latestContent\" to create a new draft version from the existing document with the same content in the Vault. This does not require uploading a file. \r\n\r\nIn case of new content:\r\n\r\n: createDraft (string) : Set to \"uploadedContent\" to create a new draft version by putting the content into the file parameter.\r\n: file (string) : Use this parameter to include the new document content. Use the following structure.\r\n        \"file\": {\r\n            \"value\": <content to be in the new file>,\r\n            \"options\": {\r\n                \"filename\": <source file name to appear in the file details>\r\n            }\r\n        }\r\n\r\n### Outputs\r\n\r\n\r\n1. Success\r\n: payload (object): The response shows the new version numbers.\r\n       {\r\n            responseStatus: \"SUCCESS\"\r\n            \"responseMessage\": \"New draft successfully created.\",\r\n            \"major_version_number__v\": <new major version number>,\r\n            \"minor_version_number__v\": <new minor version number>\r\n       }\r\n\r\n\r\n\r\n2. Failure\r\n: payload (object): An object containing the error messages.\r\n        {\r\n            responseStatus: \"FAILURE\"\r\n            errors: <array>\r\n                 0: <object>\r\n                    type: <type of overall error>\r\n                    message: <overall error message>\r\n        }\r\n",
        "category": "Veeva Vault",
        "in": [
            {
                "x": 320,
                "y": 140,
                "wires": [
                    {
                        "id": "2b68984ccd2285e1"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1320,
                "y": 160,
                "wires": [
                    {
                        "id": "d33a2ba03fa17cab",
                        "port": 0
                    },
                    {
                        "id": "615a0b6d3689b73f",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1310,
                "y": 220,
                "wires": [
                    {
                        "id": "21fe8eb40f454e6a",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {
            "type": "brave-create-single-document-version"
        },
        "color": "#FFCC66",
        "outputLabels": [
            "Success",
            "Failure"
        ],
        "icon": "node-red/parser-csv.svg"
    },
    {
        "id": "2a24cd366adb05e3",
        "type": "subflow",
        "name": "Obj User Act.",
        "info": "",
        "category": "Veeva Vault",
        "in": [
            {
                "x": 120,
                "y": 160,
                "wires": [
                    {
                        "id": "be3b0e3f01041787"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1180,
                "y": 160,
                "wires": [
                    {
                        "id": "bb373d0f054efbbd",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1130,
                "y": 220,
                "wires": [
                    {
                        "id": "bb373d0f054efbbd",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#F3B567",
        "inputLabels": [
            "Execute Object User Action"
        ],
        "outputLabels": [
            "Return Result",
            "Error"
        ],
        "icon": "font-awesome/fa-step-forward"
    },
    {
        "id": "594e48a4aa27c6b6",
        "type": "subflow",
        "name": "Redis queue (2)",
        "info": "Save a node-red object to the redis database and restore later. \r\n\r\n### Node information\r\n:Initial Release (string): With building blocks version x.x.x\r\n:Description (string): Save a node-red object to the redis database and restore later.\r\n\r\n### Inputs\r\n: args.method (string) : *(required)* **SET** to write to redis as a single object, **GET** to read a single object from redis, **RPUSH** to append or create a list of objects in redis, **LRANGE** to retrieve list item objects from redis, use args.topic for the topics and provide the range as array with 0 based start and end (i.e. use [0, -1] for all, negative values count from end), **DELETE** to delete the topic from redis. \r\n: args.topic (string)  : *(required)* A unique identifier, must be the same for the write and read step for a queued object.\r\n: args.keep_queue (boolean) : *(optional)* Only when reading. If **true**, keep the queued message for later. If **false**, delete the queue from redis. Defaults to **true**.\r\n: args.keep (boolean) : *(optional)* If **false**, delete the args object. Defaults to **false**.\r\n: args.expire (integer): *(optional)* Number of seconds after redis deletes the topic automatically. Default is to never expire.\r\n: payload (object)     : Only when writing. A node red data object.\r\n\r\n### Outputs\r\n1. Read Success\r\n: payload (object): The object retrieved from redis on channel 1\r\n\r\n1. Write Success\r\n: payload (string): 'OK' on channel 1\r\n\r\n1. Failure\r\n: payload (object): Error message on channel 2\r\n",
        "category": "Veeva Vault",
        "in": [
            {
                "x": 80,
                "y": 320,
                "wires": [
                    {
                        "id": "793f7e54dbae0543"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1720,
                "y": 340,
                "wires": [
                    {
                        "id": "adfc665125823cbb",
                        "port": 0
                    },
                    {
                        "id": "54c4e178e45aea62",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1640,
                "y": 160,
                "wires": [
                    {
                        "id": "742929adec7acddf",
                        "port": 0
                    },
                    {
                        "id": "204e59c63465c1c8",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {
            "type": "brave-redis-queue",
            "desc": "saves and retrieves the payload to redis using args.topic as dientifier"
        },
        "color": "#FFCC66",
        "inputLabels": [
            "brave-redis-que"
        ],
        "outputLabels": [
            "Success",
            "Failure"
        ],
        "icon": "node-red/arrow-in.svg"
    },
    {
        "id": "743f388ad8cf50d6",
        "type": "subflow",
        "name": "Update Vers",
        "info": "",
        "category": "Veeva Vault",
        "in": [
            {
                "x": 100,
                "y": 180,
                "wires": [
                    {
                        "id": "2909707aec157562"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1490,
                "y": 40,
                "wires": [
                    {
                        "id": "9ad079406a9f4872",
                        "port": 0
                    },
                    {
                        "id": "5fee046b5612fe4c",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1370,
                "y": 500,
                "wires": [
                    {
                        "id": "53be5d9e89b2a160",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#Ff0000",
        "inputLabels": [
            "Update Version"
        ],
        "outputLabels": [
            "return result",
            "Error"
        ],
        "icon": "font-awesome/fa-angle-double-up"
    },
    {
        "id": "f5e72a5d369ff484",
        "type": "subflow",
        "name": "Login (2)",
        "info": "Login to Veeva Vault and create a session id\n\nThis node checks if there is a Veeva Vault session id in the cookies and returns it.\nOtherwise, there are three authentication stragies to create a new session id:\n\n1. **Retrieve the current session id from the Veeva Vault UI**\n\n   This only works, if the flow runs embedded in the Veeva Vault UI and the \"post session\"\n   feature was enabled for the web action. The strategy supports delegated sessions as well.\n\n1. **Login via Single-Sign-On**\n\n   This only works for SSO enabled accounts. The node redirects to the Azure AD authorization\n   endpoint, which will authenticate the user and come back to this node with an identity\n   token. The identity token is then used to create a Veeva Vault session id, the session id\n   is stored in the cookies and the original flow will be restartet.\n\n1. **Login via username and password**\n\n   This only works for basic accounts with a password (i.e. non-SSO).\n\n### Inputs\n\n: payload.vault_domain (string): The domain for the target vault.\n: *payload.sso* (any): (Optional) Use the SSO authentication strategy. The value of this parameter is ignored and can even be empty. If this parameter is missing and there is no username and password, the session will be retrieved from the Veeva Vault UI.\n: *payload.username* (string): (Optional) The username for a basic account. If both, username and password are provides, login via username and password will be performed.\n: *payload.password* (string): (Optional) The password for a basic account. If both, username and password are provides, login via username and password will be performed.\n: *client_id* (string): (Optional) An identifier for the Veeva Vault API for diagnosis. If unset, the building block will set the client id to \"BRAVE Automation\". \n\n### Outputs\n\n: session_id (string): An active session id for the target vault. The session id will also be stored in a cookie, so that it will be re-used for the lifetime of the session.\n: vault_api (string): The REST API endpoint for the target vault in the format **https&colon;//&lt;vault_domain&gt;/api/**. Note, that the value does not include a version for the Vault API.\n: client_id (string): The specified client id or \"BRAVE Automation\" if unspecified.\n: credentials (object): Multi-session support. The key is **vault_domain** and it contains an object with **vault_api** and **session_id** as described above for each authenticated Vault.\n\n### Details\n\nThe following cookies will be set and can be used by flows. Only the last authenticated Vault\nvia SSO or Vault UI will be stored. Authentications via username and password will not be\nrecorded in cookies.\n\n: vault_domain  (string): The vault domain as specified in the initial call.\n: session_id (string): The current active session id.\n: user_id (number): The id of the current user.\n: vault_id (number): The id of the target vault.\n",
        "category": "Veeva Vault",
        "in": [
            {
                "x": 80,
                "y": 120,
                "wires": [
                    {
                        "id": "0d358bfc8dec99b9"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1780,
                "y": 100,
                "wires": [
                    {
                        "id": "c5cb49688452c535",
                        "port": 0
                    },
                    {
                        "id": "c6034b65dd7643c5",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1780,
                "y": 580,
                "wires": [
                    {
                        "id": "fbdf547da8acaa84",
                        "port": 0
                    },
                    {
                        "id": "6a0d51294183358f",
                        "port": 1
                    },
                    {
                        "id": "dfe9410a2a28ec7b",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {
            "type": "brave-login"
        },
        "color": "#FFCC66",
        "outputLabels": [
            "Success",
            "Failure"
        ],
        "icon": "font-awesome/fa-sign-in"
    },
    {
        "id": "281da2542719f7ce",
        "type": "group",
        "z": "fca036ab5aa23301",
        "name": "get settings from vault",
        "style": {
            "fill": "#ffcf3f",
            "label": true,
            "color": "#777777",
            "label-position": "n"
        },
        "nodes": [
            "f2e66c06b9a9ba35",
            "3cba36dbc4be0431",
            "781204f40703ed7f",
            "bd54ec6a24f9d859",
            "74e13d47f28fa1de",
            "80dbe2c3859434ef",
            "862007a1a92de19b"
        ],
        "x": 154,
        "y": 339
    },
    {
        "id": "65512d829ddbe85d",
        "type": "group",
        "z": "fca036ab5aa23301",
        "name": "get settings from Redis",
        "style": {
            "fill": "#ffcf3f",
            "label": true,
            "label-position": "n",
            "color": "#777777"
        },
        "nodes": [
            "e20436251156a60f",
            "6adaa8b423a4321e",
            "78aa02b86a2d9b5f"
        ],
        "x": 1414,
        "y": 99
    },
    {
        "id": "a6858237518cf424",
        "type": "group",
        "z": "fca036ab5aa23301",
        "name": "get settings from Redis",
        "style": {
            "fill": "#ffcf3f",
            "label": true,
            "label-position": "n",
            "color": "#777777"
        },
        "nodes": [
            "be87b21f1e94e2d6",
            "c0e33d0da64adf97"
        ],
        "x": 354,
        "y": 599
    },
    {
        "id": "1adf9a7b09d9ec3e",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "name": "Check validity of clinical study",
        "style": {
            "fill": "#bfdbef",
            "label": true
        },
        "nodes": [
            "d1295ce2fe20155c",
            "0d04e49d871e24b5",
            "afd56f63ba84e193",
            "89aade3fd4849cf3",
            "1adcfc18ea193483",
            "e52a4fe1e67ec89d",
            "221e6a37d7438241",
            "9af30450c6112b17",
            "4eedfa2c0f6d5dca",
            "5543a07a1d0be52e",
            "92a36617cc355cc4",
            "8706a9e4bba62613",
            "427c9dafee3eee2e",
            "ace69593860de565",
            "00fdcb9a7b7f71e2",
            "05a3105881a36074",
            "7d76dabf1f75f67d",
            "ec1a25f9388786d7",
            "ecd1f9618322385c",
            "413d0d4919352499",
            "43a8f21c944f48c2",
            "ad3d43f8c209bac3",
            "de5518a5c2dcf534",
            "fc41e3958fc57881",
            "e1528945b7b35bc5",
            "7df34bf278de232c",
            "a95b3eb8a3ea40dd"
        ],
        "x": 14,
        "y": 399,
        "w": 2752,
        "h": 282
    },
    {
        "id": "4baa5eae6bccba26",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "name": "Show a generic error message",
        "style": {
            "fill": "#ffbfbf",
            "label": true
        },
        "nodes": [
            "0b4394d395558302",
            "4b18021ceb965cb3",
            "6be1c8357935ded8",
            "c5912362c452ad8c"
        ],
        "x": 4404,
        "y": 379,
        "w": 402,
        "h": 122
    },
    {
        "id": "8fe7fba9478ad6c8",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "name": "Show success message",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "38c9c876683df642",
            "6e98ee16de826386",
            "25164fe0afec3d7a"
        ],
        "x": 4404,
        "y": 539,
        "w": 402,
        "h": 82
    },
    {
        "id": "cf3f4fcb8dc2573a",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "name": "Prepare the result page",
        "style": {
            "fill": "#bfdbef",
            "label": true
        },
        "nodes": [
            "c65594f62b66ba6c",
            "6e441cc056e5c53b",
            "c3df4ccf459db19f",
            "e3f83d8d0cbdf4a4",
            "e0c1393bdfa1865e",
            "908a3e8352298a3f",
            "8a97172448094a63",
            "dd8e0450df6db078",
            "21345e0676e23ae3",
            "133e012f4802a9b2",
            "82a34d65142c7d1e",
            "25277f4f1f618498",
            "e465505a38c646ab",
            "e4d80dada213b37f",
            "dc179569b9799870",
            "b286a0092acfd283",
            "3875450d706f6724",
            "f913b67552863c67",
            "866256d61e7910ed",
            "1f36f70c88f794b2",
            "2a5f44b8d1cb431c",
            "6d6546d966b508bd"
        ],
        "x": 3064,
        "y": 179,
        "w": 1292,
        "h": 382
    },
    {
        "id": "025d03bac4a1308c",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "name": "Amendment Event",
        "style": {
            "label": true
        },
        "nodes": [
            "4efce2b6e1fdfe62",
            "77a95a28986a8bfc",
            "e1b7d81d3cd06a62"
        ],
        "x": 8,
        "y": 2133,
        "w": 1164,
        "h": 1274
    },
    {
        "id": "b0647a0e3610ba68",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "name": "Initial Event",
        "style": {
            "label": true
        },
        "nodes": [
            "e40195be7e014804",
            "c3cc3bc6b0b0ab38"
        ],
        "x": 8,
        "y": 953,
        "w": 1044,
        "h": 994
    },
    {
        "id": "b21a8850dadd4a12",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "name": "Application",
        "style": {
            "label": true
        },
        "nodes": [
            "f4492470635578ae",
            "fa41432bb855af38",
            "213c3efa9b282b39",
            "23b14172f95f39ef",
            "0342ae8990d4e5d0",
            "3b0d3c603c0d1fd6",
            "e1b7d959e12be6a2"
        ],
        "x": 1208,
        "y": 933,
        "w": 1764,
        "h": 2814
    },
    {
        "id": "a7a8a74946229b91",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "name": "Main stem",
        "style": {
            "fill": "#bfdbef",
            "label": true
        },
        "nodes": [
            "4e0728471558a67e",
            "0b5e993385abdbaf",
            "b3626201f7983f76",
            "cd510823c811d7c4",
            "64a2d7cc0f15b947",
            "19967e71170ecd73",
            "d046d19b53dad465",
            "3d2f1bb1ca763691",
            "115701a7b00b4c46",
            "1f4c810a5b6057fd",
            "120256ee19425fdd",
            "a69633711211e86e",
            "f8af263b4577eb60",
            "bfd4c5ba48630dad",
            "806db9d17f47a16f",
            "6517fc922a6908a8",
            "edf88ee6c1a5aee3",
            "ec46849d03dc97ee",
            "4b8eadec1c5671af",
            "0e57f11a59848a31",
            "eefb2eeedd415df4",
            "8bda251317c47732"
        ],
        "x": 14,
        "y": 699,
        "w": 2952,
        "h": 222
    },
    {
        "id": "2642ac0e03326b5a",
        "type": "group",
        "z": "3267d34c9be8d15b",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "566562338cd9b0df",
            "938506b0fcdb6992",
            "638379cdf34e1a26",
            "0c7212f9d30a4261",
            "fb03edc920f4a1df",
            "6955cefb3033892b",
            "d11371542a48692e",
            "492202ca9715414f"
        ],
        "x": 2388,
        "y": 513,
        "w": 824,
        "h": 568
    },
    {
        "id": "2960b03e650ec0db",
        "type": "group",
        "z": "3267d34c9be8d15b",
        "name": "Get all Enrichments",
        "style": {
            "label": true,
            "label-position": "n",
            "color": "#777777"
        },
        "nodes": [
            "a636628106fb0fc7",
            "cba77b0f1fdcef09",
            "ec7d72f3b34bb1b5",
            "045185c7dd412368",
            "091d7d63f3cf4ae8",
            "c14320492a4a0812",
            "4e6270243c49367f",
            "39a4c111cd0e502b",
            "b306110f4e66b1dc"
        ],
        "x": 634,
        "y": 1139,
        "w": 1684,
        "h": 1048
    },
    {
        "id": "520c2af02903f751",
        "type": "group",
        "z": "3267d34c9be8d15b",
        "name": "New crosslinks for list of documents",
        "style": {
            "label": true,
            "fill": "#ffcf3f",
            "label-position": "n",
            "color": "#3f3f3f"
        },
        "nodes": [
            "caa91d595e7729da",
            "6118fd21f5dc9d98",
            "950db8159108fd4a",
            "f73ae19b5e770598",
            "0ef1959319d3ca48",
            "5b1f08ade618b3a5",
            "9eaabc68db190647",
            "801b0c2bfd18a3c4",
            "48932cf8043b5582",
            "0d34f04f8063645d",
            "01b5de87906e4de1",
            "8eb421dc0aa55bc1"
        ],
        "x": 1154,
        "y": 2219,
        "w": 1252,
        "h": 202
    },
    {
        "id": "1fcf1c173d72b8e7",
        "type": "group",
        "z": "3267d34c9be8d15b",
        "name": "Get instructions and vault logins",
        "style": {
            "label": true,
            "label-position": "n",
            "color": "#777777"
        },
        "nodes": [
            "38021b70803d451f",
            "94b09e2b11f23b6d",
            "811963b2b29fb32c",
            "aaca89fd0787251e"
        ],
        "x": 628,
        "y": 113,
        "w": 1364,
        "h": 614
    },
    {
        "id": "8f6ed5aec63d9d59",
        "type": "group",
        "z": "3267d34c9be8d15b",
        "name": "Get modified/created source documents/versions and related xlinks",
        "style": {
            "label": true,
            "label-position": "n",
            "color": "#777777"
        },
        "nodes": [
            "c6ebf848c0b01bb2",
            "2deb52da8866771f"
        ],
        "x": 628,
        "y": 753,
        "w": 1244,
        "h": 354
    },
    {
        "id": "037851cd06f5fc65",
        "type": "group",
        "z": "3267d34c9be8d15b",
        "name": "update xlinks for list of xlink/doc pairs",
        "style": {
            "label": true,
            "fill": "#ffcf3f",
            "label-position": "n",
            "color": "#3f3f3f"
        },
        "nodes": [
            "22f771342a04e34d",
            "fca0b135fbc227ed",
            "055b58f8c76fdbf1",
            "a3f6c4dcf4f33153",
            "c5710908ca22bd99",
            "a28fe2204ce772af",
            "e8106694503bb438",
            "3a15c73824e29585",
            "b8ae216cc6313388",
            "d497b7f0a2a80408",
            "93d3972a25eaec91",
            "2baf56e181b3a81b",
            "525560c0011b84e1"
        ],
        "x": 1154,
        "y": 2439,
        "w": 1232,
        "h": 202
    },
    {
        "id": "b018f6b429583e1c",
        "type": "group",
        "z": "3267d34c9be8d15b",
        "name": "approve xlinks",
        "style": {
            "label": true,
            "fill": "#ffcf3f",
            "label-position": "n",
            "color": "#3f3f3f"
        },
        "nodes": [
            "66a3701619ae33b4",
            "04519a2cb4965445",
            "eb5a7974bafe12d8",
            "78ef23a5f28652f8",
            "c822caf5f1f6d3dd",
            "838c955643ab351b",
            "67867b9d8d1de8e3",
            "88924727bebcece1",
            "074ba603dddbd0bb",
            "ad8b94371936c0f3"
        ],
        "x": 1154,
        "y": 2659,
        "w": 1232,
        "h": 202
    },
    {
        "id": "25f63cd1ce156e24",
        "type": "group",
        "z": "3267d34c9be8d15b",
        "name": "upversion the crosslink document to next draft version",
        "style": {
            "label": true,
            "fill": "#ffff3f",
            "label-position": "n",
            "color": "#3f3f3f"
        },
        "nodes": [
            "9f11952d3f16129c",
            "2c93528756f2e1c0",
            "3e794719248359d7",
            "55c0cb6d079de5f7",
            "80910e96181b4769",
            "c646d60d6b8d1fe7",
            "462b43452f6f93c8",
            "795bdebf223316ea",
            "9d64e34ba6e052b5",
            "bffb231a9dbf2e07",
            "d3c0565eaeed8613",
            "b2e7c3c6afc1c1c5",
            "7851c3f22cc0d19f",
            "c8a8f85f790c48fd",
            "90628a1f3e0a33c8"
        ],
        "x": 1154,
        "y": 2879,
        "w": 1472,
        "h": 322
    },
    {
        "id": "5921be1c98a95c97",
        "type": "group",
        "z": "32ccf302392ab325",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "c7efaadd103f03ab",
            "112ad226549927de",
            "c96ca9b21d127acd",
            "064dfbf497fd7675",
            "2306fc661c0fce8f",
            "1ff3562c7836d257",
            "f41131fa21eadd1a",
            "1f8f94a681476572",
            "9bb271194bb04e59",
            "0b253214fbe672c6"
        ],
        "x": 2568,
        "y": 713,
        "w": 824,
        "h": 568
    },
    {
        "id": "fd69ea7b671c7ec8",
        "type": "group",
        "z": "32ccf302392ab325",
        "name": "Get all Enrichments",
        "style": {
            "label": true,
            "label-position": "n",
            "color": "#777777"
        },
        "nodes": [
            "15bec87d7432aaf9",
            "e76b320db8a24dcf",
            "41304ce80e23ede0",
            "4d78ed85bdabae1a",
            "bbf1e46794a4a441",
            "5799f448191fa7c7",
            "dc75f7a699c004da",
            "60d92ecbd137ffc5"
        ],
        "x": 654,
        "y": 1339,
        "w": 1684,
        "h": 1048
    },
    {
        "id": "627cc5986aa125f3",
        "type": "group",
        "z": "32ccf302392ab325",
        "name": "Get instructions and vault logins",
        "style": {
            "label": true,
            "label-position": "n",
            "color": "#777777"
        },
        "nodes": [
            "50739f124cb8563b",
            "56418a5f1c01fec3",
            "8dfbdc55ff62d17e",
            "429ca0f28c6eb552"
        ],
        "x": 648,
        "y": 133,
        "w": 1764,
        "h": 814
    },
    {
        "id": "1acaa4d09a25d8a0",
        "type": "group",
        "z": "32ccf302392ab325",
        "name": "Get modified/created source documents/versions and related xlinks",
        "style": {
            "label": true,
            "label-position": "n",
            "color": "#777777"
        },
        "nodes": [
            "81e9aec5f845a51a",
            "efd44d58605fc3aa"
        ],
        "x": 648,
        "y": 953,
        "w": 1724,
        "h": 374
    },
    {
        "id": "56bca0108c880039",
        "type": "group",
        "z": "32ccf302392ab325",
        "name": "create xlink, update, approve, create version",
        "style": {
            "label": true,
            "stroke": "#a4a4a4",
            "label-position": "n",
            "color": "#777777"
        },
        "nodes": [
            "4c2cd057f4d612dd",
            "0d0607b42a600041",
            "b7487ff351fb7a6b",
            "b3ee3c13b1a0f8e6",
            "b587d10aedda5fcd",
            "386b3e9297c89e33",
            "ce482cbccec6ba9a",
            "8cea64c69e31787e",
            "991ef6455c72733e",
            "bd9bf511fd82441b",
            "095d7fef212c31e5",
            "d8b66721dacadcc8",
            "ef776e6ae30994ac",
            "d496576295362680",
            "020992df4203b447",
            "f919a01e47ab17d2",
            "d25530bf3a20932d",
            "4bbfae722449baaa",
            "23aca15730715d76",
            "39f91ba891be52fb",
            "845f6eae17b50a7d",
            "a2f3b0281c0886fa",
            "9c4edc1d36acfd39",
            "68f29b259a54ab24"
        ],
        "x": 654,
        "y": 2413,
        "w": 3658,
        "h": 1108
    },
    {
        "id": "bde86bab3f2c1ca4",
        "type": "group",
        "z": "32ccf302392ab325",
        "name": "Get all xlink versions matching to source documents/versions",
        "style": {
            "fill": "#ffcf3f",
            "label": true,
            "label-position": "n",
            "color": "#3f3f3f"
        },
        "nodes": [
            "e3c178d7b608883b",
            "fad0a5373258034c",
            "447a4057f42cad0a",
            "95b08c0e9b4188a1"
        ],
        "x": 2454,
        "y": 2219,
        "w": 822,
        "h": 102
    },
    {
        "id": "e40195be7e014804",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "g": "b0647a0e3610ba68",
        "name": "Create new clinical study event",
        "style": {
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "127f606ce23423fd",
            "09acfdce79ce877b",
            "1125ca63681257a8",
            "e81f7d4c11cd8c6f",
            "f57054fb3844241f",
            "e305967f4ea2cf17",
            "780bdf10996d5dd7",
            "9059fa56b54821ca",
            "52e92467706337e4",
            "5eaedb53b36ae3ba",
            "643f9f0f66032d88",
            "99b2acd236550eec",
            "53f08c6da7acde3e",
            "3916d23c39b50211",
            "08dcb3332d416a46",
            "20c245ddd5dc2999",
            "bda7c5f6b4546054",
            "cb1e931c1520a0a2",
            "e9daca4394c17dc9",
            "43b7bc103c77a4ea",
            "7c44e24c5afad6c7",
            "9430be7746db98ea",
            "d982ee4112ccfb11",
            "8ed76db6b0e4920e",
            "f8390b9b8f960aab",
            "fb7f6db22a82a5ce",
            "1d834a7935beee6b",
            "05d9e73aaf4a53f9",
            "8c22964409200907",
            "69470779e142a87f",
            "73d1b1cc1b17b0a8",
            "8fde7159b4debb7a",
            "ac182d7b69f0f86a",
            "8cfa0940562a9266",
            "fd63e95672fb41ae",
            "eadb4a6f7d0dd4bc",
            "1e68c40c7d454e51",
            "b2a1451aac0e94f7",
            "5872344ca0191238"
        ],
        "x": 34,
        "y": 1199,
        "w": 972,
        "h": 722
    },
    {
        "id": "f4492470635578ae",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "g": "b21a8850dadd4a12",
        "name": "Create Applications",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "9bc8ca63c489f130",
            "0e58817144b122ca",
            "beaeeede45688d8f",
            "0f325294ff3deaf7",
            "352697d0f9b3b340",
            "5ee56af170f12036",
            "19e4cc04ce3ff2f3",
            "5569a704502d347e",
            "5f8c31a0b75604dc",
            "aeba6128dc0f5605",
            "26ef94169b200292",
            "c50f180f6dc5b7a7",
            "1f9e9253f0f4ed09",
            "bcdb50eb60cfc78d",
            "c87aa0067f73b660",
            "f7a46ec9815bec9e",
            "c316263822a4e043",
            "c526a83f886ee66c",
            "a710fd5c93105bef",
            "d43cbcb95adf6c56",
            "ee0a41c3e261db60"
        ],
        "x": 1234,
        "y": 3059,
        "w": 972,
        "h": 382
    },
    {
        "id": "c3cc3bc6b0b0ab38",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "g": "b0647a0e3610ba68",
        "name": "Check for existing CTA Application Event",
        "style": {
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "f14722cf1050e3b6",
            "e1677939b436f9e1",
            "ace8a989e5fa795d",
            "c6e7a2c0aa81952d",
            "91a1c661f7629edc",
            "82f3a1c97692584d",
            "5301adb11c7b2c3a",
            "bdf854e2d1181a35",
            "a21361800a8e5222",
            "c83461d786b5f389",
            "3758841ab014d3be"
        ],
        "x": 34,
        "y": 979,
        "w": 992,
        "h": 182
    },
    {
        "id": "fa41432bb855af38",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "g": "b21a8850dadd4a12",
        "name": "Checking if already has EU CTR",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "877d493c814eb116",
            "eaa9fadb6a229543",
            "eece97d5539892a0",
            "147046e7feeea1d8",
            "181528ce036da672",
            "14f990ede77e57be",
            "bc0df4977aee6128",
            "ac5f910b06d8544b",
            "0979b10c1cae59a9"
        ],
        "x": 1234,
        "y": 959,
        "w": 972,
        "h": 222
    },
    {
        "id": "213c3efa9b282b39",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "g": "b21a8850dadd4a12",
        "name": "Collect Information",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "2bd0ad048ce6d34e",
            "529382b422e33baf",
            "80659552c324848c",
            "865bb03421f66f06",
            "5e50d16ff43a82fd",
            "1179a3687c6cf5a6",
            "886859ca7a54f7fd",
            "265347a384987222",
            "b44bfa5ffe29b60e",
            "5d3396e25a8c72c4",
            "d6bda7745030b8a0",
            "65e5881ebae4daa7",
            "a5c49e2191c98551",
            "71a35f478418d5d7",
            "1710ed53d4d37b5c",
            "ebb4d9b0095025e2",
            "5b81fc0c9cee31d0",
            "98a09d8faa795864",
            "551b9623d7990835",
            "d63ba5dad0268d14",
            "0c293fa5ea1d40ae",
            "3ca6345f6ae806b8",
            "d57e93c3e4dd9068",
            "36831944ea231a2c",
            "4931687c32f891d3",
            "26ea46e253a36a17",
            "6882d811cc48713f",
            "40898951895346d8",
            "c47ac8ab0a1808e1",
            "5c2196dbbf15ce94",
            "dbd00f23f54f267e",
            "96ab22406c6dcd7e",
            "c89d44f157d80bc4",
            "40b6e35085a52486"
        ],
        "x": 1234,
        "y": 2499,
        "w": 1712,
        "h": 522
    },
    {
        "id": "23b14172f95f39ef",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "g": "b21a8850dadd4a12",
        "name": "CTR process - Select non-CTR countries",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "e9ca3eba68b20dea",
            "f3946df6e7b32134",
            "1d2c66618b3e6c4f",
            "1149f834be044e54",
            "4ad7909a97e437a7",
            "078c240515b5297c",
            "9026e264d0fa9d16",
            "5b674da7b3b3c493",
            "e06fc599ded4e970",
            "99b5a29dc4898dc1",
            "f54f30035d27303f",
            "ea0561a17a3e4733",
            "7147d272c95b9b91",
            "232035efdfcc0ede",
            "6384e2cf76fa1a73",
            "2a5dbf3a114a6c7f",
            "5c5f8c6d3d14579b",
            "1ce0090dbddae5e8",
            "b1fa9325cae27f86",
            "ea17aeeb8c17f5aa",
            "30d0e763665a0f4f",
            "8f4a274d1b5bd632",
            "4379a5a24c6d2e1a",
            "c935b2229ba86e1a",
            "a29e783cc968e8c6",
            "604f50bb6db90c11",
            "52fb1526b6af11ee",
            "bdf4c22bb3725613",
            "4cbcdab4ed0ad26d",
            "b43c0eed548cafd3",
            "6a6c7efc7e51bf6d",
            "b7de0fe7ad66d2ca",
            "959da61bde9bb8b0",
            "7e622617fec07ddd",
            "b219b669e1aa3a1f",
            "4f6dbedf8f6e524e",
            "bd46d5f7dd3c56b5",
            "aabf522cbde63186",
            "8e7df44115a60b5e",
            "9304d4da4efa5f6c",
            "93250f2631c4e047",
            "db236dd4e340124a"
        ],
        "x": 1234,
        "y": 1879,
        "w": 1492,
        "h": 602
    },
    {
        "id": "0342ae8990d4e5d0",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "g": "b21a8850dadd4a12",
        "name": "CTR process - Select CMS Countries",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "86268d6a0b837218",
            "97b53a3a8dd09761",
            "4cac1cf727b0ef9f",
            "3db241b53e5fc1f6",
            "f366310a370cb263",
            "2b6a8988be4f6aa1",
            "59a605b44b4e458f",
            "8f7f5b7af1e523e8",
            "cc8836b7ba4047c6",
            "309297c842b780cc",
            "09ab16f41f604cb4",
            "eabb62e6f580519c",
            "077d32a3b26a735d",
            "a0f6e8171e172d4a",
            "f0987bd0f1eba5cc",
            "1c94bab016a6778b",
            "3d50cf1b7e19fa64",
            "6d5e72093e4f1763",
            "62db2312adce6927",
            "2b6443fc1090bbdb",
            "2a898795a346bdae",
            "fc53ea68445af2da",
            "380f6e75443f7e3e",
            "1f5889e43a4b930a",
            "a6055687aa65ad2f",
            "a4abf52b8768caf0",
            "5945973ffe5f9e1c",
            "1e2e089e5f67454c",
            "a53bccc1a94c03cb",
            "d0a29d4805a80d8d",
            "4c13bcff35809281",
            "13bd5f110d29cf33",
            "45d06b2c211d3315"
        ],
        "x": 1234,
        "y": 1299,
        "w": 972,
        "h": 562
    },
    {
        "id": "3b0d3c603c0d1fd6",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "g": "b21a8850dadd4a12",
        "name": "Create Application Country",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "0571712f078a2137",
            "eb1b125d55482241",
            "22075ff5491384ec",
            "bbd3c599a4d4a203",
            "b9d002f72c39627d",
            "fc7d31296cf7b12f",
            "00c17791fffdd382",
            "90e528859987db49",
            "66ccba17afd6cf21",
            "646ee80e0e3c6a5f",
            "e47b4d5d5c74d6f1",
            "9a87a1f173d5e53f",
            "80c81f840d3d8bf8",
            "8dd59e74376d6937",
            "d43907b12f64f459"
        ],
        "x": 1234,
        "y": 3459,
        "w": 1312,
        "h": 262
    },
    {
        "id": "4efce2b6e1fdfe62",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "g": "025d03bac4a1308c",
        "name": "Create new clinical study event",
        "style": {
            "fill": "#ffffbf",
            "label": true,
            "stroke": "#6f2fa0"
        },
        "nodes": [
            "34ea1cc0751f076c",
            "9ffd347dc28797f2",
            "37089233c845847c",
            "0b502743c2105427",
            "b8f295cb419ef511",
            "4fca64c6e5d7ed76",
            "7afeedf6bafee44a",
            "c407710e5c667233",
            "463d51c07d96306f",
            "66ee8a94fb2d7adc",
            "bc0bf892de0b4278",
            "5451e2d8fb92f9f3",
            "9a5044524de15b1f",
            "8b5fc85d413405da",
            "7a6a4a210e0afacd",
            "c87ff740f015c7a0",
            "156170586af1680b",
            "4a5932fab86abe01",
            "677b8bbeb3897d59",
            "18edec20a999d8ea",
            "286d257af08d6582",
            "b3fb81e7e5885281",
            "c936f98b296593d4",
            "adbccecc70ccc1de",
            "57f50ef402c17c23",
            "6f439a7a79524586",
            "6c02ed1e44e31e22",
            "ea80771e71258993",
            "d3885638377c2c4a",
            "1dd759108b42270b",
            "55ba323f168715bb",
            "67d9ed8e3673348f",
            "d75de5f5f81a0adc",
            "c4dd41f3d158cecd",
            "74f2aa2cafa46f84",
            "65c358887f4e068f",
            "37f99f391a826882",
            "b9c7b78dd7d44017",
            "2eae4c60b1476596",
            "745c1f28d5453c5b",
            "c52cd54c453f4f22",
            "c9dd85cca0928b83",
            "9f0baf50744a8972",
            "359d517b2871831f",
            "0ed372e867cabe51"
        ],
        "x": 34,
        "y": 2599,
        "w": 1072,
        "h": 782
    },
    {
        "id": "77a95a28986a8bfc",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "g": "025d03bac4a1308c",
        "name": "Select Event Keyword",
        "style": {
            "fill": "#ffffbf",
            "label": true,
            "stroke": "#6f2fa0"
        },
        "nodes": [
            "e4914f34cdb1e255",
            "82d495ca62c54a03",
            "1a580dd7501928eb",
            "20db1f0318099f37",
            "25d332512d7867b8",
            "3f3ba07ae696a258",
            "eaaae11c9d0f5209",
            "82f885e754fc45bd"
        ],
        "x": 44,
        "y": 2159,
        "w": 1062,
        "h": 142
    },
    {
        "id": "e1b7d81d3cd06a62",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "g": "025d03bac4a1308c",
        "name": "Provide Event information",
        "style": {
            "stroke": "#6f2fa0",
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "787961bfe48f9c3f",
            "5ec534431ecdbbc3",
            "6d77e6da0d189a2f",
            "83bfb2c8803ef98a",
            "1c245cad2a9ec068",
            "23fa5da47fb79950",
            "b05a3d51f61273c5",
            "fede6ae32eca8534",
            "0eab635811c284a9",
            "9c10197129e36e22",
            "29d6cf22180fb772",
            "5a37f175503d5345",
            "aec7dcad5b069c99",
            "83cd95335c63883a",
            "2d6057ae01606945"
        ],
        "x": 34,
        "y": 2319,
        "w": 1112,
        "h": 262
    },
    {
        "id": "38021b70803d451f",
        "type": "group",
        "z": "3267d34c9be8d15b",
        "g": "1fcf1c173d72b8e7",
        "name": "get instructions",
        "style": {
            "fill": "#ffcf3f",
            "label": true,
            "color": "#3f3f3f",
            "label-position": "n"
        },
        "nodes": [
            "764bb9beb8312077",
            "b7519bf841fffd19",
            "2a6f4f878f1a1a40",
            "9f5007ca0efb3b19",
            "e505e2ef3046c9fe",
            "9864f03deff65642",
            "654951cedb7d0931",
            "81bfe1b45e73b92f",
            "0c82347a3b9fa968",
            "a5db97da4d154c50"
        ],
        "x": 654,
        "y": 299,
        "w": 1312,
        "h": 202
    },
    {
        "id": "c6ebf848c0b01bb2",
        "type": "group",
        "z": "3267d34c9be8d15b",
        "g": "8f6ed5aec63d9d59",
        "name": "Get new and updated source documents/versions",
        "style": {
            "fill": "#ffcf3f",
            "label": true,
            "color": "#3f3f3f",
            "label-position": "n"
        },
        "nodes": [
            "b6ed57763abd8ea6",
            "0ba994d6e7a1b545",
            "84896e26921b7704",
            "bfa3acf973ae3eca",
            "a0a0eda6b66b6cae",
            "db313c314d0f44a5",
            "164560a5ce4ae4cb",
            "9b377aafde884640",
            "85c5e43fe42198f1"
        ],
        "x": 654,
        "y": 779,
        "w": 1192,
        "h": 202
    },
    {
        "id": "2deb52da8866771f",
        "type": "group",
        "z": "3267d34c9be8d15b",
        "g": "8f6ed5aec63d9d59",
        "name": "Get all xlink versions matching to source documents/versions",
        "style": {
            "fill": "#ffcf3f",
            "label": true,
            "label-position": "n",
            "color": "#3f3f3f"
        },
        "nodes": [
            "8c09f2f654dcad02",
            "1471bb087e0151a1",
            "01ec0a3eb55c5db4",
            "e4cc6d715f68e4d5",
            "f1c432ba3fc9ad46"
        ],
        "x": 654,
        "y": 999,
        "w": 1132,
        "h": 82
    },
    {
        "id": "94b09e2b11f23b6d",
        "type": "group",
        "z": "3267d34c9be8d15b",
        "g": "1fcf1c173d72b8e7",
        "name": "Get Session for source vault",
        "style": {
            "label": true,
            "fill": "#addb7b",
            "color": "#3f3f3f",
            "label-position": "n"
        },
        "nodes": [
            "64ef676694a433f3",
            "ae338033f5247ad4",
            "6611928e79d7cec0",
            "daeb8113ed0d5119"
        ],
        "x": 654,
        "y": 519,
        "w": 1242,
        "h": 82
    },
    {
        "id": "811963b2b29fb32c",
        "type": "group",
        "z": "3267d34c9be8d15b",
        "g": "1fcf1c173d72b8e7",
        "name": "1 start in regular intervals, login, define settings and save",
        "style": {
            "label": true,
            "fill": "#bfdbef",
            "label-position": "n",
            "color": "#777777"
        },
        "nodes": [
            "2e8c402ed6421625",
            "93013df967f1cb8e",
            "dc0f2f8086e60ec3",
            "24ac6a7f89b5b213",
            "6d6923bcf7549d3a",
            "5d0d835f77a50e61",
            "4ef17aecca367dc4",
            "56f8c9217e41fc9b"
        ],
        "x": 814,
        "y": 139,
        "w": 1152,
        "h": 162
    },
    {
        "id": "aaca89fd0787251e",
        "type": "group",
        "z": "3267d34c9be8d15b",
        "g": "1fcf1c173d72b8e7",
        "name": "Get Session for source vault",
        "style": {
            "label": true,
            "fill": "#addb7b",
            "color": "#3f3f3f",
            "label-position": "n"
        },
        "nodes": [
            "9d99c86e99034359",
            "7bbbe1cc5739c7eb",
            "3b2f9bc93d9d5d57",
            "e060af0474c4c9f7"
        ],
        "x": 654,
        "y": 619,
        "w": 1242,
        "h": 82
    },
    {
        "id": "ec7d72f3b34bb1b5",
        "type": "group",
        "z": "3267d34c9be8d15b",
        "g": "2960b03e650ec0db",
        "name": "Get objects according to instructions",
        "style": {
            "label": true,
            "fill": "#ffcf3f",
            "label-position": "n",
            "color": "#3f3f3f"
        },
        "nodes": [
            "cfd7fb9f3bb507bc",
            "f548fc20fbf6a966",
            "e2dac2eaf5e7a887",
            "d36af2107dca85dd"
        ],
        "x": 888,
        "y": 1219,
        "w": 1404,
        "h": 302
    },
    {
        "id": "566562338cd9b0df",
        "type": "group",
        "z": "3267d34c9be8d15b",
        "g": "2642ac0e03326b5a",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "d27931e31cae90f8",
            "3e1b8752678fe7bc",
            "2e1c79bf6b5126f7",
            "8d8c3a3fa49f05d4",
            "cf346fab2c5943b4",
            "ef5ff2c1ff7b1dd2",
            "94d537ed54f56e35"
        ],
        "x": 2414,
        "y": 719,
        "w": 772,
        "h": 142
    },
    {
        "id": "938506b0fcdb6992",
        "type": "group",
        "z": "3267d34c9be8d15b",
        "g": "2642ac0e03326b5a",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7a0d0938de68fd01",
            "8ac0f5a502daefd5",
            "d2aaeaf852423828",
            "24da094bdc90b865"
        ],
        "x": 2414,
        "y": 899,
        "w": 772,
        "h": 82
    },
    {
        "id": "638379cdf34e1a26",
        "type": "group",
        "z": "3267d34c9be8d15b",
        "g": "2642ac0e03326b5a",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b269b431eee19dfe",
            "e6675b953b33e029",
            "a158bbf13150ccbc",
            "1d608c04c382259a",
            "64dd237314ff74cf",
            "7543e050ba757e0e",
            "1cea4016af6abc62"
        ],
        "x": 2414,
        "y": 539,
        "w": 772,
        "h": 142
    },
    {
        "id": "045185c7dd412368",
        "type": "group",
        "z": "3267d34c9be8d15b",
        "g": "2960b03e650ec0db",
        "name": "Get picklist according to instructions",
        "style": {
            "label": true,
            "fill": "#ffcf3f",
            "label-position": "n",
            "color": "#3f3f3f"
        },
        "nodes": [
            "896962c2f31f9f4d",
            "7655937c9393c1a3",
            "810558cfb37deaa9",
            "7d8b8fab12d1dffd"
        ],
        "x": 888,
        "y": 1539,
        "w": 1064,
        "h": 302
    },
    {
        "id": "091d7d63f3cf4ae8",
        "type": "group",
        "z": "3267d34c9be8d15b",
        "g": "2960b03e650ec0db",
        "name": "Get mapping according to instructions",
        "style": {
            "label": true,
            "fill": "#ffcf3f",
            "label-position": "n",
            "color": "#3f3f3f"
        },
        "nodes": [
            "5eb774c9b9e0051e",
            "f25b741fce21a884",
            "4b8871e780cde765",
            "89198508be36b423"
        ],
        "x": 888,
        "y": 1859,
        "w": 1064,
        "h": 302
    },
    {
        "id": "ef776e6ae30994ac",
        "type": "group",
        "z": "32ccf302392ab325",
        "g": "56bca0108c880039",
        "name": "New crosslinks for list of documents",
        "style": {
            "label": true,
            "fill": "#ffcf3f",
            "label-position": "n",
            "color": "#3f3f3f"
        },
        "nodes": [
            "4ae38e7a8fc4137a",
            "fe91fdf3664267b3",
            "a046b66f689f0103",
            "98bff536a7899301",
            "27aaa00a66ac305c",
            "37705f57c15c0028",
            "84d2d885eab2a49d",
            "124aafaa5fce09e1",
            "ed4a759ee7b60391",
            "7486b4e656d25b50",
            "eec083cedae89262",
            "e691ceecf149b649",
            "a65ce93c89c2599a",
            "d4d55db365ec4e3d",
            "fc82347c85b692dd",
            "601dd3c7dc2817a5",
            "3dbcba8702bb65e4",
            "db1f8c0193412c4d",
            "95d4b4ac2dd7c142",
            "17c4fb4d7dad9588",
            "7ce5bb81dd221063"
        ],
        "x": 2294,
        "y": 2439,
        "w": 1992,
        "h": 242
    },
    {
        "id": "d496576295362680",
        "type": "group",
        "z": "32ccf302392ab325",
        "g": "56bca0108c880039",
        "name": "update xlinks for list of xlink/doc pairs",
        "style": {
            "label": true,
            "fill": "#ffcf3f",
            "label-position": "n",
            "color": "#3f3f3f"
        },
        "nodes": [
            "3f6d08e5985c1ee6",
            "2f1a17522978e333",
            "e0a56539a6eb8f83",
            "1cd5a9446f947f14",
            "51a7fc6be94ab1c3",
            "43c95e6e9db87c7a",
            "d8989a5a8e7f7392",
            "9e91e62cc3a6ca70",
            "df15d77211abf767",
            "99b037967a704cef",
            "688a4cd78e17dea5",
            "f6df9325f7fcf4ee",
            "c304a13f5e331386",
            "33ad49373220d220",
            "eba5c10f5be82a5d",
            "3af2752e5c61f07e",
            "67b2a2395494575b",
            "2dde79e37bfd9a7e",
            "d1e7ad315bc25c6b",
            "ea1f0b63744ce41a"
        ],
        "x": 2294,
        "y": 2699,
        "w": 1832,
        "h": 202
    },
    {
        "id": "020992df4203b447",
        "type": "group",
        "z": "32ccf302392ab325",
        "g": "56bca0108c880039",
        "name": "approve xlinks",
        "style": {
            "label": true,
            "fill": "#ffcf3f",
            "label-position": "n",
            "color": "#3f3f3f"
        },
        "nodes": [
            "231ef98d049b3df4",
            "6c4a81fb20829fdd",
            "013646429b7bbe47",
            "6470b39167ae9d5d",
            "c66395e6cab17ac0",
            "71f4891304500c83",
            "19823a545a71267e",
            "a92b04646d9c6f2e",
            "d3b98b30a63a3596",
            "3eaf6da9cf266a16",
            "af9a694663793e5b",
            "57013fc0b1ca7087"
        ],
        "x": 2294,
        "y": 2919,
        "w": 1792,
        "h": 202
    },
    {
        "id": "f919a01e47ab17d2",
        "type": "group",
        "z": "32ccf302392ab325",
        "g": "56bca0108c880039",
        "name": "upversion the crosslink document to next draft version",
        "style": {
            "label": true,
            "fill": "#ffff3f",
            "label-position": "n",
            "color": "#3f3f3f"
        },
        "nodes": [
            "62482c2b6fe5d356",
            "b4a72a8be8ce5d3d",
            "f51c8f2b94947845",
            "e47ea65863ab8ee8",
            "c06c861fe1ebfd32",
            "aece933906d11804",
            "24c7af1c1b65735a",
            "f508067b8052749b",
            "a3afcdbe24dc6eb3",
            "38f19c85f8776edb",
            "2bf5639b323869c7",
            "2033738e5affc8df",
            "cdbab5695af22447",
            "671e961d7f1d5256",
            "5a051ccd4278ef54",
            "0a29d75785637f19",
            "cc5b2d57360c96c7",
            "86277ed87d5d5203",
            "441779e175d965b5",
            "36fca2e5794c69c5",
            "abaaf1402b79ef05",
            "1fcd58a9e26226c2",
            "f17e97139cc1335f",
            "1a8c840ed51562f0",
            "1b43fe3be09de519",
            "d79797fa2d8e6d07"
        ],
        "x": 2294,
        "y": 3139,
        "w": 1892,
        "h": 342
    },
    {
        "id": "429ca0f28c6eb552",
        "type": "group",
        "z": "32ccf302392ab325",
        "g": "627cc5986aa125f3",
        "name": "get instructions",
        "style": {
            "fill": "#ffcf3f",
            "label": true,
            "color": "#3f3f3f",
            "label-position": "n"
        },
        "nodes": [
            "a4a654ba0fa1d4aa",
            "4fa716b595bc5a73",
            "125e3939a8087b54",
            "5d4e65bff3be5948",
            "bc609eeb15ca8db3",
            "68fb25c91563f7fa",
            "b29b726eb9cc87b8",
            "408ac06e1066e45f",
            "d348b58ca7101db9",
            "a6173c01ed59b86f",
            "a33054588653f5e0",
            "a32cf550f15f2149",
            "ac4a83b089c383d2",
            "31af2fa0558d0fc5",
            "f31ed7f84d10db2d",
            "ac87a34d55764163",
            "f4fca5f780970cc4",
            "0dba09b269e5f30b",
            "ac370157a733f606"
        ],
        "x": 674,
        "y": 439,
        "w": 1712,
        "h": 282
    },
    {
        "id": "81e9aec5f845a51a",
        "type": "group",
        "z": "32ccf302392ab325",
        "g": "1acaa4d09a25d8a0",
        "name": "Get new and updated source documents/versions",
        "style": {
            "fill": "#ffcf3f",
            "label": true,
            "color": "#3f3f3f",
            "label-position": "n"
        },
        "nodes": [
            "c2f38571712ac056",
            "d79d102ad4097dd6",
            "a1a5eb79e0febac3",
            "f051b5df1b4109a6",
            "1c8e4c4cdf03eee2",
            "fceb3d3d2e109212",
            "1aa5333fd512107a",
            "bda58b47abff21b6",
            "9819636b1d12be9c",
            "da98651e508e280e",
            "4b5f5ecc9586eae4",
            "761ee2b200f2362d",
            "901c4527bc686831",
            "cea63348a4243ca7"
        ],
        "x": 674,
        "y": 979,
        "w": 1672,
        "h": 202
    },
    {
        "id": "efd44d58605fc3aa",
        "type": "group",
        "z": "32ccf302392ab325",
        "g": "1acaa4d09a25d8a0",
        "name": "Get all xlink versions matching to source documents/versions",
        "style": {
            "fill": "#ffcf3f",
            "label": true,
            "label-position": "n",
            "color": "#3f3f3f"
        },
        "nodes": [
            "1f7bb3f9cee07698",
            "147a9502b275b3c1",
            "5df8e0d3f39b8b71",
            "8e8c0131b37a7786",
            "2a3858970a774fd8",
            "c653bd43402589c0",
            "a636dd3b7fabfe4a"
        ],
        "x": 674,
        "y": 1199,
        "w": 1572,
        "h": 102
    },
    {
        "id": "50739f124cb8563b",
        "type": "group",
        "z": "32ccf302392ab325",
        "g": "627cc5986aa125f3",
        "name": "Get Session for source vault",
        "style": {
            "label": true,
            "fill": "#addb7b",
            "color": "#3f3f3f",
            "label-position": "n"
        },
        "nodes": [
            "9e5f2290ac163ac6",
            "4edbbaa923361a34",
            "8eb57d4712531671",
            "19bde3e0fb9dfb78"
        ],
        "x": 674,
        "y": 739,
        "w": 1092,
        "h": 82
    },
    {
        "id": "56418a5f1c01fec3",
        "type": "group",
        "z": "32ccf302392ab325",
        "g": "627cc5986aa125f3",
        "name": "login, define settings and save",
        "style": {
            "label": true,
            "fill": "#bfdbef",
            "label-position": "n",
            "color": "#777777"
        },
        "nodes": [
            "04be81a30ca8b5f2",
            "6d6a4fcc6fff5a7a",
            "70cae716aaa25fda",
            "cfadd0fab9ef544b",
            "777a7cc7782db188",
            "77a81cf3288f38df",
            "9dba81b02b1c9883",
            "d0a3763e41c828b1",
            "3ce9fc6e576dabe1",
            "27f0ad638de63534",
            "680916713482071c",
            "27776784864da7d3",
            "74ef0e332df6263a",
            "91facf7f2cde805d",
            "78537d38ed716bca",
            "49f8195583d786cf",
            "c012f787da98de2b",
            "65c7183a4ac89787",
            "7cd49bbb21845b99",
            "5d8fcbc38bdd98ae"
        ],
        "x": 674,
        "y": 159,
        "w": 1652,
        "h": 262
    },
    {
        "id": "8dfbdc55ff62d17e",
        "type": "group",
        "z": "32ccf302392ab325",
        "g": "627cc5986aa125f3",
        "name": "Get Session for source vault",
        "style": {
            "label": true,
            "fill": "#addb7b",
            "color": "#3f3f3f",
            "label-position": "n"
        },
        "nodes": [
            "ed87816caa006967",
            "fdc58e621ebbbe79",
            "569532f3498a01b6",
            "318fe22d13edfa91"
        ],
        "x": 674,
        "y": 839,
        "w": 1092,
        "h": 82
    },
    {
        "id": "41304ce80e23ede0",
        "type": "group",
        "z": "32ccf302392ab325",
        "g": "fd69ea7b671c7ec8",
        "name": "Get objects according to instructions",
        "style": {
            "label": true,
            "fill": "#ffcf3f",
            "label-position": "n",
            "color": "#3f3f3f"
        },
        "nodes": [
            "5c0e24dc64906e80",
            "db3791d9ed978489",
            "c9d97f19c3150a81",
            "39bdbb6eb6b7e9a6",
            "883c657b5f0a1cea"
        ],
        "x": 908,
        "y": 1419,
        "w": 1404,
        "h": 302
    },
    {
        "id": "c7efaadd103f03ab",
        "type": "group",
        "z": "32ccf302392ab325",
        "g": "5921be1c98a95c97",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "1b602c62a8f8490b",
            "d9a2762c2e2ad88a",
            "88ffdf68af18353e",
            "48fe5631df2c493f"
        ],
        "x": 2594,
        "y": 1099,
        "w": 772,
        "h": 82
    },
    {
        "id": "112ad226549927de",
        "type": "group",
        "z": "32ccf302392ab325",
        "g": "5921be1c98a95c97",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "140a8db09b126d12",
            "16c13a2dce568692",
            "e3cf621d12ed62ba",
            "63d3f29559e1ebef"
        ],
        "x": 2594,
        "y": 739,
        "w": 772,
        "h": 82
    },
    {
        "id": "4d78ed85bdabae1a",
        "type": "group",
        "z": "32ccf302392ab325",
        "g": "fd69ea7b671c7ec8",
        "name": "Get picklist according to instructions",
        "style": {
            "label": true,
            "fill": "#ffcf3f",
            "label-position": "n",
            "color": "#3f3f3f"
        },
        "nodes": [
            "7040b85238e089d1",
            "45758664e9dcef85",
            "0f92c18136fd3dc8",
            "f9dfa363677e53f2",
            "7d904bf04f4f0d3f"
        ],
        "x": 908,
        "y": 1739,
        "w": 1298,
        "h": 302
    },
    {
        "id": "bbf1e46794a4a441",
        "type": "group",
        "z": "32ccf302392ab325",
        "g": "fd69ea7b671c7ec8",
        "name": "Get mapping according to instructions",
        "style": {
            "label": true,
            "fill": "#ffcf3f",
            "label-position": "n",
            "color": "#3f3f3f"
        },
        "nodes": [
            "6240821847615af2",
            "9d7a8b92db25bb45",
            "2fb1f8ac58d94586",
            "eeb4b752bdaa01ef",
            "5a08d75fb4074cc4"
        ],
        "x": 908,
        "y": 2059,
        "w": 1298,
        "h": 302
    },
    {
        "id": "1f8f94a681476572",
        "type": "group",
        "z": "32ccf302392ab325",
        "g": "5921be1c98a95c97",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "65a23e1026df92f0",
            "5026767d85263364",
            "c33863e74002c7d8",
            "ddaeb86daaab9cdf"
        ],
        "x": 2594,
        "y": 919,
        "w": 772,
        "h": 82
    },
    {
        "id": "d36af2107dca85dd",
        "type": "group",
        "z": "3267d34c9be8d15b",
        "g": "ec7d72f3b34bb1b5",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "70b99aa11903a140",
            "97352a34edca0a7e",
            "c6c5d288b0d069c6",
            "161ca1539f716105",
            "e3f9fcdaf5c55e44",
            "38de27d039b9421d",
            "8d79508e559979cf",
            "20f4c29195ed5b64",
            "93fcf8e1e140665c",
            "0e73f38070ffcfdb",
            "a450771d6bf0134c"
        ],
        "x": 914,
        "y": 1299,
        "w": 1352,
        "h": 142
    },
    {
        "id": "7d8b8fab12d1dffd",
        "type": "group",
        "z": "3267d34c9be8d15b",
        "g": "045185c7dd412368",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "09cb42a8e4dc129f",
            "6703756f13602083",
            "54072a757a438c43",
            "bef12c9d6a3d0122",
            "116d75de4f9177a3"
        ],
        "x": 914,
        "y": 1619,
        "w": 1012,
        "h": 142
    },
    {
        "id": "89198508be36b423",
        "type": "group",
        "z": "3267d34c9be8d15b",
        "g": "091d7d63f3cf4ae8",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "079ca70a4327014d",
            "9f2042d0351c259e",
            "b93a7bc56bfc99f5",
            "343d6ae5aa82148c",
            "cbbb1a8addbf9438"
        ],
        "x": 914,
        "y": 1939,
        "w": 1012,
        "h": 142
    },
    {
        "id": "c9d97f19c3150a81",
        "type": "group",
        "z": "32ccf302392ab325",
        "g": "41304ce80e23ede0",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "8e6f0e445fe834fd",
            "d0e185a4bfe350ac",
            "a0e45cab2802cf07",
            "43d96a0c94607243",
            "5f16de4c7ec4bf71",
            "7bb2f67d59a99ce1",
            "a34ef488b787110f",
            "cdc14257acca5730",
            "fcd73c6797d71c36",
            "ed32e152cfaf8dd3",
            "b89ccd2b6a4fe943",
            "abac2caf7c1bcc06"
        ],
        "x": 934,
        "y": 1499,
        "w": 1352,
        "h": 142
    },
    {
        "id": "0f92c18136fd3dc8",
        "type": "group",
        "z": "32ccf302392ab325",
        "g": "4d78ed85bdabae1a",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e771e758c444a406",
            "c39b4bba303e859e",
            "c2cbee537b4269aa",
            "b332f296eb49434e",
            "ef27b3b6b9051978"
        ],
        "x": 934,
        "y": 1819,
        "w": 1012,
        "h": 142
    },
    {
        "id": "2fb1f8ac58d94586",
        "type": "group",
        "z": "32ccf302392ab325",
        "g": "bbf1e46794a4a441",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a37dd9a1bb2b8117",
            "737be07023240fb1",
            "a97c47fec71fbe28",
            "293ff87595bea7c7",
            "0d5a5d47eaecf373",
            "40dc7c66631ca966"
        ],
        "x": 934,
        "y": 2139,
        "w": 1012,
        "h": 142
    },
    {
        "id": "5e4f497cc3eacc9e",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "name": "Records",
        "style": {
            "label": true
        },
        "nodes": [
            "1ad0402c6eac4a81",
            "4a932e6034254d18",
            "eb7523f05c7170f0",
            "0cad5663dc4721fe",
            "2258a8ecc4d06406",
            "7dbb9c6933b0187b"
        ],
        "x": 3028,
        "y": 753,
        "w": 1324,
        "h": 2528
    },
    {
        "id": "4a932e6034254d18",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "g": "5e4f497cc3eacc9e",
        "name": "Create Submission",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "62640940a60a1f05",
            "898365ea0e27f9fa",
            "fd61c358f16a025d",
            "9398e7263bf82b17",
            "b4d75ca5d1862d0d",
            "19b4e65ee7032903",
            "f58d0bb835412fc4",
            "3a5fef5ba445dca6",
            "8e82a3e29f089f62",
            "7f14e480377ecb8f",
            "a77d51b53d8a6f23",
            "c871db4946297902",
            "14be5b3467d426ef",
            "1b109bb176828d44",
            "857c942e1e147c0c",
            "9e1f9abf0b7f18c2",
            "8d568405b4ec34f2",
            "a951ef41ea04daa1",
            "675035dafe7624c4",
            "a6fdd8a4c088efcd",
            "91c1fc453443a8e3",
            "d8d634dbb1feb7f0",
            "2a00af4ef68684ee",
            "b3093d1ee9de67e1",
            "71e04109ad804aa3",
            "b89f95ec9abb8084",
            "f5854a7cc17c0aa7",
            "9ef56b03101f70be",
            "7827ec475b7c8da5",
            "ceb33ad242526776",
            "383eedb90d0b8b41",
            "521d70b563cc5942",
            "618ef6d8cb29ffce",
            "09d4586254506745",
            "b9ecf6ddd77ad675",
            "867650c5b98c06c8",
            "119a9f972c38c24a",
            "a2813cb05abc95ed",
            "9bf734a0d565b0b0",
            "bfecddb23cb14652"
        ],
        "x": 3074,
        "y": 1959,
        "w": 912,
        "h": 702
    },
    {
        "id": "eb7523f05c7170f0",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "g": "5e4f497cc3eacc9e",
        "name": "Select Applications",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "stroke": "#a4a4a4"
        },
        "nodes": [
            "e92dbdab8eb4e6f5",
            "3575399d43c70958",
            "c229575af81a577a",
            "6ee4c82e5bbdfb64",
            "baa100f75a1bdf83",
            "69e9f2c548c72906",
            "dbb0938eb77fb439",
            "b1d50aba3ccae290",
            "b29bd3b6b73fa3f4",
            "c5fde75660caf0e0",
            "8ea7bea18c3a37ec",
            "3e3267b7bf950552",
            "8f6dbe66602cd363",
            "6f594307a0362067",
            "d224372d0f77adba",
            "9e24def7b8e1ed20",
            "56bb3f2ede4357d3",
            "63b1e190539c60d6",
            "2d30c1a1b88ffd77",
            "9e67043bce8e07ce",
            "0acb4f725a0b3b4d",
            "368a237cb3da03f4",
            "f7b29bb7055e0a74",
            "f2ae517ed12d39ef",
            "6b4365514871b2fa",
            "a1ea860eacff14bf",
            "acbf802c7351198d"
        ],
        "x": 3054,
        "y": 1359,
        "w": 982,
        "h": 522
    },
    {
        "id": "0cad5663dc4721fe",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "g": "5e4f497cc3eacc9e",
        "name": "Select Event",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "stroke": "#a4a4a4"
        },
        "nodes": [
            "da23fd7381dc1b26",
            "f6ab8aa482d9d67f",
            "b6c6c4bc76a4ba53",
            "0181e70f2a18599b",
            "6d26ea123b445cc9",
            "8985a769a95830ae",
            "a1def3152347a0c1",
            "26a7680b9a307992",
            "e2bbf68093902dd8",
            "70be352a47eee3c5",
            "6134dde92e85f832",
            "6e512e1221e08cb3",
            "55f7361f6ff3d3c0",
            "f41e2e7c203bbd25",
            "574a5630803b0224",
            "aa6b891b0c5003f6",
            "be3c6ef4855d08d7"
        ],
        "x": 3054,
        "y": 779,
        "w": 1272,
        "h": 242
    },
    {
        "id": "2258a8ecc4d06406",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "g": "5e4f497cc3eacc9e",
        "name": "Select RO Type",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "stroke": "#a4a4a4"
        },
        "nodes": [
            "8de992bdd38f4d75",
            "ea2ff3f91e64e1c8",
            "322b77670ebfbc73",
            "6dae2eeabda1866b",
            "e18582e1e6af8a27",
            "48df2f80a99d8b29",
            "35a584fdbbbf184c",
            "bdd066564c6ce95f",
            "627236e68743463c",
            "4034cdfe618d83a5",
            "e7d6e3c82350409a",
            "d4315b2a2c87f603",
            "364df53d72877480",
            "0d1633a753414cdd",
            "816f8fd43db06c24",
            "2d01b3958155921c",
            "9828977331cdadbe"
        ],
        "x": 3054,
        "y": 1059,
        "w": 1192,
        "h": 262
    },
    {
        "id": "7dbb9c6933b0187b",
        "type": "group",
        "z": "2c4527dad914ec1c",
        "g": "5e4f497cc3eacc9e",
        "name": "Create Regulatory Objective",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "ea8fd3395ae5fd49",
            "ea3dfeb51546e24a",
            "7282d98b9aebfd65",
            "449abf85b0dfeb5a",
            "4f666270c6fff25d",
            "dda0db44b7fc76a2",
            "92ab0d09bc0a2257",
            "50129e1a7a69e488",
            "f36d5ec80cec5d8f",
            "9104486cb4f058e0",
            "acaa1af7a2c60d83",
            "1a0e3c813639d7e8",
            "38c9f670c6aad425",
            "be244ca4d55bdd38",
            "2e6605503e1d4370",
            "9e0fbc59446d769b",
            "d054a08aba76294a",
            "33574cd26d86b730",
            "f44a6fefd13d1c10",
            "dd1397594a408f05",
            "275cac78bf29b682",
            "ac4deb9539f1fb55",
            "aa47eed378c684f0",
            "991415f1a79cd20a",
            "f6465cef2e0631c0",
            "2fee73769422c35f",
            "a539cc3ec7312d9d",
            "3d776d3161996ac6"
        ],
        "x": 3074,
        "y": 2699,
        "w": 872,
        "h": 502
    },
    {
        "id": "4859b8939958e3a3",
        "type": "redis-config",
        "name": "node-red-redis",
        "options": "{\"port\":6379,\"host\":\"node-red-redis\",\"username\":\"node-red\",\"password\":\"BRAVE!2023\",\"db\":0}",
        "cluster": false,
        "optionsType": "json"
    },
    {
        "id": "a0efbb89.5e42d8",
        "type": "redis-config",
        "name": "node-red-redis",
        "options": "{\"port\":6379,\"host\":\"node-red-redis\",\"username\":\"node-red\",\"password\":\"BRAVE!2023\",\"db\":0}",
        "cluster": false,
        "optionsType": "json"
    },
    {
        "id": "f2e66c06b9a9ba35",
        "type": "change",
        "z": "fca036ab5aa23301",
        "g": "281da2542719f7ce",
        "name": "get automation configuration settings object id",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"SELECT id, name__v\"\t&\" FROM automation_configuration__c\" \t&\" WHERE name__v = '\"\t& args_sub.settings_name\t&\"' AND status__v = 'active__v'\"\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 380,
        "wires": [
            [
                "bd54ec6a24f9d859",
                "1c57d76c42e831f6"
            ]
        ]
    },
    {
        "id": "3cba36dbc4be0431",
        "type": "change",
        "z": "fca036ab5aa23301",
        "g": "281da2542719f7ce",
        "name": "prepare request attachments",
        "rules": [
            {
                "t": "set",
                "p": "args.object_name",
                "pt": "msg",
                "to": "automation_configuration__c",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "args.object_record_id",
                "pt": "msg",
                "to": "payload.data[0].id",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.keep",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 440,
        "wires": [
            [
                "74e13d47f28fa1de",
                "fdda318a7828b65d"
            ]
        ]
    },
    {
        "id": "781204f40703ed7f",
        "type": "change",
        "z": "fca036ab5aa23301",
        "g": "281da2542719f7ce",
        "name": "Set attachments to attachment_name",
        "rules": [
            {
                "t": "set",
                "p": "args.attachment_id",
                "pt": "msg",
                "to": "payload.data[filename__v=$$.args_sub.attachment_name].id",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.keep",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 500,
        "wires": [
            [
                "80dbe2c3859434ef",
                "b865262b1cb56950"
            ]
        ]
    },
    {
        "id": "bd54ec6a24f9d859",
        "type": "brave-vql-query",
        "z": "fca036ab5aa23301",
        "g": "281da2542719f7ce",
        "name": "",
        "x": 830,
        "y": 380,
        "wires": [
            [
                "3cba36dbc4be0431"
            ],
            []
        ]
    },
    {
        "id": "74e13d47f28fa1de",
        "type": "brave-retrieve-object-record-attachments",
        "z": "fca036ab5aa23301",
        "g": "281da2542719f7ce",
        "name": "",
        "x": 900,
        "y": 440,
        "wires": [
            [
                "781204f40703ed7f"
            ],
            []
        ]
    },
    {
        "id": "80dbe2c3859434ef",
        "type": "brave-download-object-record-attachment-file",
        "z": "fca036ab5aa23301",
        "g": "281da2542719f7ce",
        "name": "",
        "x": 920,
        "y": 500,
        "wires": [
            [
                "862007a1a92de19b"
            ],
            []
        ]
    },
    {
        "id": "862007a1a92de19b",
        "type": "json",
        "z": "fca036ab5aa23301",
        "g": "281da2542719f7ce",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1250,
        "y": 500,
        "wires": [
            [
                "60f4ee43b8ea1811",
                "c0e33d0da64adf97"
            ]
        ]
    },
    {
        "id": "66f404ec026a1e86",
        "type": "change",
        "z": "fca036ab5aa23301",
        "name": "settings_name",
        "rules": [
            {
                "t": "set",
                "p": "args_sub.settings_name",
                "pt": "msg",
                "to": "client_id & \"__settings\"\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 160,
        "wires": [
            [
                "d74f82f3ec519f0b"
            ]
        ]
    },
    {
        "id": "3a7756d9fa7a0bfd",
        "type": "switch",
        "z": "fca036ab5aa23301",
        "name": "",
        "property": "true",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "$exists(args_sub.settings_name)and $exists(vault_api)and $exists(session_id)",
                "vt": "jsonata"
            },
            {
                "t": "eq",
                "v": "$exists(client_id) and $exists(vault_api)and $exists(session_id)",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 790,
        "y": 140,
        "wires": [
            [
                "d74f82f3ec519f0b",
                "93b92ac848544187"
            ],
            [
                "66f404ec026a1e86"
            ],
            [
                "434ac0347080cde9"
            ]
        ]
    },
    {
        "id": "434ac0347080cde9",
        "type": "change",
        "z": "fca036ab5aa23301",
        "name": "Error message",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ERROR not enough input parameter",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "641eac4e6a3a1072",
        "type": "change",
        "z": "fca036ab5aa23301",
        "name": "mask args",
        "rules": [
            {
                "t": "set",
                "p": "args_sub",
                "pt": "msg",
                "to": "args",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "move",
                "p": "args",
                "pt": "msg",
                "to": "args_in",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 40,
        "wires": [
            [
                "2b82d1df4e595d8b"
            ]
        ]
    },
    {
        "id": "60f4ee43b8ea1811",
        "type": "switch",
        "z": "fca036ab5aa23301",
        "name": "",
        "property": "args_sub.keep = true",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1470,
        "y": 500,
        "wires": [
            [
                "9ffbd2aa8e3b35c4"
            ],
            [
                "2fa9a7a10b10782e"
            ]
        ]
    },
    {
        "id": "2b82d1df4e595d8b",
        "type": "switch",
        "z": "fca036ab5aa23301",
        "name": "",
        "property": "$type(args_sub.expire)=\"number\"",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 110,
        "y": 140,
        "wires": [
            [
                "ffd96ba83772ca58"
            ],
            [
                "8cabfa8f5e73b072"
            ]
        ]
    },
    {
        "id": "9ffbd2aa8e3b35c4",
        "type": "change",
        "z": "fca036ab5aa23301",
        "name": "reset args",
        "rules": [
            {
                "t": "move",
                "p": "args_in",
                "pt": "msg",
                "to": "args",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "args_sub",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "8cabfa8f5e73b072",
        "type": "change",
        "z": "fca036ab5aa23301",
        "name": "set expire",
        "rules": [
            {
                "t": "set",
                "p": "args_sub.expire",
                "pt": "msg",
                "to": "24*60*60",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 220,
        "wires": [
            [
                "ffd96ba83772ca58"
            ]
        ]
    },
    {
        "id": "e20436251156a60f",
        "type": "brave-redis-queue",
        "z": "fca036ab5aa23301",
        "g": "65512d829ddbe85d",
        "name": "",
        "x": 1810,
        "y": 140,
        "wires": [
            [
                "78aa02b86a2d9b5f",
                "e1068dc03fd73659"
            ],
            []
        ]
    },
    {
        "id": "6adaa8b423a4321e",
        "type": "change",
        "z": "fca036ab5aa23301",
        "g": "65512d829ddbe85d",
        "name": "Try to read settings from Redis",
        "rules": [
            {
                "t": "set",
                "p": "args.topic",
                "pt": "msg",
                "to": "$substringBefore($substring(vault_api,8),\"/\")\t& \"__\" & args_sub.settings_name",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "args.method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "args.keep_queue",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 140,
        "wires": [
            [
                "e20436251156a60f",
                "2d89d68958642caa"
            ]
        ]
    },
    {
        "id": "2fa9a7a10b10782e",
        "type": "change",
        "z": "fca036ab5aa23301",
        "name": "delete args",
        "rules": [
            {
                "t": "delete",
                "p": "args_in",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "args_sub",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "args",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1630,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "78aa02b86a2d9b5f",
        "type": "switch",
        "z": "fca036ab5aa23301",
        "g": "65512d829ddbe85d",
        "name": "",
        "property": "payload?true:false",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1990,
        "y": 140,
        "wires": [
            [
                "60f4ee43b8ea1811"
            ],
            [
                "f2e66c06b9a9ba35"
            ]
        ]
    },
    {
        "id": "be87b21f1e94e2d6",
        "type": "brave-redis-queue",
        "z": "fca036ab5aa23301",
        "g": "a6858237518cf424",
        "name": "",
        "x": 750,
        "y": 640,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c0e33d0da64adf97",
        "type": "change",
        "z": "fca036ab5aa23301",
        "g": "a6858237518cf424",
        "name": "Write settings to Redis",
        "rules": [
            {
                "t": "set",
                "p": "args.topic",
                "pt": "msg",
                "to": "$substringBefore($substring(vault_api,8),\"/\")\t& \"__\" & args_sub.settings_name",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "args.method",
                "pt": "msg",
                "to": "SET",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "args.expire",
                "pt": "msg",
                "to": "args_sub.expire",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 640,
        "wires": [
            [
                "be87b21f1e94e2d6"
            ]
        ]
    },
    {
        "id": "ffd96ba83772ca58",
        "type": "switch",
        "z": "fca036ab5aa23301",
        "name": "",
        "property": "$type(args_sub.attachment_name) = \"string\" and\t$length($trim(args_sub.attachment_name))",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 140,
        "wires": [
            [
                "22eea11a1ec723a4"
            ],
            [
                "506d0aa9dcef77b4"
            ]
        ]
    },
    {
        "id": "506d0aa9dcef77b4",
        "type": "change",
        "z": "fca036ab5aa23301",
        "name": "set attachment",
        "rules": [
            {
                "t": "set",
                "p": "args_sub.attachment_name",
                "pt": "msg",
                "to": "settings.json",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 598.6666259765625,
        "y": 186.66665649414062,
        "wires": [
            [
                "3a7756d9fa7a0bfd"
            ]
        ]
    },
    {
        "id": "22eea11a1ec723a4",
        "type": "change",
        "z": "fca036ab5aa23301",
        "name": "append extension",
        "rules": [
            {
                "t": "set",
                "p": "args_sub.attachment_name",
                "pt": "msg",
                "to": "$substring(args_sub.attachment_name,-5)=\".json\"?\targs_sub.attachment_name:\targs_sub.attachment_name & \".json\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 100,
        "wires": [
            [
                "3a7756d9fa7a0bfd"
            ]
        ]
    },
    {
        "id": "d74f82f3ec519f0b",
        "type": "switch",
        "z": "fca036ab5aa23301",
        "name": "",
        "property": "args_sub.forced_renewal=true",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1170,
        "y": 140,
        "wires": [
            [
                "6adaa8b423a4321e"
            ],
            [
                "f2e66c06b9a9ba35"
            ]
        ]
    },
    {
        "id": "92b6319ddcc5179b",
        "type": "debug",
        "z": "fca036ab5aa23301",
        "name": "debug 160",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2090,
        "y": 60,
        "wires": []
    },
    {
        "id": "e1068dc03fd73659",
        "type": "debug",
        "z": "fca036ab5aa23301",
        "name": "debug 159",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1890,
        "y": 60,
        "wires": []
    },
    {
        "id": "bc35d3238047c6e4",
        "type": "debug",
        "z": "fca036ab5aa23301",
        "name": "debug 167",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 60,
        "wires": []
    },
    {
        "id": "7a6610a61178baf0",
        "type": "debug",
        "z": "fca036ab5aa23301",
        "name": "debug 165",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 987.22216796875,
        "y": 63.888877868652344,
        "wires": []
    },
    {
        "id": "93b92ac848544187",
        "type": "debug",
        "z": "fca036ab5aa23301",
        "name": "debug 158",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 100,
        "wires": []
    },
    {
        "id": "1c57d76c42e831f6",
        "type": "debug",
        "z": "fca036ab5aa23301",
        "name": "debug 163",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 600,
        "wires": []
    },
    {
        "id": "fdda318a7828b65d",
        "type": "debug",
        "z": "fca036ab5aa23301",
        "name": "debug 162",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 660,
        "wires": []
    },
    {
        "id": "b865262b1cb56950",
        "type": "debug",
        "z": "fca036ab5aa23301",
        "name": "debug 161",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1687.8887939453125,
        "y": 638.5555038452148,
        "wires": []
    },
    {
        "id": "2d89d68958642caa",
        "type": "debug",
        "z": "fca036ab5aa23301",
        "name": "debug 267",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1710,
        "y": 60,
        "wires": []
    },
    {
        "id": "1acf79d7de254fd3",
        "type": "change",
        "z": "5267b0000f591768",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "vault_api & \"v22.3/objects/documents/\" &\t$string(args.doc_id)\t& \"/versions/\" & \t$string(args.major_version) & \"/\" &\t$string(args.minor_version)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"Content-Type\": \"application/x-www-form-urlencoded\",\t   \"Accept\": \"application/json\",\t   \"Authorization\": session_id \t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PUT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 180,
        "wires": [
            [
                "ca5161961d787e8f"
            ]
        ]
    },
    {
        "id": "8aa77ca0f51a98c4",
        "type": "http request",
        "z": "5267b0000f591768",
        "name": "update version",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 660,
        "y": 180,
        "wires": [
            [
                "3bc5a284b042a731"
            ]
        ]
    },
    {
        "id": "3bc5a284b042a731",
        "type": "switch",
        "z": "5267b0000f591768",
        "name": "responseStatus",
        "property": "payload.responseStatus",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SUCCESS",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 180,
        "wires": [
            [
                "c7586b256ad515d4"
            ],
            []
        ]
    },
    {
        "id": "ca5161961d787e8f",
        "type": "function",
        "z": "5267b0000f591768",
        "name": "",
        "func": "let adjustData = {};\nfor (let opt in msg.payload) {\n    if (msg.payload.hasOwnProperty(opt)) {\n        let val = msg.payload[opt];\n        if (val !== undefined && val !== null  && val !== []) {\n            if (Array.isArray(val)) {\n                    let newval = val.join(\", \")\n                    adjustData[opt] = newval;\n            } else {\n                adjustData[opt] = val;\n            }\n        }\n    }\n}\nmsg.payload = adjustData;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 180,
        "wires": [
            [
                "17968c7baa724881",
                "8aa77ca0f51a98c4"
            ]
        ]
    },
    {
        "id": "17968c7baa724881",
        "type": "debug",
        "z": "5267b0000f591768",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 270,
        "y": 280,
        "wires": []
    },
    {
        "id": "c7586b256ad515d4",
        "type": "change",
        "z": "5267b0000f591768",
        "name": "Delete URL and Headers",
        "rules": [
            {
                "t": "delete",
                "p": "url",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "headers",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "method",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 40,
        "wires": [
            [
                "32a3990622cb2699"
            ]
        ]
    },
    {
        "id": "32a3990622cb2699",
        "type": "switch",
        "z": "5267b0000f591768",
        "name": "Check args.keep",
        "property": "args.keep",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 40,
        "wires": [
            [],
            [
                "42dce4eaa0da0a7f"
            ]
        ]
    },
    {
        "id": "42dce4eaa0da0a7f",
        "type": "change",
        "z": "5267b0000f591768",
        "name": "Delete Arguments",
        "rules": [
            {
                "t": "delete",
                "p": "args",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "1169b02472a31ead",
        "type": "change",
        "z": "5267b0000f591768",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "document",
                "pt": "msg",
                "to": "update_version.payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "delete",
                "p": "update_version",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "update_version",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "update_version",
                "pt": "msg",
                "to": "$merge([create_doc, {\"document\":document}])",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "url",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "method",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "document",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "9376135244af7288",
        "type": "change",
        "z": "1548160fce6f102c",
        "name": "default unescaped to false, type is checkbox or radio",
        "rules": [
            {
                "t": "set",
                "p": "unescaped",
                "pt": "msg",
                "to": "unescaped=true?true:false",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "checkbox",
                "pt": "msg",
                "to": "type=\"checkbox\"?true:false\t",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "radio",
                "pt": "msg",
                "to": "type=\"radio\"?true:false\t",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "type",
                "pt": "msg",
                "to": "type in [\"checkbox\", \"radio\"]?type:false",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 160,
        "wires": [
            [
                "0efcb5b4634a5b92"
            ]
        ]
    },
    {
        "id": "0efcb5b4634a5b92",
        "type": "template",
        "z": "1548160fce6f102c",
        "name": "fill input form template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, height=device-height, initial-scale=0.9\">\n\t\t<title>{{title}}</title>\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/css/bootstrap.min.css\"/>\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.datatables.net/v/bs4-4.6.0/jq-3.6.0/dt-1.13.1/datatables.min.css\"/>\n\t\t<script type=\"text/javascript\" src=\"https://cdn.datatables.net/v/bs4-4.6.0/jq-3.6.0/dt-1.13.1/datatables.min.js\"></script>\n\t\t<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/js/bootstrap.min.js\"></script>\n\t</head>\n\t<body>\n\t\t<div class=\"modal fade\" id=\"modal\" tabindex=\"-1\">\n\t\t\t<div class=\"modal-dialog\">\n\t\t\t\t<div class=\"modal-content\">\n\t\t\t\t\t<div class=\"modal-header\">\n\t\t\t\t\t\t<h4 class=\"modal-title\">Processing ...</h4>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"modal-body\">\n\t\t\t\t\t\t<p>Please wait while the changes are applied.</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"container-fluid p-3 small\">\n\t\t\t<form id=\"tableForm\" method=\"post\" action=\"/{{ flow }}\">\n    \t\t\t<div class=\"row\">\n    \t\t\t\t<div class=\"col-md-11\">\n    \t\t\t\t\t<h4>{{ title }}</h4>\n                        {{#unescaped}}\n    \t\t\t\t\t\t<p >{{{ description }}}</p>\n            \t\t\t{{/unescaped}}\n        \t\t\t\t{{^unescaped}}\n                            <p >{{ description }}</p>\n    \t\t            {{/unescaped}}\n    \t\t\t\t</div>\n    \t\t\t\t<div class=\"col-md-1\">\n    \t\t\t\t{{ #httpcalls }}\n    \t\t\t\t\t<button onclick=\"window.history.go(-{{ . }})\" class=\"btn btn-secondary btn-sm\">Go Back</button>\n    \t\t\t\t{{ /httpcalls }}\n\t\t\t        {{#type}}\n    \t\t\t        <br/>\n    \t\t\t        <br/>\n\t    \t\t\t\t<input type=\"submit\" id=\"btnSubmit\" value=\"Execute\" class=\"btn btn-primary btn-sm\">\n    \t\t\t\t{{/type}}\n\n    \t\t\t\t</div>\n    \t\t\t</div>\n    \t\t\t<div class=\"row\">\n    \t\t\t\t<div class=\"col\">\n\t\t\t\t\t{{#hiddenfields}}\n\t\t\t\t\t\t<input type=\"hidden\" name=\"{{name}}\" value=\"{{value}}\" />\n\t\t\t\t\t{{/hiddenfields}}\n\t\t\t\t\t\t<input id=\"FullSelect\" type=\"hidden\" name=\"response_full\" value=\"\"/>\n\t\t\t\t\t\t<table id=\"selectiontable\" class=\"table table-bordered table-striped table-hover table-sm\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t{{#type}}\n                                    <th>\n                                    {{#checkbox}}\n                                        <div class=\"btn-group btn-sm\">\n                                            <button type=\"button\" id=\"selectAll\"  class=\"btn btn-outline-primary btn-sm\"> All </button>\n                                            <button type=\"button\" id=\"selectPage\" class=\"btn btn-outline-primary btn-sm\"> Page </button>\n                                        </div>\n                                    {{/checkbox}}\n                                    </th>\n\t\t\t\t\t\t\t\t{{/type}}\n\t\t\t\t\t\t\t\t{{#tableheader.columns}}\n\t\t\t\t\t\t    \t\t{{#unescaped}}\n\t\t\t\t\t\t\t\t\t<th>{{{ . }}}</th>\n\t\t\t\t\t    \t\t\t{{/unescaped}}\n\t\t\t\t    \t\t\t\t{{^unescaped}}\n\t\t\t\t\t\t\t\t\t<th>{{ . }}</th>\n\t\t\t\t\t\t\t    \t{{/unescaped}}\n\t\t\t\t\t\t\t\t{{/tableheader.columns}}\n\t\t\t\t\t\t\t  </tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{{#dataarray}}\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t{{#type}}\n\t\t\t\t\t\t\t\t{{^deactivated}}\n\t\t\t\t\t\t\t\t\t<td><input type=\"{{ type }}\" value=\"{{ selection }}\" name=\"responsekey\" class=\"checkthis\" {{#checked}} checked {{/checked}}/></td>\n\t\t\t\t\t\t\t\t{{/deactivated}}\n\t\t\t\t\t\t\t\t{{#deactivated}}\n\t\t\t\t\t\t\t\t\t<td> - </td>\n\t\t\t\t\t\t\t\t{{/deactivated}}\n\t\t\t\t\t\t\t\t{{/type}}\n\t\t\t\t\t\t\t\t{{#columns}}\n    \t\t\t\t\t\t\t\t{{#unescaped}}\n\t\t\t\t\t\t\t\t\t<td>{{{ . }}}</td>\n\t    \t\t\t\t\t\t\t{{/unescaped}}\n\t\t    \t\t\t\t\t\t{{^unescaped}}\n\t\t\t\t\t\t\t\t\t<td>{{ . }}</td>\n\t\t\t    \t\t\t\t\t{{/unescaped}}\n\t\t\t\t\t\t\t\t{{/columns}}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t{{/dataarray}}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t<tfoot>\n\t\t\t\t\t\t\t    \n\t\t\t\t\t\t\t</tfoot>\n\t\t\t\t\t\t</table>\n    \t\t\t\t</div>\n    \t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t\t<!-- End your project here-->\n\t  \n\t\t<!-- Your custom scripts (optional) -->\n\t\t<script type=\"text/javascript\">\n            $(document).ready(function () { \n                var oTable = $('#selectiontable').dataTable({\n\t\t\t\t{{#type}}\n                    columnDefs: [{\n                        className: 'dt-center',\n                        width: 40,\n                        orderable: false,\n                        targets:   0\n                    }],\n                {{/type}}\n                    order: [],\n                    scrollY: '40vh',\n                    paging: true\n                });\n            {{#checkbox}}\n                var allPages = oTable.fnGetNodes();\n                $('body').on('click', '#selectAll', function () {\n                    if ($(this).hasClass('allChecked')) {\n                        $('input[type=\"checkbox\"]', allPages).prop('checked', false);\n                    } else {\n                        $('input[type=\"checkbox\"]', allPages).prop('checked', true);\n                    }\n                    $(this).toggleClass('allChecked');\n                });\n                $('body').on('click', '#selectPage', function () {\n                    if ($(this).hasClass('allChecked')) {\n                        $('input[type=\"checkbox\"]').prop('checked', false);\n                    } else {\n                        $('input[type=\"checkbox\"]').prop('checked', true);\n                    }\n                    $(this).toggleClass('allChecked');\n                });\n            {{/checkbox}}\n            \n                $(\"#tableForm\").submit( function(event) {\n                    var returndata =  (oTable.$('input[type={{type}}]:checked').map(function() {\n                            return [$(this).val()]\n                        }).get()\n                    );\n\t\t\t\t\t$('input[name=\"response_full\"]').val(JSON.stringify(returndata));\n\t                $(\"#modal\").modal(\"show\");\n                    window.parent.scroll(0,0);\n\n                });\n            window.addEventListener('resize', function(event) {\n                    otable.columns.adjust().draw();\n                }, true);\n\n            });\n\t\t</script>\n\t</body>\n</html>\n",
        "output": "str",
        "x": 800,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "e1cf81e0db9ec340",
        "type": "change",
        "z": "2ece8d9b40a70275",
        "name": "default unescaped to false, type is checkbox or radio",
        "rules": [
            {
                "t": "set",
                "p": "unescaped",
                "pt": "msg",
                "to": "unescaped=true?true:false",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "checkbox",
                "pt": "msg",
                "to": "type=\"checkbox\"?true:false\t",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "radio",
                "pt": "msg",
                "to": "type=\"radio\"?true:false\t",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "type",
                "pt": "msg",
                "to": "type in [\"checkbox\", \"radio\"]?type:false",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 160,
        "wires": [
            [
                "2af9888f9639bac2"
            ]
        ]
    },
    {
        "id": "2af9888f9639bac2",
        "type": "template",
        "z": "2ece8d9b40a70275",
        "name": "fill input form template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, height=device-height, initial-scale=0.9\">\n\t\t<title>{{title}}</title>\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/css/bootstrap.min.css\"/>\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.datatables.net/v/bs4-4.6.0/jq-3.6.0/dt-1.13.1/datatables.min.css\"/>\n\t\t<script type=\"text/javascript\" src=\"https://cdn.datatables.net/v/bs4-4.6.0/jq-3.6.0/dt-1.13.1/datatables.min.js\"></script>\n\t\t<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/js/bootstrap.min.js\"></script>\n\t</head>\n\t<body>\n\t\t<div class=\"modal fade\" id=\"modal\" tabindex=\"-1\">\n\t\t\t<div class=\"modal-dialog\">\n\t\t\t\t<div class=\"modal-content\">\n\t\t\t\t\t<div class=\"modal-header\">\n\t\t\t\t\t\t<h4 class=\"modal-title\">Processing ...</h4>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"modal-body\">\n\t\t\t\t\t\t<p>Please wait while the changes are applied.</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"container-fluid p-3 small\">\n\t\t\t<form id=\"tableForm\" method=\"post\" action=\"/{{ flow }}\">\n    \t\t\t<div class=\"row\">\n    \t\t\t\t<div class=\"col-md-11\">\n    \t\t\t\t\t<h4>{{ title }}</h4>\n                        {{#unescaped}}\n    \t\t\t\t\t\t<p >{{{ description }}}</p>\n            \t\t\t{{/unescaped}}\n        \t\t\t\t{{^unescaped}}\n                            <p >{{ description }}</p>\n    \t\t            {{/unescaped}}\n    \t\t\t\t</div>\n    \t\t\t\t<div class=\"col-md-1\">\n    \t\t\t\t{{^cancel}}\n\t\t\t\t\t\t{{ #httpcalls }}\n\t\t\t\t\t\t\t<button onclick=\"window.history.go(-{{ . }})\" class=\"btn btn-secondary btn-sm\">Go Back</button>\n\t\t\t\t\t\t{{ /httpcalls }}\n\t\t\t\t\t{{/cancel}}\n    \t\t\t\t{{#cancel}}\n\t\t\t\t\t\t<button onclick=\"submit\" class=\"btn btn-secondary btn-sm\">Cancel</button>\n\t\t\t\t\t{{/cancel}}\n\t\t\t        {{#type}}\n    \t\t\t        <br/>\n    \t\t\t        <br/>\n\t    \t\t\t\t<input type=\"submit\" id=\"btnSubmit\" value=\"Execute\" class=\"btn btn-primary btn-sm\">\n    \t\t\t\t{{/type}}\n\n    \t\t\t\t</div>\n    \t\t\t</div>\n    \t\t\t<div class=\"row\">\n    \t\t\t\t<div class=\"col\">\n\t\t\t\t\t{{#hiddenfields}}\n\t\t\t\t\t\t<input type=\"hidden\" name=\"{{name}}\" value=\"{{value}}\" />\n\t\t\t\t\t{{/hiddenfields}}\n\t\t\t\t\t\t<input id=\"FullSelect\" type=\"hidden\" name=\"response_full\" value=\"\"/>\n\t\t\t\t\t\t<table id=\"selectiontable\" class=\"table table-bordered table-striped table-hover table-sm\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t{{#type}}\n                                    <th>\n                                    {{#checkbox}}\n                                        <div class=\"btn-group btn-sm\">\n                                            <button type=\"button\" id=\"selectAll\"  class=\"btn btn-outline-primary btn-sm\"> All </button>\n                                            <button type=\"button\" id=\"selectPage\" class=\"btn btn-outline-primary btn-sm\"> Page </button>\n                                        </div>\n                                    {{/checkbox}}\n                                    </th>\n\t\t\t\t\t\t\t\t{{/type}}\n\t\t\t\t\t\t\t\t{{#tableheader.columns}}\n\t\t\t\t\t\t    \t\t{{#unescaped}}\n\t\t\t\t\t\t\t\t\t<th>{{{ . }}}</th>\n\t\t\t\t\t    \t\t\t{{/unescaped}}\n\t\t\t\t    \t\t\t\t{{^unescaped}}\n\t\t\t\t\t\t\t\t\t<th>{{ . }}</th>\n\t\t\t\t\t\t\t    \t{{/unescaped}}\n\t\t\t\t\t\t\t\t{{/tableheader.columns}}\n\t\t\t\t\t\t\t  </tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{{#dataarray}}\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t{{#type}}\n\t\t\t\t\t\t\t\t{{^deactivated}}\n\t\t\t\t\t\t\t\t\t<td><input type=\"{{ type }}\" value=\"{{ selection }}\" name=\"responsekey\" class=\"checkthis\" {{#checked}} checked {{/checked}}/></td>\n\t\t\t\t\t\t\t\t{{/deactivated}}\n\t\t\t\t\t\t\t\t{{#deactivated}}\n\t\t\t\t\t\t\t\t\t<td> - </td>\n\t\t\t\t\t\t\t\t{{/deactivated}}\n\t\t\t\t\t\t\t\t{{/type}}\n\t\t\t\t\t\t\t\t{{#columns}}\n    \t\t\t\t\t\t\t\t{{#unescaped}}\n\t\t\t\t\t\t\t\t\t<td>{{{ . }}}</td>\n\t    \t\t\t\t\t\t\t{{/unescaped}}\n\t\t    \t\t\t\t\t\t{{^unescaped}}\n\t\t\t\t\t\t\t\t\t<td>{{ . }}</td>\n\t\t\t    \t\t\t\t\t{{/unescaped}}\n\t\t\t\t\t\t\t\t{{/columns}}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t{{/dataarray}}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t<tfoot>\n\t\t\t\t\t\t\t    \n\t\t\t\t\t\t\t</tfoot>\n\t\t\t\t\t\t</table>\n    \t\t\t\t</div>\n    \t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t\t<!-- End your project here-->\n\t  \n\t\t<!-- Your custom scripts (optional) -->\n\t\t<script type=\"text/javascript\">\n            $(document).ready(function () { \n                var oTable = $('#selectiontable').dataTable({\n\t\t\t\t{{#type}}\n                    columnDefs: [{\n                        className: 'dt-center',\n                        width: 40,\n                        orderable: false,\n                        targets:   0\n                    }],\n                {{/type}}\n                    order: [],\n                    scrollY: '40vh',\n                    paging: true\n                });\n            {{#checkbox}}\n                var allPages = oTable.fnGetNodes();\n                $('body').on('click', '#selectAll', function () {\n                    if ($(this).hasClass('allChecked')) {\n                        $('input[type=\"checkbox\"]', allPages).prop('checked', false);\n                    } else {\n                        $('input[type=\"checkbox\"]', allPages).prop('checked', true);\n                    }\n                    $(this).toggleClass('allChecked');\n                });\n                $('body').on('click', '#selectPage', function () {\n                    if ($(this).hasClass('allChecked')) {\n                        $('input[type=\"checkbox\"]').prop('checked', false);\n                    } else {\n                        $('input[type=\"checkbox\"]').prop('checked', true);\n                    }\n                    $(this).toggleClass('allChecked');\n                });\n            {{/checkbox}}\n            \n                $(\"#tableForm\").submit( function(event) {\n                    var returndata =  (oTable.$('input[type={{type}}]:checked').map(function() {\n                            return [$(this).val()]\n                        }).get()\n                    );\n\t\t\t\t\t$('input[name=\"response_full\"]').val(JSON.stringify(returndata));\n\t                $(\"#modal\").modal(\"show\");\n                    window.parent.scroll(0,0);\n\n                });\n            window.addEventListener('resize', function(event) {\n                    otable.columns.adjust().draw();\n                }, true);\n\n            });\n\t\t</script>\n\t</body>\n</html>\n",
        "output": "str",
        "x": 780,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "2b68984ccd2285e1",
        "type": "change",
        "z": "391f8570abc63add",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "vault_api & \"v22.3/objects/documents/\" & args.doc_id",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"Content-Type\": \"multipart/form-data\",\t   \"Accept\": \"application/json\",\t   \"Authorization\": session_id,\t   \"X-VaultAPI-ClientID\": client_id\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 140,
        "wires": [
            [
                "22f6dfb87e2ad25f"
            ]
        ]
    },
    {
        "id": "22f6dfb87e2ad25f",
        "type": "http request",
        "z": "391f8570abc63add",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 790,
        "y": 140,
        "wires": [
            [
                "21fe8eb40f454e6a"
            ]
        ]
    },
    {
        "id": "d33a2ba03fa17cab",
        "type": "change",
        "z": "391f8570abc63add",
        "name": "Delete Arguments",
        "rules": [
            {
                "t": "delete",
                "p": "args",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "615a0b6d3689b73f",
        "type": "switch",
        "z": "391f8570abc63add",
        "name": "Check args.keep",
        "property": "args.keep",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 380,
        "wires": [
            [],
            [
                "d33a2ba03fa17cab"
            ]
        ]
    },
    {
        "id": "4f59df722ebb0fcb",
        "type": "change",
        "z": "391f8570abc63add",
        "name": "Delete URL and Headers",
        "rules": [
            {
                "t": "delete",
                "p": "url",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "headers",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 380,
        "wires": [
            [
                "615a0b6d3689b73f"
            ]
        ]
    },
    {
        "id": "d1c757f2307883f1",
        "type": "comment",
        "z": "391f8570abc63add",
        "name": "Deletion of msg content",
        "info": "",
        "x": 360,
        "y": 280,
        "wires": []
    },
    {
        "id": "21fe8eb40f454e6a",
        "type": "switch",
        "z": "391f8570abc63add",
        "name": "Check creation status",
        "property": "payload.responseStatus",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SUCCESS",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1040,
        "y": 140,
        "wires": [
            [
                "4f59df722ebb0fcb"
            ],
            []
        ]
    },
    {
        "id": "cfa437bfd6ab15cb",
        "type": "comment",
        "z": "391f8570abc63add",
        "name": "Create Version",
        "info": "",
        "x": 340,
        "y": 60,
        "wires": []
    },
    {
        "id": "be3b0e3f01041787",
        "type": "change",
        "z": "2a24cd366adb05e3",
        "name": "obj_user_act",
        "rules": [
            {
                "t": "set",
                "p": "version",
                "pt": "msg",
                "to": "v22.1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"Content-Type\": \"application/x-www-form-urlencoded\",\t   \"Accept\": \"application/json\",\t   \"Authorization\": session_id \t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "vault_api & version & \"/vobjects/\" & args.object_name\t& \"/\" & args.object_record_id\t& \"/actions/\"\t& args.action_name",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 160,
        "wires": [
            [
                "2fb81ebb7facb797",
                "c6046d0f7aa13354"
            ]
        ]
    },
    {
        "id": "2fb81ebb7facb797",
        "type": "http request",
        "z": "2a24cd366adb05e3",
        "name": "initiate user action",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 560,
        "y": 160,
        "wires": [
            [
                "b0a77cbb9f533491",
                "497ce7feb743fbed"
            ]
        ]
    },
    {
        "id": "bb373d0f054efbbd",
        "type": "switch",
        "z": "2a24cd366adb05e3",
        "name": "response status",
        "property": "payload.responseStatus",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SUCCESS",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 960,
        "y": 160,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c6046d0f7aa13354",
        "type": "debug",
        "z": "2a24cd366adb05e3",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 300,
        "wires": []
    },
    {
        "id": "b0a77cbb9f533491",
        "type": "debug",
        "z": "2a24cd366adb05e3",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 300,
        "wires": []
    },
    {
        "id": "497ce7feb743fbed",
        "type": "change",
        "z": "2a24cd366adb05e3",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "args",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "method",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 160,
        "wires": [
            [
                "bb373d0f054efbbd"
            ]
        ]
    },
    {
        "id": "2eaca4652159010c",
        "type": "json",
        "z": "594e48a4aa27c6b6",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 450,
        "y": 260,
        "wires": [
            [
                "a1e5555a061fd822"
            ]
        ]
    },
    {
        "id": "a1e5555a061fd822",
        "type": "change",
        "z": "594e48a4aa27c6b6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "args.topic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 160,
        "wires": [
            [
                "7ca35a82f3c2fd7d"
            ]
        ]
    },
    {
        "id": "bd681c4c150652b2",
        "type": "redis-command",
        "z": "594e48a4aa27c6b6",
        "server": "a0efbb89.5e42d8",
        "command": "SET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1000,
        "y": 160,
        "wires": [
            [
                "204e59c63465c1c8"
            ]
        ]
    },
    {
        "id": "7dec81da7726c8a7",
        "type": "redis-command",
        "z": "594e48a4aa27c6b6",
        "server": "a0efbb89.5e42d8",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 660,
        "y": 300,
        "wires": [
            [
                "f803562f047d05ef",
                "3801b5c70bd3b6cc"
            ]
        ]
    },
    {
        "id": "a07c38571ff88e33",
        "type": "json",
        "z": "594e48a4aa27c6b6",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1010,
        "y": 300,
        "wires": [
            [
                "158ca02db9c11de5"
            ]
        ]
    },
    {
        "id": "793f7e54dbae0543",
        "type": "switch",
        "z": "594e48a4aa27c6b6",
        "name": "input or output",
        "property": "args.method",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SET",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GET",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "DELETE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RPUSH",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "LRANGE",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 6,
        "x": 220,
        "y": 320,
        "wires": [
            [
                "2eaca4652159010c"
            ],
            [
                "20c9d1f992ebd4f2"
            ],
            [
                "3eeb464b507f40f8"
            ],
            [
                "911013486e5a56ed"
            ],
            [
                "c13a909837cd0cb5"
            ],
            [
                "5fa4ff9a8d12387f"
            ]
        ]
    },
    {
        "id": "204e59c63465c1c8",
        "type": "switch",
        "z": "594e48a4aa27c6b6",
        "name": "ok?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1150,
        "y": 160,
        "wires": [
            [
                "158ca02db9c11de5"
            ],
            []
        ]
    },
    {
        "id": "20c9d1f992ebd4f2",
        "type": "change",
        "z": "594e48a4aa27c6b6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "args.topic",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 300,
        "wires": [
            [
                "7dec81da7726c8a7"
            ]
        ]
    },
    {
        "id": "d4a16b3fbbd68b6e",
        "type": "redis-command",
        "z": "594e48a4aa27c6b6",
        "server": "a0efbb89.5e42d8",
        "command": "DEL",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 660,
        "y": 340,
        "wires": [
            [
                "54c4e178e45aea62"
            ]
        ]
    },
    {
        "id": "f803562f047d05ef",
        "type": "switch",
        "z": "594e48a4aa27c6b6",
        "name": "keep queue?",
        "property": "args.keep_queue",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 240,
        "wires": [
            [
                "b276c97a297f0dbc"
            ]
        ]
    },
    {
        "id": "3801b5c70bd3b6cc",
        "type": "switch",
        "z": "594e48a4aa27c6b6",
        "name": "",
        "property": "$type(payload) = \"string\" and $substring($trim(payload), 0, 1) in [\"[\",\"{\"]",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 850,
        "y": 300,
        "wires": [
            [
                "158ca02db9c11de5"
            ],
            [
                "a07c38571ff88e33"
            ]
        ]
    },
    {
        "id": "7ca35a82f3c2fd7d",
        "type": "switch",
        "z": "594e48a4aa27c6b6",
        "name": "expire?",
        "property": "args.expire",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 640,
        "y": 160,
        "wires": [
            [
                "6aca2597e86369a9"
            ],
            [
                "bd681c4c150652b2"
            ]
        ]
    },
    {
        "id": "6aca2597e86369a9",
        "type": "change",
        "z": "594e48a4aa27c6b6",
        "name": "set expire",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[ payload, \"EX\", args.expire ]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 120,
        "wires": [
            [
                "bd681c4c150652b2"
            ]
        ]
    },
    {
        "id": "54c4e178e45aea62",
        "type": "switch",
        "z": "594e48a4aa27c6b6",
        "name": "keep?",
        "property": "args.keep",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1410,
        "y": 340,
        "wires": [
            [],
            [
                "adfc665125823cbb"
            ]
        ]
    },
    {
        "id": "adfc665125823cbb",
        "type": "change",
        "z": "594e48a4aa27c6b6",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "args",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "158ca02db9c11de5",
        "type": "change",
        "z": "594e48a4aa27c6b6",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 220,
        "wires": [
            [
                "54c4e178e45aea62"
            ]
        ]
    },
    {
        "id": "742929adec7acddf",
        "type": "link in",
        "z": "594e48a4aa27c6b6",
        "name": "link in 1",
        "links": [
            "5fa4ff9a8d12387f",
            "b4af302ce701e18c"
        ],
        "x": 1465,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "3eeb464b507f40f8",
        "type": "change",
        "z": "594e48a4aa27c6b6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "args.topic",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 340,
        "wires": [
            [
                "d4a16b3fbbd68b6e"
            ]
        ]
    },
    {
        "id": "b276c97a297f0dbc",
        "type": "redis-command",
        "z": "594e48a4aa27c6b6",
        "server": "a0efbb89.5e42d8",
        "command": "DEL",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 840,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "5fa4ff9a8d12387f",
        "type": "link out",
        "z": "594e48a4aa27c6b6",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "742929adec7acddf"
        ],
        "x": 275,
        "y": 500,
        "wires": []
    },
    {
        "id": "d69ae3255e8a8bdb",
        "type": "change",
        "z": "594e48a4aa27c6b6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "args.topic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 380,
        "wires": [
            [
                "95f79d5a94c573bf"
            ]
        ]
    },
    {
        "id": "95f79d5a94c573bf",
        "type": "redis-command",
        "z": "594e48a4aa27c6b6",
        "server": "a0efbb89.5e42d8",
        "command": "RPUSH",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 950,
        "y": 380,
        "wires": [
            [
                "54c4e178e45aea62"
            ]
        ]
    },
    {
        "id": "b88e2ce94a82c5d0",
        "type": "change",
        "z": "594e48a4aa27c6b6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[args.topic, -1, -1]",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 480,
        "wires": [
            [
                "4ea4218458d18fd7"
            ]
        ]
    },
    {
        "id": "4ea4218458d18fd7",
        "type": "redis-command",
        "z": "594e48a4aa27c6b6",
        "server": "a0efbb89.5e42d8",
        "command": "LRANGE",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 960,
        "y": 460,
        "wires": [
            [
                "99add7efe389adbd"
            ]
        ]
    },
    {
        "id": "911013486e5a56ed",
        "type": "json",
        "z": "594e48a4aa27c6b6",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 450,
        "y": 380,
        "wires": [
            [
                "d69ae3255e8a8bdb"
            ]
        ]
    },
    {
        "id": "c13a909837cd0cb5",
        "type": "switch",
        "z": "594e48a4aa27c6b6",
        "name": "",
        "property": "true",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "$count(payload) = 3 and $type(payload[0]) = \"string\" and $type(payload[1]) =\"number\" and $type(payload[2]) =\"number\"",
                "vt": "jsonata"
            },
            {
                "t": "eq",
                "v": "$count(payload) =2 and $type(payload[0]) = \"number\" and $type(payload[1]) =\"number\" and  $type(args.topic) = \"string\" and $boolean(args.topic)",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 450,
        "y": 440,
        "wires": [
            [
                "c995f2ef87c8d23f"
            ],
            [
                "b88e2ce94a82c5d0"
            ],
            [
                "5fa4ff9a8d12387f"
            ]
        ]
    },
    {
        "id": "c995f2ef87c8d23f",
        "type": "change",
        "z": "594e48a4aa27c6b6",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 440,
        "wires": [
            [
                "4ea4218458d18fd7"
            ]
        ]
    },
    {
        "id": "ce1854a67120b27e",
        "type": "json",
        "z": "594e48a4aa27c6b6",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1350,
        "y": 600,
        "wires": [
            [
                "5896da5369dddf0f"
            ]
        ]
    },
    {
        "id": "99add7efe389adbd",
        "type": "split",
        "z": "594e48a4aa27c6b6",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1070,
        "y": 560,
        "wires": [
            [
                "e0aed79957164aab"
            ]
        ]
    },
    {
        "id": "5896da5369dddf0f",
        "type": "join",
        "z": "594e48a4aa27c6b6",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1490,
        "y": 560,
        "wires": [
            [
                "54c4e178e45aea62"
            ]
        ]
    },
    {
        "id": "e0aed79957164aab",
        "type": "switch",
        "z": "594e48a4aa27c6b6",
        "name": "",
        "property": "$type(payload) = \"string\" and $substring($trim(payload), 0, 1) in [\"[\",\"{\"]",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1210,
        "y": 560,
        "wires": [
            [
                "5896da5369dddf0f"
            ],
            [
                "ce1854a67120b27e"
            ]
        ]
    },
    {
        "id": "2909707aec157562",
        "type": "change",
        "z": "743f388ad8cf50d6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "vault_api & \"v22.3/objects/documents/\" &\t$string(args.doc_id)\t& \"/versions/\" & \t$string(args.major_version) & \"/\" &\t$string(args.minor_version)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"Content-Type\": \"application/x-www-form-urlencoded\",\t   \"Accept\": \"application/json\",\t   \"Authorization\": session_id \t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PUT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 180,
        "wires": [
            [
                "f04d9309fc845818"
            ]
        ]
    },
    {
        "id": "92c394ab8b9ebc74",
        "type": "http request",
        "z": "743f388ad8cf50d6",
        "name": "update version",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 660,
        "y": 180,
        "wires": [
            [
                "53be5d9e89b2a160"
            ]
        ]
    },
    {
        "id": "53be5d9e89b2a160",
        "type": "switch",
        "z": "743f388ad8cf50d6",
        "name": "responseStatus",
        "property": "payload.responseStatus",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SUCCESS",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 180,
        "wires": [
            [
                "113305d1ead1d0e2"
            ],
            []
        ]
    },
    {
        "id": "f04d9309fc845818",
        "type": "function",
        "z": "743f388ad8cf50d6",
        "name": "",
        "func": "let adjustData = {};\nfor (let opt in msg.payload) {\n    if (msg.payload.hasOwnProperty(opt)) {\n        let val = msg.payload[opt];\n        if (val !== undefined && val !== null  && val !== []) {\n            if (Array.isArray(val)) {\n                    let newval = val.join(\", \")\n                    adjustData[opt] = newval;\n            } else {\n                adjustData[opt] = val;\n            }\n        }\n    }\n}\nmsg.payload = adjustData;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 180,
        "wires": [
            [
                "22bbcd73af786312",
                "92c394ab8b9ebc74"
            ]
        ]
    },
    {
        "id": "22bbcd73af786312",
        "type": "debug",
        "z": "743f388ad8cf50d6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 270,
        "y": 280,
        "wires": []
    },
    {
        "id": "113305d1ead1d0e2",
        "type": "change",
        "z": "743f388ad8cf50d6",
        "name": "Delete URL and Headers",
        "rules": [
            {
                "t": "delete",
                "p": "url",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "headers",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "method",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 40,
        "wires": [
            [
                "9ad079406a9f4872"
            ]
        ]
    },
    {
        "id": "9ad079406a9f4872",
        "type": "switch",
        "z": "743f388ad8cf50d6",
        "name": "Check args.keep",
        "property": "args.keep",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 40,
        "wires": [
            [],
            [
                "5fee046b5612fe4c"
            ]
        ]
    },
    {
        "id": "5fee046b5612fe4c",
        "type": "change",
        "z": "743f388ad8cf50d6",
        "name": "Delete Arguments",
        "rules": [
            {
                "t": "delete",
                "p": "args",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "94a2f56e6272194d",
        "type": "change",
        "z": "743f388ad8cf50d6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "document",
                "pt": "msg",
                "to": "update_version.payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "delete",
                "p": "update_version",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "update_version",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "update_version",
                "pt": "msg",
                "to": "$merge([create_doc, {\"document\":document}])",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "url",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "method",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "document",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "0a3a96387a18483c",
        "type": "http in",
        "z": "f5e72a5d369ff484",
        "name": "",
        "url": "session",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 760,
        "wires": [
            [
                "819cb89bee3d0e2d"
            ]
        ]
    },
    {
        "id": "85c7213efcdaf17f",
        "type": "http in",
        "z": "f5e72a5d369ff484",
        "name": "",
        "url": "token",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 920,
        "wires": [
            [
                "4e70374a72ff3ea6"
            ]
        ]
    },
    {
        "id": "bcecaf982469091d",
        "type": "http request",
        "z": "f5e72a5d369ff484",
        "name": "authenticate",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1270,
        "y": 920,
        "wires": [
            [
                "dfe9410a2a28ec7b"
            ]
        ]
    },
    {
        "id": "f8722885b710afc5",
        "type": "change",
        "z": "f5e72a5d369ff484",
        "name": "set parameters",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"Content-Type\": \"application/x-www-form-urlencoded\",\t   \"Accept\": \"application/json\",\t   \"Authorization\": \"Bearer \" & payload.id_token,\t   \"X-VaultAPI-ClientID\": params.client_id\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "params.vault_domain = \"bayer-brave.veevavault.com\" ? \"https://login.veevavault.com/auth/oauth/session/_7024273a-b9a1-4560-b35e-457a59dd2259\": \"https://login.veevavault.com/auth/oauth/session/_48834f8c-49e5-4b59-ade3-1c78e4cb7a61\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"vaultDNS\": params.vault_domain\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 920,
        "wires": [
            [
                "bcecaf982469091d"
            ]
        ]
    },
    {
        "id": "cc1f578b9e99b8c4",
        "type": "change",
        "z": "f5e72a5d369ff484",
        "name": "redirect to flow",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "/* only allow upper and lower case characters, numbers, hyphen and underscore\t   as flow name to prevent cross-site scripting */\t\"/nodes/\" & $replace(\t   params.flow,\t   /[^a-zA-Z0-9-_]/,\t   \"\"    \t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "303",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "query",
                "pt": "msg",
                "to": "/* Convert object to query string */\tparams ~> $each(\t   function($v, $n) {\t       [\t           $n,\t           $v ~> $string ~> $encodeUrlComponent\t       ] ~> $join(\"=\")        \t   }    \t) ~> $join(\"&\")",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"location\": url & \"?\" & query\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 780,
        "wires": [
            [
                "8c2c1d9d09f8a919"
            ]
        ]
    },
    {
        "id": "dfe9410a2a28ec7b",
        "type": "switch",
        "z": "f5e72a5d369ff484",
        "name": "response status",
        "property": "payload.responseStatus",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SUCCESS",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1480,
        "y": 920,
        "wires": [
            [
                "9593ab6289c8323f"
            ],
            []
        ]
    },
    {
        "id": "262aba123c6ea80f",
        "type": "comment",
        "z": "f5e72a5d369ff484",
        "name": "responde to AzureAD postback",
        "info": "",
        "x": 190,
        "y": 880,
        "wires": []
    },
    {
        "id": "3148932905f3bca7",
        "type": "json",
        "z": "f5e72a5d369ff484",
        "name": "parse state",
        "property": "params",
        "action": "obj",
        "pretty": false,
        "x": 570,
        "y": 920,
        "wires": [
            [
                "0c6cad8261442e8f"
            ]
        ]
    },
    {
        "id": "4e70374a72ff3ea6",
        "type": "change",
        "z": "f5e72a5d369ff484",
        "name": "store params",
        "rules": [
            {
                "t": "set",
                "p": "params",
                "pt": "msg",
                "to": "payload.state",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 920,
        "wires": [
            [
                "3148932905f3bca7"
            ]
        ]
    },
    {
        "id": "d6d72fa32350287a",
        "type": "switch",
        "z": "f5e72a5d369ff484",
        "name": "redirect?",
        "property": "params.flow",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1260,
        "y": 760,
        "wires": [
            [
                "35051a3545d1e8af"
            ],
            [
                "cc1f578b9e99b8c4"
            ]
        ]
    },
    {
        "id": "35051a3545d1e8af",
        "type": "template",
        "z": "f5e72a5d369ff484",
        "name": "show session id",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n    <body>\n        <p>Your Vault Session ID for <b>{{params.vault_domain}}</b> is <b>{{payload.sessionId}}</b>.</p>\n    </body>\n</html>\n",
        "output": "str",
        "x": 1480,
        "y": 740,
        "wires": [
            [
                "8c2c1d9d09f8a919"
            ]
        ]
    },
    {
        "id": "9b5b9c4fc62588c5",
        "type": "comment",
        "z": "f5e72a5d369ff484",
        "name": "retrieve session id from cookie or redirect to login",
        "info": "",
        "x": 250,
        "y": 80,
        "wires": []
    },
    {
        "id": "1e8d3a61593356ca",
        "type": "switch",
        "z": "f5e72a5d369ff484",
        "name": "check cookie",
        "property": "req.cookies.session_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "jsonata_exp",
                "v": "req.cookies.session_id and req.cookies.vault_domain and ($not($exists(payload.vault_domain)) or payload.vault_domain = req.cookies.vault_domain)",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 120,
        "wires": [
            [
                "c5cb49688452c535"
            ],
            [
                "64b003f7a1c1a58b"
            ]
        ]
    },
    {
        "id": "c5cb49688452c535",
        "type": "change",
        "z": "f5e72a5d369ff484",
        "name": "retrieve session_id from cookie",
        "rules": [
            {
                "t": "set",
                "p": "session_id",
                "pt": "msg",
                "to": "req.cookies.session_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "vault_api",
                "pt": "msg",
                "to": "\"https://\" & req.cookies.vault_domain & \"/api/\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "credentials",
                "pt": "msg",
                "to": "$merge(\t    [\t       credentials,\t       {\t           payload.vault_domain: {\t               \"session_id\": session_id,\t               \"vault_api\": vault_api\t            }\t        }\t    ]\t)",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "64b003f7a1c1a58b",
        "type": "change",
        "z": "f5e72a5d369ff484",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.flow",
                "pt": "msg",
                "to": "$substringBefore(req.url, \"?\") ~> $substringAfter(\"/\") ",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 200,
        "wires": [
            [
                "4d5f079101590ddc"
            ]
        ]
    },
    {
        "id": "0c6cad8261442e8f",
        "type": "switch",
        "z": "f5e72a5d369ff484",
        "name": "vault_domain specified?",
        "property": "params.vault_domain",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 920,
        "wires": [
            [
                "fbdf547da8acaa84"
            ],
            [
                "f8722885b710afc5"
            ]
        ]
    },
    {
        "id": "9593ab6289c8323f",
        "type": "change",
        "z": "f5e72a5d369ff484",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "cookies",
                "pt": "msg",
                "to": "/* Store session state in cookie */\t{\t   \"session_id\": {\t       \"value\": payload.sessionId,\t       \"sameSite\": \"none\",\t       \"secure\": true,\t       \"domain\": $substringBefore(req.headers.host, \":\"),\t       \"path\": \"/nodes/\",\t       \"maxAge\": 7000000     \t   },\t   \"user_id\": {\t       \"value\": payload.userId,\t       \"sameSite\": \"none\",\t       \"secure\": true,\t       \"domain\": $substringBefore(req.headers.host, \":\"),\t       \"path\": \"/nodes/\",\t       \"maxAge\": 7000000    \t   },\t   \"vault_id\":  {\t       \"value\": payload.vaultId,\t       \"sameSite\": \"none\",\t       \"secure\": true,\t       \"domain\": $substringBefore(req.headers.host, \":\"),\t       \"path\": \"/nodes/\",\t       \"maxAge\": 7000000    \t   },\t   \"vault_domain\":  {\t       \"value\": params.vault_domain,\t       \"sameSite\": \"none\",\t       \"secure\": true,\t       \"domain\": $substringBefore(req.headers.host, \":\"),\t       \"path\": \"/nodes/\",\t       \"maxAge\": 7000000    \t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 760,
        "wires": [
            [
                "d6d72fa32350287a"
            ]
        ]
    },
    {
        "id": "819cb89bee3d0e2d",
        "type": "change",
        "z": "f5e72a5d369ff484",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "params",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "delete",
                "p": "params.sessionId",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 760,
        "wires": [
            [
                "4683cc7ab133183c"
            ]
        ]
    },
    {
        "id": "46617671d19f352a",
        "type": "comment",
        "z": "f5e72a5d369ff484",
        "name": "respond to Vault UI postback",
        "info": "",
        "x": 180,
        "y": 720,
        "wires": []
    },
    {
        "id": "4683cc7ab133183c",
        "type": "switch",
        "z": "f5e72a5d369ff484",
        "name": "vault_domain specified?",
        "property": "params.vault_domain",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 760,
        "wires": [
            [
                "fbdf547da8acaa84"
            ],
            [
                "9593ab6289c8323f"
            ]
        ]
    },
    {
        "id": "8c2c1d9d09f8a919",
        "type": "http response",
        "z": "f5e72a5d369ff484",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1670,
        "y": 760,
        "wires": []
    },
    {
        "id": "7848e7b4057f6f9e",
        "type": "comment",
        "z": "f5e72a5d369ff484",
        "name": "store session id in cookie",
        "info": "",
        "x": 1090,
        "y": 720,
        "wires": []
    },
    {
        "id": "6c62d9d78cbe0589",
        "type": "comment",
        "z": "f5e72a5d369ff484",
        "name": "login to Vault with OIDC identity token",
        "info": "",
        "x": 1130,
        "y": 880,
        "wires": []
    },
    {
        "id": "b8a7dc88238be9d4",
        "type": "comment",
        "z": "f5e72a5d369ff484",
        "name": "remember were we came from and redirect to authentication endpoint",
        "info": "",
        "x": 870,
        "y": 160,
        "wires": []
    },
    {
        "id": "0d358bfc8dec99b9",
        "type": "switch",
        "z": "f5e72a5d369ff484",
        "name": "check client_id",
        "property": "client_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 220,
        "y": 120,
        "wires": [
            [
                "1e8d3a61593356ca"
            ],
            [
                "32fa71bc98a87621"
            ]
        ]
    },
    {
        "id": "32fa71bc98a87621",
        "type": "change",
        "z": "f5e72a5d369ff484",
        "name": "set default client_id",
        "rules": [
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "BRAVE Automation",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 180,
        "wires": [
            [
                "1e8d3a61593356ca"
            ]
        ]
    },
    {
        "id": "18b010a895e1417a",
        "type": "comment",
        "z": "f5e72a5d369ff484",
        "name": "login to Vault with username and password",
        "info": "",
        "x": 1020,
        "y": 240,
        "wires": []
    },
    {
        "id": "54a2ce65fc4c91cb",
        "type": "http in",
        "z": "f5e72a5d369ff484",
        "name": "",
        "url": "login",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 360,
        "wires": [
            [
                "4d5f079101590ddc"
            ]
        ]
    },
    {
        "id": "d954d906c591d73a",
        "type": "http response",
        "z": "f5e72a5d369ff484",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1330,
        "y": 360,
        "wires": []
    },
    {
        "id": "6561d7e4eb82f5b9",
        "type": "change",
        "z": "f5e72a5d369ff484",
        "name": "redirect",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "https://login.microsoftonline.com/fcb2b37b-5da0-466b-9b83-0014b67a7c78/oauth2/v2.0/authorize",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "/* Filter the host header from the list of raw headers */\t$map(\t   req.rawHeaders,\t   function($v, $i, $a) { $v=\"Host\" ? $a[$i+1] : \"\" }\t) ~> $join",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "params",
                "pt": "msg",
                "to": "{\t   \"client_id\": \"8637bbe4-718a-46d5-9d43-dfbdf4f50866\",\t   \"redirect_uri\": \"https://\" & host & \"/nodes/token\",\t   \"scope\": \"openid profile\",\t   \"response_type\": \"id_token\",\t   \"response_mode\": \"form_post\",\t   \"state\": payload,\t   \"nonce\": $random()*10000000000000000\t}",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "303",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"location\": [\t       url,\t       params ~> $each(\t           function($v,$n) {\t               [\t                   $n,\t                   $v ~> $string ~> $encodeUrlComponent\t               ] ~> $join(\"=\")\t           }\t       ) ~> $join(\"&\")\t   ] ~> $join(\"?\")\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 360,
        "wires": [
            [
                "d954d906c591d73a"
            ]
        ]
    },
    {
        "id": "a00e55d08eb6995b",
        "type": "comment",
        "z": "f5e72a5d369ff484",
        "name": "redirect to Microsoft OAuth2 endpoint",
        "info": "",
        "x": 1010,
        "y": 320,
        "wires": []
    },
    {
        "id": "710c68317fbdb471",
        "type": "switch",
        "z": "f5e72a5d369ff484",
        "name": "SSO?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "sso",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 730,
        "y": 400,
        "wires": [
            [
                "6561d7e4eb82f5b9"
            ],
            [
                "f812e94fda587f60"
            ]
        ]
    },
    {
        "id": "ec23c3995a239d7b",
        "type": "template",
        "z": "f5e72a5d369ff484",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html>\n\n<head>\n    <title>Loading ...</title>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/css/bootstrap.min.css\"\n        integrity=\"sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu\" crossorigin=\"anonymous\">\n    <script src=\"https://code.jquery.com/jquery-1.12.4.min.js\"\n        integrity=\"sha384-nvAa0+6Qg9clwYCGGPpDQLVpLNn0fRaROjHqs13t4Ggj3Ez50XnGQqc/r8MhnRDZ\"\n        crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/js/bootstrap.min.js\"\n        integrity=\"sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd\"\n        crossorigin=\"anonymous\"></script>\n    <script type=\"text/javascript\">\n        function msgHandler(e) {\n            var message = JSON.parse(e.data);\n\n            // check if we got a session id\n            if (message['message_id'] == 'session_id') {\n                // unregister event handler\n                window.removeEventListener('message', msgHandler, false);\n\n                var data = JSON.parse('{{{payload}}}');\n                data.sessionId = message['data']['session_id'];\n\n                // forward call with session id\n                $.ajax({\n                    url: \"/nodes/session\",\n                    type: \"POST\",\n                    data: data,\n                    success: function (response) {\n                        // replace content of current page on success\n                        var newDoc = document.open(\"text/html\", \"replace\");                        \n                        newDoc.write(response);\n                        newDoc.close();\n                    },\n                    error: function (jqXHR, exception) {\n                        // show error message on failure\n                        var message = exception;\n\n                        if (jqXHR.status === 0) {\n                            message = 'Server connection issue. Please try again.';\n                        } else if (jqXHR.status == 404) {\n                            message = 'Requested page not found. [404]';\n                        } else if (jqXHR.status == 500) {\n                            message = 'Internal Server Error [500]. Please try again.';\n                        } else if (exception === 'parsererror') {\n                            message = 'Requested JSON parse failed.';\n                        } else if (exception === 'timeout') {\n                            message = 'Time out error.';\n                        } else if (exception === 'abort') {\n                            message = 'Ajax request aborted.';\n                        } else {\n                            message = 'Uncaught Error.\\n' + jqXHR.responseText;\n                        }\n\n                        alert(message);\n                    },\n                    //timeout of the ajax call\n                    timeout: 60000\n                });\n            }\n        }\n\n\n        function postMessage() {\n            $(\"#modal\").modal(\"show\");\n\n            // register event handler\n            window.addEventListener('message', msgHandler, false);\n\n            var readyMessage = JSON.stringify({\n                'message_id': 'ready',\n                'data': {}\n            });\n\n            // send ready message to parent frame\n            window.parent.postMessage(readyMessage, '*');\n        }\n    </script>\n</head>\n\n<body onLoad=\"postMessage()\">\n    <div class=\"modal fade\" id=\"modal\" tabindex=\"-1\" data-backdrop=\"static\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Processing ...</h4>\n                </div>\n                <div class=\"modal-body\">\n                    <p>Please wait while the page is loading.</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</body>\n\n</html>",
        "output": "str",
        "x": 1080,
        "y": 440,
        "wires": [
            [
                "8db6334f81e6757f"
            ]
        ]
    },
    {
        "id": "f812e94fda587f60",
        "type": "json",
        "z": "f5e72a5d369ff484",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 910,
        "y": 440,
        "wires": [
            [
                "ec23c3995a239d7b"
            ]
        ]
    },
    {
        "id": "4ad9e66a92530483",
        "type": "comment",
        "z": "f5e72a5d369ff484",
        "name": "Ask Vault UI for a session id",
        "info": "",
        "x": 980,
        "y": 400,
        "wires": []
    },
    {
        "id": "8db6334f81e6757f",
        "type": "http response",
        "z": "f5e72a5d369ff484",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1330,
        "y": 440,
        "wires": []
    },
    {
        "id": "4d5f079101590ddc",
        "type": "switch",
        "z": "f5e72a5d369ff484",
        "name": "username?",
        "property": "payload.username",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 360,
        "wires": [
            [
                "98f00e1c3836bd8a"
            ],
            [
                "710c68317fbdb471"
            ]
        ]
    },
    {
        "id": "98f00e1c3836bd8a",
        "type": "switch",
        "z": "f5e72a5d369ff484",
        "name": "password?",
        "property": "payload.password",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 550,
        "y": 320,
        "wires": [
            [
                "6af974f9d0cd8df1"
            ],
            [
                "710c68317fbdb471"
            ]
        ]
    },
    {
        "id": "ada8f69193886c99",
        "type": "http request",
        "z": "f5e72a5d369ff484",
        "name": "authenticate",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1150,
        "y": 280,
        "wires": [
            [
                "6a0d51294183358f"
            ]
        ]
    },
    {
        "id": "6af974f9d0cd8df1",
        "type": "change",
        "z": "f5e72a5d369ff484",
        "name": "set parameters",
        "rules": [
            {
                "t": "set",
                "p": "vault_domain",
                "pt": "msg",
                "to": "payload.vault_domain",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_api",
                "pt": "msg",
                "to": "\"https://\" & vault_domain & \"/api/\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"Content-Type\": \"application/x-www-form-urlencoded\",\t   \"Accept\": \"application/json\",\t   \"X-VaultAPI-ClientID\": client_id\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "\"https://\" & vault_domain & \"/api/v22.3/auth\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"username\": payload.username,\t   \"password\": payload.password,\t   \"vaultDNS\": vault_domain\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 280,
        "wires": [
            [
                "ada8f69193886c99"
            ]
        ]
    },
    {
        "id": "6a0d51294183358f",
        "type": "switch",
        "z": "f5e72a5d369ff484",
        "name": "response status",
        "property": "payload.responseStatus",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SUCCESS",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1360,
        "y": 280,
        "wires": [
            [
                "c6034b65dd7643c5"
            ],
            []
        ]
    },
    {
        "id": "c6034b65dd7643c5",
        "type": "change",
        "z": "f5e72a5d369ff484",
        "name": "set result & cleanup",
        "rules": [
            {
                "t": "set",
                "p": "session_id",
                "pt": "msg",
                "to": "payload.sessionId",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "user_id",
                "pt": "msg",
                "to": "payload.userId",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_id",
                "pt": "msg",
                "to": "payload.vaultId",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "credentials",
                "pt": "msg",
                "to": "$merge(\t    [\t       credentials,\t       {\t           vault_domain: {\t               \"session_id\": session_id,\t               \"vault_api\": vault_api\t            }\t        }\t    ]\t)",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "headers",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "url",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "statusCode",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "responseUrl",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "redirectList",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "retry",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "25a56b2568cc5fca",
        "type": "comment",
        "z": "f5e72a5d369ff484",
        "name": "ignore cookie and force login",
        "info": "",
        "x": 180,
        "y": 320,
        "wires": []
    },
    {
        "id": "fbdf547da8acaa84",
        "type": "change",
        "z": "f5e72a5d369ff484",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.errors",
                "pt": "msg",
                "to": "[{\"type\":\"no vault_domain specified\",\"message\":\"Please specify the Veeva Vault to connect to in the vault_domain parameter\"}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "8ed2ee144c40628d",
        "type": "debug",
        "z": "f5e72a5d369ff484",
        "name": "debug 215",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 120,
        "wires": []
    },
    {
        "id": "f05792084b4f97d3",
        "type": "debug",
        "z": "f5e72a5d369ff484",
        "name": "debug 216",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 60,
        "wires": []
    },
    {
        "id": "35e777a094c4a974",
        "type": "debug",
        "z": "f5e72a5d369ff484",
        "name": "debug 224",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 180,
        "wires": []
    },
    {
        "id": "263cbab87505f9ad",
        "type": "debug",
        "z": "f5e72a5d369ff484",
        "name": "debug 267",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 520,
        "wires": []
    },
    {
        "id": "5888db7cadd5c8f9",
        "type": "debug",
        "z": "f5e72a5d369ff484",
        "name": "debug 268",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 520,
        "wires": []
    },
    {
        "id": "a95b3eb8a3ea40dd",
        "type": "http in",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "",
        "url": "ctad",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 460,
        "wires": [
            [
                "7df34bf278de232c"
            ]
        ]
    },
    {
        "id": "7df34bf278de232c",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "Set basic parameters",
        "rules": [
            {
                "t": "set",
                "p": "study_id",
                "pt": "msg",
                "to": "payload.study_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "starttime",
                "pt": "msg",
                "to": "$now()",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "cta-automation",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "vault_domain_url",
                "pt": "msg",
                "to": "\"https://\" & payload.vault_domain",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 460,
        "wires": [
            [
                "e1528945b7b35bc5",
                "fc41e3958fc57881"
            ]
        ]
    },
    {
        "id": "e1528945b7b35bc5",
        "type": "brave-login",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "",
        "x": 490,
        "y": 460,
        "wires": [
            [
                "0d04e49d871e24b5"
            ],
            [
                "d1295ce2fe20155c"
            ]
        ]
    },
    {
        "id": "d1295ce2fe20155c",
        "type": "link out",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "",
        "mode": "link",
        "links": [
            "0b4394d395558302"
        ],
        "x": 2715,
        "y": 440,
        "wires": []
    },
    {
        "id": "0d04e49d871e24b5",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "query study",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v, study_alias__c, product__v, product__vr.name__v, (select id, name__v, product__c, product__cr.name__v, product_family__c, product_family__cr.name__v, product_variant__c, product_variant__cr.name__v from clinical_study_products__cr), (select id, project__cr.name__v from project_clinical_studies__cr), (select id, name__v, therapeutic_indication__c, therapeutic_indication__cr.name__v from therapeutic_indication_clinical_studies__cr) from clinical_study__v where id='\" & study_id & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 540,
        "wires": [
            [
                "1adcfc18ea193483"
            ]
        ]
    },
    {
        "id": "afd56f63ba84e193",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "study",
                "pt": "msg",
                "to": "payload.data[0]",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 540,
        "wires": [
            [
                "89aade3fd4849cf3",
                "e52a4fe1e67ec89d"
            ]
        ]
    },
    {
        "id": "89aade3fd4849cf3",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 500,
        "wires": []
    },
    {
        "id": "1adcfc18ea193483",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "",
        "x": 830,
        "y": 540,
        "wires": [
            [
                "afd56f63ba84e193"
            ],
            [
                "d1295ce2fe20155c"
            ]
        ]
    },
    {
        "id": "e52a4fe1e67ec89d",
        "type": "switch",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "check study data",
        "property": "study",
        "propertyType": "msg",
        "rules": [
            {
                "t": "jsonata_exp",
                "v": "study.product__v = null",
                "vt": "jsonata"
            },
            {
                "t": "jsonata_exp",
                "v": "$count(study.clinical_study_products__cr.data) = 0",
                "vt": "jsonata"
            },
            {
                "t": "jsonata_exp",
                "v": "$distinct(study.clinical_study_products__cr.data.product_family__c) != study.product__v /* some products do not match primary product familiy */",
                "vt": "jsonata"
            },
            {
                "t": "jsonata_exp",
                "v": "$count(study.project_clinical_studies__cr.data) > 1",
                "vt": "jsonata"
            },
            {
                "t": "jsonata_exp",
                "v": "$count(study.therapeutic_indication_clinical_studies__cr.data) = 0",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 6,
        "x": 1450,
        "y": 540,
        "wires": [
            [
                "9af30450c6112b17"
            ],
            [
                "221e6a37d7438241"
            ],
            [
                "4eedfa2c0f6d5dca"
            ],
            [
                "ad3d43f8c209bac3"
            ],
            [
                "43a8f21c944f48c2"
            ],
            [
                "427c9dafee3eee2e"
            ]
        ]
    },
    {
        "id": "221e6a37d7438241",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "no products",
        "rules": [
            {
                "t": "set",
                "p": "description",
                "pt": "msg",
                "to": "\"Study \" & study.name__v & \" \" & study.study_alias__c & \" is invalid.\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.errors",
                "pt": "msg",
                "to": "[{\"type\":\"Incomplete Data\",\"message\":\"The study has no products\"}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1650,
        "y": 480,
        "wires": [
            [
                "d1295ce2fe20155c",
                "92a36617cc355cc4"
            ]
        ]
    },
    {
        "id": "9af30450c6112b17",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "no product family",
        "rules": [
            {
                "t": "set",
                "p": "description",
                "pt": "msg",
                "to": "\"Study \" & study.name__v & \" \" & study.study_alias__c & \" is invalid.\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.errors",
                "pt": "msg",
                "to": "[{\"type\":\"Incomplete Data\",\"message\":\"The study has no primary product family\"}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1670,
        "y": 440,
        "wires": [
            [
                "d1295ce2fe20155c",
                "8706a9e4bba62613"
            ]
        ]
    },
    {
        "id": "4eedfa2c0f6d5dca",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "products don't match pf",
        "rules": [
            {
                "t": "set",
                "p": "description",
                "pt": "msg",
                "to": "\"Study \" & study.name__v & \" \" & study.study_alias__c & \" is invalid.\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.errors",
                "pt": "msg",
                "to": "[{\"type\":\"Inconsistent Data\",\"message\":\"The product family of the products do not match the primary product family of the study\"}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1690,
        "y": 520,
        "wires": [
            [
                "d1295ce2fe20155c",
                "5543a07a1d0be52e"
            ]
        ]
    },
    {
        "id": "5543a07a1d0be52e",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1890,
        "y": 520,
        "wires": []
    },
    {
        "id": "92a36617cc355cc4",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1890,
        "y": 480,
        "wires": []
    },
    {
        "id": "8706a9e4bba62613",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1890,
        "y": 440,
        "wires": []
    },
    {
        "id": "427c9dafee3eee2e",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "query product family indications",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select therapeutic_indication__c, therapeutic_indication__cr.name__v from product_family_indication__c where status__v='active__v' and product_family__c='\" & study.product__v & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1710,
        "y": 640,
        "wires": [
            [
                "ace69593860de565"
            ]
        ]
    },
    {
        "id": "ace69593860de565",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "",
        "x": 1950,
        "y": 640,
        "wires": [
            [
                "00fdcb9a7b7f71e2"
            ],
            [
                "d1295ce2fe20155c"
            ]
        ]
    },
    {
        "id": "00fdcb9a7b7f71e2",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "indications",
                "pt": "msg",
                "to": "payload.data",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2150,
        "y": 640,
        "wires": [
            [
                "05a3105881a36074"
            ]
        ]
    },
    {
        "id": "05a3105881a36074",
        "type": "switch",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "check indications",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "jsonata_exp",
                "v": "$reduce(\t   study.therapeutic_indication_clinical_studies__cr.data.therapeutic_indication__c,\t   function($a, $v) {\t       $a and $v in indications.therapeutic_indication__c\t   },\t   true\t)",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2370,
        "y": 640,
        "wires": [
            [
                "ec1a25f9388786d7"
            ],
            [
                "7d76dabf1f75f67d"
            ]
        ]
    },
    {
        "id": "7d76dabf1f75f67d",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "indications don't match pf",
        "rules": [
            {
                "t": "set",
                "p": "description",
                "pt": "msg",
                "to": "\"Study \" & study.name__v & \" \" & study.study_alias__c & \" is invalid.\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.errors",
                "pt": "msg",
                "to": "[{\"type\":\"Inconsistent Data\",\"message\":\"At least one indication of the clinical study is not valid for the primary product family.\"}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2610,
        "y": 640,
        "wires": [
            [
                "d1295ce2fe20155c"
            ]
        ]
    },
    {
        "id": "127f606ce23423fd",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "create event",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"event__rim\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[\t   {\t       \"object_type__vr.api_name__v\": \"clinical_study_event__c\",\t       \"applicable_product_type__v\": \"drug__v\",\t       \"event_description__c\": params.event_description__c !=\"\" ? params.event_description__c : \"N/A\" & (params.shelf_life !=\"\" ? \"; Shelf life: \" & params.shelf_life : \"\"),\t       \"keywords__c\": \"clinical_initial_cta__c\",\t       \"rec__c\": rec_id,\t       \"global_application__v\": global_application,\t       \"content_plan_template__v\": \"0EP00000004B425\",\t       \"project_id__c\": study.project_clinical_studies__cr.data[0].project__c\t       \t   }\t]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 130,
        "y": 1520,
        "wires": [
            [
                "5eaedb53b36ae3ba"
            ]
        ]
    },
    {
        "id": "09acfdce79ce877b",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "store result",
        "rules": [
            {
                "t": "set",
                "p": "event_id",
                "pt": "msg",
                "to": "payload.data[0].data.id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 1520,
        "wires": [
            [
                "e305967f4ea2cf17",
                "ac182d7b69f0f86a"
            ]
        ]
    },
    {
        "id": "1125ca63681257a8",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "link to product family",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"event_product_family__c\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[\t   {\t       \"name__v\": event_id & \"_\" & study.product__v,\t       \"event__c\": event_id,\t       \"product_family__c\": study.product__v\t    }\t]",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 1640,
        "wires": [
            [
                "643f9f0f66032d88"
            ]
        ]
    },
    {
        "id": "e81f7d4c11cd8c6f",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "link to products",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"event_drug_product__rim\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[\t    study.clinical_study_products__cr.data.{\t       \"event__rim\": $$.event_id,\t       \"product_family__c\": product_family__c,\t       \"drug_product__rim\": product__c,\t       \"product_detail__rim\": product_variant__c\t    }\t]",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 140,
        "y": 1700,
        "wires": [
            [
                "99b2acd236550eec"
            ]
        ]
    },
    {
        "id": "f57054fb3844241f",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "link to study",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"event_clinical_study__v\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[\t   {\t       \"event__v\": event_id,\t       \"clinical_study__v\": study_id,\t       \"impd_version_quality_part__c\": params.impd_version_quality_part__c,\t       \"impd_version_nonquality_part__c\": params.impd_version_nonquality_part__c,\t       \"protocol_version__c\": params.protocol_version__c,\t       \"ib_version__c\": params.ib_version__c\t    }\t]",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 130,
        "y": 1760,
        "wires": [
            [
                "53f08c6da7acde3e"
            ]
        ]
    },
    {
        "id": "e305967f4ea2cf17",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 1520,
        "wires": []
    },
    {
        "id": "780bdf10996d5dd7",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 1640,
        "wires": []
    },
    {
        "id": "9059fa56b54821ca",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 1700,
        "wires": []
    },
    {
        "id": "52e92467706337e4",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 1760,
        "wires": []
    },
    {
        "id": "5eaedb53b36ae3ba",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "",
        "x": 380,
        "y": 1520,
        "wires": [
            [
                "09acfdce79ce877b"
            ],
            [
                "3916d23c39b50211"
            ]
        ]
    },
    {
        "id": "643f9f0f66032d88",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "",
        "x": 380,
        "y": 1640,
        "wires": [
            [
                "e81f7d4c11cd8c6f",
                "780bdf10996d5dd7"
            ],
            [
                "3916d23c39b50211"
            ]
        ]
    },
    {
        "id": "99b2acd236550eec",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "",
        "x": 380,
        "y": 1700,
        "wires": [
            [
                "9059fa56b54821ca",
                "f57054fb3844241f"
            ],
            [
                "3916d23c39b50211"
            ]
        ]
    },
    {
        "id": "53f08c6da7acde3e",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "",
        "x": 380,
        "y": 1760,
        "wires": [
            [
                "52e92467706337e4",
                "08dcb3332d416a46"
            ],
            [
                "3916d23c39b50211"
            ]
        ]
    },
    {
        "id": "3916d23c39b50211",
        "type": "link out",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "",
        "mode": "link",
        "links": [
            "0b4394d395558302"
        ],
        "x": 685,
        "y": 1680,
        "wires": []
    },
    {
        "id": "08dcb3332d416a46",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "link to indications",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"event_indication__rim\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[\t   study.therapeutic_indication_clinical_studies__cr.data.{\t       \"product_family__c\": $$.study.product__v,\t       \"indication__rim\": therapeutic_indication__c,\t       \"event__rim\": $$.event_id\t    }\t]",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 150,
        "y": 1820,
        "wires": [
            [
                "20c245ddd5dc2999"
            ]
        ]
    },
    {
        "id": "20c245ddd5dc2999",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "",
        "x": 380,
        "y": 1820,
        "wires": [
            [
                "bda7c5f6b4546054",
                "9430be7746db98ea"
            ],
            [
                "3916d23c39b50211"
            ]
        ]
    },
    {
        "id": "bda7c5f6b4546054",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 1820,
        "wires": []
    },
    {
        "id": "cb1e931c1520a0a2",
        "type": "http in",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "",
        "url": "cta-event",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 1280,
        "wires": [
            [
                "d982ee4112ccfb11",
                "e9daca4394c17dc9"
            ]
        ]
    },
    {
        "id": "e9daca4394c17dc9",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "store parameters",
        "rules": [
            {
                "t": "set",
                "p": "study_id",
                "pt": "msg",
                "to": "payload.study_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "params",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "job.job_scope",
                "pt": "msg",
                "to": "payload.job_scope",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "job.job_type",
                "pt": "msg",
                "to": "payload.job_type",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 1280,
        "wires": [
            [
                "7c44e24c5afad6c7",
                "43b7bc103c77a4ea"
            ]
        ]
    },
    {
        "id": "43b7bc103c77a4ea",
        "type": "brave-login",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "",
        "x": 630,
        "y": 1280,
        "wires": [
            [
                "8ed76db6b0e4920e"
            ],
            [
                "3916d23c39b50211"
            ]
        ]
    },
    {
        "id": "7c44e24c5afad6c7",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 1240,
        "wires": []
    },
    {
        "id": "9430be7746db98ea",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "restart CTA creation",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"location\":\"/nodes/cta/execute?study_id=\" & study_id & \"&event_id=\" & event_id & \"&job_type=\" & job.job_type & \"&job_scope=\" & job.job_scope\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "303",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 150,
        "y": 1880,
        "wires": [
            [
                "05d9e73aaf4a53f9"
            ]
        ]
    },
    {
        "id": "d982ee4112ccfb11",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 1240,
        "wires": []
    },
    {
        "id": "8ed76db6b0e4920e",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "query study",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v, study_alias__c, product__v, product__vr.name__v, (select id, name__v, product__c, product__cr.name__v, product_family__c, product_family__cr.name__v, product_variant__c, product_variant__cr.name__v from clinical_study_products__cr), (select id, project__c, project__cr.name__v from project_clinical_studies__cr), (select id, name__v, therapeutic_indication__c, therapeutic_indication__cr.name__v from therapeutic_indication_clinical_studies__cr) from clinical_study__v where id='\" & study_id & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 130,
        "y": 1340,
        "wires": [
            [
                "f8390b9b8f960aab"
            ]
        ]
    },
    {
        "id": "f8390b9b8f960aab",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "",
        "x": 370,
        "y": 1340,
        "wires": [
            [
                "fb7f6db22a82a5ce"
            ],
            [
                "3916d23c39b50211"
            ]
        ]
    },
    {
        "id": "fb7f6db22a82a5ce",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "study",
                "pt": "msg",
                "to": "payload.data[0]",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 1340,
        "wires": [
            [
                "1d834a7935beee6b",
                "eadb4a6f7d0dd4bc"
            ]
        ]
    },
    {
        "id": "1d834a7935beee6b",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 1340,
        "wires": []
    },
    {
        "id": "9bc8ca63c489f130",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "f4492470635578ae",
        "name": "link to products",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"product_application__c\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[\t    applications ~> $map(function($application) {\t       study.clinical_study_products__cr.data.{\t           \"application__c\": $application.id,\t           \"product_family__c\": product_family__c,\t           \"product__c\": product__c,\t           \"product_variant__c\": product_variant__c\t        }\t    }) ~> $reduce(function($accumulator, $value) {$append($accumulator, $value)})\t]",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 3340,
        "wires": [
            [
                "c50f180f6dc5b7a7"
            ]
        ]
    },
    {
        "id": "0e58817144b122ca",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "f4492470635578ae",
        "name": "link to study",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"application_clinical_study__c\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "applications.{\t   \"application__c\": id,\t   \"clinical_study__c\": $$.study.id\t}[]\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 3280,
        "wires": [
            [
                "26ef94169b200292"
            ]
        ]
    },
    {
        "id": "beaeeede45688d8f",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "f4492470635578ae",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "application_ids",
                "pt": "msg",
                "to": "payload.data[responseStatus=\"SUCCESS\"].data.id[]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "created_application_ids",
                "pt": "msg",
                "to": "payload.data[responseStatus=\"SUCCESS\"].data.id[]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1860,
        "y": 3100,
        "wires": [
            [
                "5ee56af170f12036",
                "0f325294ff3deaf7"
            ]
        ]
    },
    {
        "id": "0f325294ff3deaf7",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "f4492470635578ae",
        "name": "query applications",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v, lead_market__rim from application__v where \" & (application_ids ~> $map(function($v) {\"id='\" & $v & \"'\"}) ~> $join(\" OR \"))",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 3160,
        "wires": [
            [
                "bcdb50eb60cfc78d"
            ]
        ]
    },
    {
        "id": "352697d0f9b3b340",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "f4492470635578ae",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "applications",
                "pt": "msg",
                "to": "payload.data",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1880,
        "y": 3160,
        "wires": [
            [
                "19e4cc04ce3ff2f3",
                "a710fd5c93105bef"
            ]
        ]
    },
    {
        "id": "5ee56af170f12036",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "f4492470635578ae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 3100,
        "wires": []
    },
    {
        "id": "19e4cc04ce3ff2f3",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "f4492470635578ae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 3160,
        "wires": []
    },
    {
        "id": "5569a704502d347e",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "f4492470635578ae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 3280,
        "wires": []
    },
    {
        "id": "5f8c31a0b75604dc",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "f4492470635578ae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 3340,
        "wires": []
    },
    {
        "id": "aeba6128dc0f5605",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "f4492470635578ae",
        "name": "",
        "x": 1580,
        "y": 3100,
        "wires": [
            [
                "beaeeede45688d8f"
            ],
            [
                "1f9e9253f0f4ed09"
            ]
        ]
    },
    {
        "id": "26ef94169b200292",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "f4492470635578ae",
        "name": "",
        "x": 1580,
        "y": 3280,
        "wires": [
            [
                "9bc8ca63c489f130",
                "5569a704502d347e"
            ],
            [
                "1f9e9253f0f4ed09"
            ]
        ]
    },
    {
        "id": "c50f180f6dc5b7a7",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "f4492470635578ae",
        "name": "",
        "x": 1580,
        "y": 3340,
        "wires": [
            [
                "5f8c31a0b75604dc",
                "c87aa0067f73b660"
            ],
            [
                "1f9e9253f0f4ed09"
            ]
        ]
    },
    {
        "id": "1f9e9253f0f4ed09",
        "type": "link out",
        "z": "2c4527dad914ec1c",
        "g": "f4492470635578ae",
        "name": "",
        "mode": "link",
        "links": [
            "0b4394d395558302"
        ],
        "x": 1805,
        "y": 3400,
        "wires": []
    },
    {
        "id": "bcdb50eb60cfc78d",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "f4492470635578ae",
        "name": "",
        "x": 1570,
        "y": 3160,
        "wires": [
            [
                "352697d0f9b3b340"
            ],
            [
                "1f9e9253f0f4ed09"
            ]
        ]
    },
    {
        "id": "c87aa0067f73b660",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "f4492470635578ae",
        "name": "link to indications",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"application_indication__rim\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[\t    applications ~> $map(function($application) {\t       study.therapeutic_indication_clinical_studies__cr.data.{\t           \"therapeutic_indication__rim\": therapeutic_indication__c,\t           \"application__rim\": $application.id\t        }\t    }) ~> $reduce(function($accumulator, $value) {$append($accumulator, $value)})\t]",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 3400,
        "wires": [
            [
                "f7a46ec9815bec9e"
            ]
        ]
    },
    {
        "id": "f7a46ec9815bec9e",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "f4492470635578ae",
        "name": "",
        "x": 1580,
        "y": 3400,
        "wires": [
            [
                "c316263822a4e043",
                "bbd3c599a4d4a203"
            ],
            [
                "1f9e9253f0f4ed09"
            ]
        ]
    },
    {
        "id": "c316263822a4e043",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "f4492470635578ae",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 3400,
        "wires": []
    },
    {
        "id": "f14722cf1050e3b6",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "c3cc3bc6b0b0ab38",
        "name": "query event",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v from event__rim where object_type__vr.api_name__v = 'clinical_study_event__c' and applicable_product_type__v = 'drug__v'and keywords__c = 'clinical_initial_cta__c' and id in (select id from event_clinical_studies__vr where clinical_study__v='\" & study_id & \"')\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 130,
        "y": 1080,
        "wires": [
            [
                "e1677939b436f9e1",
                "c83461d786b5f389"
            ]
        ]
    },
    {
        "id": "e1677939b436f9e1",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "c3cc3bc6b0b0ab38",
        "name": "",
        "x": 410,
        "y": 1080,
        "wires": [
            [
                "ace8a989e5fa795d",
                "bdf854e2d1181a35"
            ],
            [
                "91a1c661f7629edc"
            ]
        ]
    },
    {
        "id": "ace8a989e5fa795d",
        "type": "switch",
        "z": "2c4527dad914ec1c",
        "g": "c3cc3bc6b0b0ab38",
        "name": "exists?",
        "property": "payload.data",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 1080,
        "wires": [
            [
                "3758841ab014d3be"
            ],
            [
                "c6e7a2c0aa81952d"
            ]
        ]
    },
    {
        "id": "c6e7a2c0aa81952d",
        "type": "template",
        "z": "2c4527dad914ec1c",
        "g": "c3cc3bc6b0b0ab38",
        "name": "Input Form",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>New Clinical Study Event</title>\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/css/bootstrap.min.css\"\n        integrity=\"sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu\" crossorigin=\"anonymous\">\n    <script src=\"https://code.jquery.com/jquery-1.12.4.min.js\"\n        integrity=\"sha384-nvAa0+6Qg9clwYCGGPpDQLVpLNn0fRaROjHqs13t4Ggj3Ez50XnGQqc/r8MhnRDZ\"\n        crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/js/bootstrap.min.js\"\n        integrity=\"sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd\"\n        crossorigin=\"anonymous\"></script>\n</head>\n\n<body>\n    <div class=\"modal fade\" id=\"modal\" tabindex=\"-1\" data-backdrop=\"static\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Processing ...</h4>\n                </div>\n                <div class=\"modal-body\">\n                    <p>Please wait while the changes are applied.</p>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"container\">\n        <h1>New Event for Clinical Study {{study.name__v}}</h1>\n        <p>Please provide details for the new Clinical Study Event.</p>\n        <br>\n        <form class=\"form-horizontal\" method=\"post\" action=\"/nodes/cta-event\">\n            <input type=\"hidden\" name=\"study_id\" value=\"{{study_id}}\">\n            <input type=\"hidden\" name=\"job_scope\" value=\"{{job.job_scope}}\">\n            <input type=\"hidden\" name=\"job_type\" value=\"{{job.job_type}}\">\n            <div class=\"form-group\">\n                <label class=\"col-md-4 control-label\" for=\"impd_version_quality_part__c\">IMPD Version Quality Part\n                    Provided</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" class=\"form-control\" id=\"impd_version_quality_part__c\"\n                        name=\"impd_version_quality_part__c\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"col-md-4 control-label\" for=\"impd_version_nonquality_part__c\">IMPD Version non- Quality\n                    Part Provided</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" class=\"form-control\" id=\"impd_version_nonquality_part__c\"\n                        name=\"impd_version_nonquality_part__c\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"col-md-4 control-label\" for=\"protocol_version__c\">Protocol Version Provided</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" class=\"form-control\" id=\"protocol_version__c\" name=\"protocol_version__c\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"col-md-4 control-label\" for=\"ib_version__c\">IB Version Provided</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" class=\"form-control\" id=\"ib_version__c\" name=\"ib_version__c\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"col-md-4 control-label\" for=\"shelf_life\">Shelf Life</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" class=\"form-control\" id=\"shelf_life\" name=\"shelf_life\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"col-md-4 control-label\" for=\"event_description__c\">Event Desciption</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" class=\"form-control\" id=\"event_description__c\" name=\"event_description__c\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"col-md-offset-4 col-md-8\">\n                    <button type=\"submit\" class=\"btn btn-primary\">Create Clinical Study Event</button>\n                </div>\n            </div>\n        </form>\n    </div>\n\n    <script>\n        $(document).ready(function(){\n            $(\"form\").submit(function() {\n                $(\"#modal\").modal(\"show\");\n            });\n        });\n    </script>\n</body>\n\n</html>",
        "output": "str",
        "x": 810,
        "y": 1120,
        "wires": [
            [
                "a21361800a8e5222"
            ]
        ]
    },
    {
        "id": "91a1c661f7629edc",
        "type": "link out",
        "z": "2c4527dad914ec1c",
        "g": "c3cc3bc6b0b0ab38",
        "name": "",
        "mode": "link",
        "links": [
            "0b4394d395558302"
        ],
        "x": 535,
        "y": 1120,
        "wires": []
    },
    {
        "id": "0b4394d395558302",
        "type": "link in",
        "z": "2c4527dad914ec1c",
        "g": "4baa5eae6bccba26",
        "name": "Error",
        "links": [
            "2e21230765d562c0",
            "db9944eb60fbc49d",
            "c6b53c4a2748f542",
            "9256c6065eae30bf",
            "a5c49e2191c98551",
            "1f9e9253f0f4ed09",
            "ed40e4afb8f69bb1",
            "d1295ce2fe20155c",
            "3916d23c39b50211",
            "1b109bb176828d44",
            "275cac78bf29b682",
            "6a8e4f7d0f114240",
            "0b31058c8431fa69",
            "b751e69c46e6c849",
            "91a1c661f7629edc",
            "3e3e53986fc68011",
            "b5b267266e9c190a",
            "19f4967b796f2e9f",
            "e14e7058d20493e2",
            "1e2e089e5f67454c",
            "fc751c16e3989a80",
            "b7de0fe7ad66d2ca",
            "e47b4d5d5c74d6f1",
            "6dab2b9614b7b3f7",
            "af93e42bb2063079",
            "8b5fc85d413405da",
            "42424a203fc5231c",
            "ec46849d03dc97ee",
            "0acb4f725a0b3b4d",
            "e2bbf68093902dd8",
            "4cddeead6c64cd6b"
        ],
        "x": 4445,
        "y": 420,
        "wires": [
            [
                "4b18021ceb965cb3",
                "c5912362c452ad8c"
            ]
        ]
    },
    {
        "id": "4b18021ceb965cb3",
        "type": "template",
        "z": "2c4527dad914ec1c",
        "g": "4baa5eae6bccba26",
        "name": "error",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>Error</title>\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/css/bootstrap.min.css\"\n        integrity=\"sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu\" crossorigin=\"anonymous\">\n    <script src=\"https://code.jquery.com/jquery-1.12.4.min.js\"\n        integrity=\"sha384-nvAa0+6Qg9clwYCGGPpDQLVpLNn0fRaROjHqs13t4Ggj3Ez50XnGQqc/r8MhnRDZ\"\n        crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/js/bootstrap.min.js\"\n        integrity=\"sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd\"\n        crossorigin=\"anonymous\"></script>\n</head>\n\n<body>\n    <div class=\"container\">\n        <h2>The operation failed</h2>\n        <p>{{description}}</p>\n\n        <div class=\"table-responsive\">\n            <table id=\"selectiontable\" class=\"table table-striped table-hover\">\n                <thead>\n                    <th>Error Type</th>\n                    <th>Message</th>\n                </thead>\n                <tbody>\n                    {{#payload.errors}}\n                        <tr>\n                            <td>{{type}}</td>\n                            <td>{{message}}</td>\n                        </tr>\n                    {{/payload.errors}}\n                    {{#payload.data.errors}}\n                        <tr>\n                            <td>{{type}}</td>\n                            <td>{{message}}</td>\n                        </tr>\n                    {{/payload.data.errors}}\n                </tbody>\n            </table>\n        </div>\n    </div>\n</body>\n\n</html>",
        "output": "str",
        "x": 4570,
        "y": 420,
        "wires": [
            [
                "6be1c8357935ded8"
            ]
        ]
    },
    {
        "id": "6be1c8357935ded8",
        "type": "http response",
        "z": "2c4527dad914ec1c",
        "g": "4baa5eae6bccba26",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 4730,
        "y": 420,
        "wires": []
    },
    {
        "id": "c5912362c452ad8c",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "4baa5eae6bccba26",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4570,
        "y": 460,
        "wires": []
    },
    {
        "id": "38c9c876683df642",
        "type": "http response",
        "z": "2c4527dad914ec1c",
        "g": "8fe7fba9478ad6c8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 4730,
        "y": 580,
        "wires": []
    },
    {
        "id": "6e98ee16de826386",
        "type": "link in",
        "z": "2c4527dad914ec1c",
        "g": "8fe7fba9478ad6c8",
        "name": "success",
        "links": [
            "def796fcf8b7ba68",
            "6610faf99d69fa98",
            "c65594f62b66ba6c"
        ],
        "x": 4445,
        "y": 580,
        "wires": [
            [
                "25164fe0afec3d7a"
            ]
        ]
    },
    {
        "id": "25164fe0afec3d7a",
        "type": "brave-input-form",
        "z": "2c4527dad914ec1c",
        "g": "8fe7fba9478ad6c8",
        "name": "",
        "x": 4570,
        "y": 580,
        "wires": [
            [
                "38c9c876683df642"
            ]
        ]
    },
    {
        "id": "877d493c814eb116",
        "type": "template",
        "z": "2c4527dad914ec1c",
        "g": "fa41432bb855af38",
        "name": "Input Form",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>Defining scope</title>\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/css/bootstrap.min.css\"\n        integrity=\"sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu\" crossorigin=\"anonymous\">\n    <script src=\"https://code.jquery.com/jquery-1.12.4.min.js\"\n        integrity=\"sha384-nvAa0+6Qg9clwYCGGPpDQLVpLNn0fRaROjHqs13t4Ggj3Ez50XnGQqc/r8MhnRDZ\"\n        crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/js/bootstrap.min.js\"\n        integrity=\"sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd\"\n        crossorigin=\"anonymous\"></script>\n</head>\n\n<body>\n    <div class=\"modal fade\" id=\"modal\" tabindex=\"-1\" data-backdrop=\"static\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Processing ...</h4>\n                </div>\n                <div class=\"modal-body\">\n                    <p>Please wait while the changes are applied.</p>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"container\">\n        <h1>Please specify if you need to create EU CTR Application for the study {{study.name__v}}</h1>\n        <p> </p>\n        <br>\n        <form class=\"form-horizontal\" method=\"post\" action=\"/nodes/cta/cms\">\n            <input type=\"hidden\" name=\"study_id\" value=\"{{study_id}}\">\n            <input type=\"hidden\" name=\"job_type\" value=\"{{job.job_type}}\">\n            <input type=\"hidden\" name=\"job_scope\" value=\"{{job.job_scope}}\">\n            <input type=\"hidden\" name=\"created_event_id\" value=\"{{created_event_id}}\">\n            <div class=\"form-group\">\n                <div class=\"col-md-offset-4 col-md-8\">\n                    <button type=\"submit\" class=\"btn btn-primary\">Yes</button>\n                </div>\n            </div>\n        </form>\n        <form class=\"form-horizontal\" method=\"post\" action=\"/nodes/cta/ctd\">\n            <input type=\"hidden\" name=\"study_id\" value=\"{{study_id}}\">\n            <input type=\"hidden\" name=\"job_type\" value=\"{{job.job_type}}\">\n            <input type=\"hidden\" name=\"job_scope\" value=\"{{job.job_scope}}\">\n            <input type=\"hidden\" name=\"created_event_id\" value=\"{{created_event_id}}\">\n            <div class=\"form-group\">\n                <div class=\"col-md-offset-4 col-md-8\">\n                    <button type=\"submit\" class=\"btn btn-primary\">No</button>\n                </div>\n            </div>\n        </form>\n    </div>\n\n    <script>\n        $(document).ready(function(){\n            $(\"form\").submit(function() {\n                $(\"#modal\").modal(\"show\");\n            });\n        });\n    </script>\n</body>\n\n</html>",
        "output": "str",
        "x": 1810,
        "y": 1060,
        "wires": [
            [
                "eaa9fadb6a229543"
            ]
        ]
    },
    {
        "id": "eaa9fadb6a229543",
        "type": "http response",
        "z": "2c4527dad914ec1c",
        "g": "fa41432bb855af38",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2070,
        "y": 1060,
        "wires": []
    },
    {
        "id": "2bd0ad048ce6d34e",
        "type": "http in",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "",
        "url": "cta/app_country",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 1380,
        "y": 2540,
        "wires": [
            [
                "dbd00f23f54f267e"
            ]
        ]
    },
    {
        "id": "529382b422e33baf",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "query study",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v, study_alias__c, product__v, product__vr.name__v, (select id, name__v, product__c, product__cr.name__v, product_family__c, product_family__cr.name__v, product_variant__c, product_variant__cr.name__v from clinical_study_products__cr), (select id, name__v, therapeutic_indication__c, therapeutic_indication__cr.name__v from therapeutic_indication_clinical_studies__cr) from clinical_study__v where id='\" & study_id & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2170,
        "y": 2840,
        "wires": [
            [
                "71a35f478418d5d7"
            ]
        ]
    },
    {
        "id": "80659552c324848c",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "study",
                "pt": "msg",
                "to": "payload.data[0]",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2620,
        "y": 2840,
        "wires": [
            [
                "5d3396e25a8c72c4",
                "1710ed53d4d37b5c"
            ]
        ]
    },
    {
        "id": "865bb03421f66f06",
        "type": "split",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "for each country",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2400,
        "y": 2720,
        "wires": [
            [
                "1179a3687c6cf5a6"
            ]
        ]
    },
    {
        "id": "5e50d16ff43a82fd",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "store parameters",
        "rules": [
            {
                "t": "set",
                "p": "study_id",
                "pt": "msg",
                "to": "payload.study_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "countries",
                "pt": "msg",
                "to": "payload.response_full[]",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "cms_countries_string",
                "pt": "msg",
                "to": "payload.cms_countries",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "lead_country_string",
                "pt": "msg",
                "to": "payload.lead_country",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "cta-automation",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "job.job_scope",
                "pt": "msg",
                "to": "payload.job_scope",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "job.job_type",
                "pt": "msg",
                "to": "payload.job_type",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "created_event_id",
                "pt": "msg",
                "to": "payload.created_event_id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1930,
        "y": 2540,
        "wires": [
            [
                "65e5881ebae4daa7"
            ]
        ]
    },
    {
        "id": "1179a3687c6cf5a6",
        "type": "json",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "json to object",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 2170,
        "y": 2780,
        "wires": [
            [
                "886859ca7a54f7fd"
            ]
        ]
    },
    {
        "id": "886859ca7a54f7fd",
        "type": "join",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2330,
        "y": 2780,
        "wires": [
            [
                "d6bda7745030b8a0"
            ]
        ]
    },
    {
        "id": "265347a384987222",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2850,
        "y": 2780,
        "wires": []
    },
    {
        "id": "b44bfa5ffe29b60e",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "parse countries",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "countries",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2180,
        "y": 2720,
        "wires": [
            [
                "865bb03421f66f06"
            ]
        ]
    },
    {
        "id": "5d3396e25a8c72c4",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2850,
        "y": 2840,
        "wires": []
    },
    {
        "id": "d6bda7745030b8a0",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "countries",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2490,
        "y": 2780,
        "wires": [
            [
                "265347a384987222",
                "529382b422e33baf"
            ]
        ]
    },
    {
        "id": "65e5881ebae4daa7",
        "type": "brave-login",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "",
        "x": 2150,
        "y": 2540,
        "wires": [
            [
                "96ab22406c6dcd7e",
                "c89d44f157d80bc4"
            ],
            [
                "b7de0fe7ad66d2ca"
            ]
        ]
    },
    {
        "id": "a5c49e2191c98551",
        "type": "link out",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "",
        "mode": "link",
        "links": [
            "0b4394d395558302"
        ],
        "x": 2565,
        "y": 2980,
        "wires": []
    },
    {
        "id": "71a35f478418d5d7",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "",
        "x": 2390,
        "y": 2840,
        "wires": [
            [
                "80659552c324848c"
            ],
            [
                "a5c49e2191c98551"
            ]
        ]
    },
    {
        "id": "1710ed53d4d37b5c",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "query event",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v, event_description__c, (select id, impd_version_nonquality_part__c, impd_version_quality_part__c, protocol_version__c, ib_version__c from event_clinical_studies__vr) from event__rim where object_type__vr.api_name__v = 'clinical_study_event__c' and applicable_product_type__v = 'drug__v'and keywords__c = 'clinical_initial_cta__c' and id in (select id from event_clinical_studies__vr where clinical_study__v='\" & study_id & \"')\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2170,
        "y": 2900,
        "wires": [
            [
                "ebb4d9b0095025e2"
            ]
        ]
    },
    {
        "id": "ebb4d9b0095025e2",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "",
        "x": 2390,
        "y": 2900,
        "wires": [
            [
                "5b81fc0c9cee31d0"
            ],
            [
                "a5c49e2191c98551"
            ]
        ]
    },
    {
        "id": "5b81fc0c9cee31d0",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "event",
                "pt": "msg",
                "to": "payload.data[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2620,
        "y": 2900,
        "wires": [
            [
                "98a09d8faa795864",
                "c526a83f886ee66c"
            ]
        ]
    },
    {
        "id": "98a09d8faa795864",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2850,
        "y": 2900,
        "wires": []
    },
    {
        "id": "551b9623d7990835",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "parse Lead country",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "lead_country_string",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 2600,
        "wires": [
            [
                "0c293fa5ea1d40ae"
            ]
        ]
    },
    {
        "id": "d63ba5dad0268d14",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "lead_country",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 2600,
        "wires": [
            [
                "6882d811cc48713f",
                "3ca6345f6ae806b8"
            ]
        ]
    },
    {
        "id": "0c293fa5ea1d40ae",
        "type": "split",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "for each country",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1700,
        "y": 2600,
        "wires": [
            [
                "36831944ea231a2c"
            ]
        ]
    },
    {
        "id": "3ca6345f6ae806b8",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "parse CMS countries",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cms_countries_string",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1500,
        "y": 2660,
        "wires": [
            [
                "d57e93c3e4dd9068"
            ]
        ]
    },
    {
        "id": "d57e93c3e4dd9068",
        "type": "json",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "json to object",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1690,
        "y": 2660,
        "wires": [
            [
                "4931687c32f891d3"
            ]
        ]
    },
    {
        "id": "36831944ea231a2c",
        "type": "json",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "json to object",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1910,
        "y": 2600,
        "wires": [
            [
                "d63ba5dad0268d14"
            ]
        ]
    },
    {
        "id": "4931687c32f891d3",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "cms_countries",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 2660,
        "wires": [
            [
                "26ea46e253a36a17",
                "40898951895346d8"
            ]
        ]
    },
    {
        "id": "26ea46e253a36a17",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2410,
        "y": 2660,
        "wires": []
    },
    {
        "id": "6882d811cc48713f",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2410,
        "y": 2600,
        "wires": []
    },
    {
        "id": "40898951895346d8",
        "type": "switch",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "Check if non_CTR countries are selected",
        "property": "payload.countries",
        "propertyType": "msg",
        "rules": [
            {
                "t": "jsonata_exp",
                "v": "$exists(countries)",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1880,
        "y": 2720,
        "wires": [
            [
                "b44bfa5ffe29b60e"
            ],
            [
                "c47ac8ab0a1808e1"
            ]
        ]
    },
    {
        "id": "c47ac8ab0a1808e1",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "countries",
                "pt": "msg",
                "to": "[]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 2780,
        "wires": [
            [
                "5c2196dbbf15ce94",
                "529382b422e33baf"
            ]
        ]
    },
    {
        "id": "5c2196dbbf15ce94",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "debug 351",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1710,
        "y": 2880,
        "wires": []
    },
    {
        "id": "dbd00f23f54f267e",
        "type": "json",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "resp_full",
        "property": "payload.response_full",
        "action": "obj",
        "pretty": false,
        "x": 1680,
        "y": 2540,
        "wires": [
            [
                "5e50d16ff43a82fd"
            ]
        ]
    },
    {
        "id": "e9ca3eba68b20dea",
        "type": "http response",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2050,
        "y": 2440,
        "wires": []
    },
    {
        "id": "f3946df6e7b32134",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "set msg.application_types",
        "rules": [
            {
                "t": "set",
                "p": "application_types",
                "pt": "msg",
                "to": "$distinct(payload.data).{\t   \"country_id\": country__rim,\t   \"country_name\": `country__rimr.name__v`,\t   \"country_code\": `country__rimr.country_code__rim`,\t   \"region_id\": region__rim,\t   \"region_name\": `region__rimr.name__v`,\t   \"application_type_id\": cv_1__rim,\t   \"application_type\": `cv_1__rimr.name__v`\t} ~> $filter(function($v) {\t    $v.region_name = \"European Union\" and $v.application_type != \"CTA Regulation\" and $v.application_type != \"Paediatric Investigation Plan (PIP)\" and $v.application_type != \"Orphan Drug Designation Application\"or\t    $v.country_name = \"United States\" and $v.application_type = \"Investigational New Drug (IND)\" or\t    $v.region_name != \"European Union\" and $v.country_name != \"United States\" and $v.application_type != \"Paediatric Investigation Plan (PIP)\"\t})",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "full_application_types",
                "pt": "msg",
                "to": "application_types[country_id=null]\t/* Replace null countries with a list of all countries in that region */\t~> $map(function($t) {$.countries[region_id=$t.region_id] ~> $map(function($c) {$merge([$t,$c])})})\t/* Reduce list of lists to single list */\t~> $reduce(function($i, $v) { $append($i, $v) })\t/* Join with non-null countries */\t~> $append(application_types[country_id!=null])\t/* Filter out already existing applications */\t/* by using the Countries in Lead Country*/\t~> $filter(function($v) {$count(applications[lead_market__rim=$v.country_id and application_type__rim=$v.application_type_id])=0})\t/* by using the Countries in Application Country join*/\t~> $filter(function($v) {$count(application_countries[country__rim=$v.country_id and `application__rimr.application_type__rim`=$v.application_type_id])=0})\t/* Filter out Common (EU) and Common (GCC) */\t~> $filter(function($v) {$v.country_name != \"Common (EU)\" and $v.country_name != \"Common (GCC)\"})\t/* Sort by name */\t~> $sort(function($l, $r) {$l.country_name > $r.country_name})\t/* Remove duplicates */\t~> $distinct()",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2110,
        "y": 2360,
        "wires": [
            [
                "078c240515b5297c",
                "b43c0eed548cafd3"
            ]
        ]
    },
    {
        "id": "1d2c66618b3e6c4f",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2590,
        "y": 2420,
        "wires": []
    },
    {
        "id": "1149f834be044e54",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "countries",
                "pt": "msg",
                "to": "payload.data.{\t   \"country_id\": id,\t   \"country_name\": name__v,\t   \"country_code\": country_code__rim,\t   \"region_id\": region__v,\t   \"region_name\": `region__vr.name__v`\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2090,
        "y": 2180,
        "wires": [
            [
                "4ad7909a97e437a7",
                "bd46d5f7dd3c56b5"
            ]
        ]
    },
    {
        "id": "4ad7909a97e437a7",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2590,
        "y": 2160,
        "wires": []
    },
    {
        "id": "078c240515b5297c",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2590,
        "y": 2360,
        "wires": []
    },
    {
        "id": "9026e264d0fa9d16",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "",
        "x": 1870,
        "y": 2180,
        "wires": [
            [
                "1149f834be044e54"
            ],
            [
                "b7de0fe7ad66d2ca"
            ]
        ]
    },
    {
        "id": "5b674da7b3b3c493",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "",
        "x": 1870,
        "y": 2360,
        "wires": [
            [
                "f3946df6e7b32134"
            ],
            [
                "b7de0fe7ad66d2ca"
            ]
        ]
    },
    {
        "id": "e06fc599ded4e970",
        "type": "brave-input-form",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "",
        "x": 1870,
        "y": 2420,
        "wires": [
            [
                "e9ca3eba68b20dea",
                "1d2c66618b3e6c4f"
            ]
        ]
    },
    {
        "id": "99b5a29dc4898dc1",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "",
        "x": 1870,
        "y": 2300,
        "wires": [
            [
                "f54f30035d27303f"
            ],
            [
                "b7de0fe7ad66d2ca"
            ]
        ]
    },
    {
        "id": "f54f30035d27303f",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "applications",
                "pt": "msg",
                "to": "payload.data",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2100,
        "y": 2300,
        "wires": [
            [
                "4cbcdab4ed0ad26d",
                "ea0561a17a3e4733"
            ]
        ]
    },
    {
        "id": "ea0561a17a3e4733",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2590,
        "y": 2300,
        "wires": []
    },
    {
        "id": "7147d272c95b9b91",
        "type": "brave-login",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "",
        "x": 2350,
        "y": 1960,
        "wires": [
            [
                "a29e783cc968e8c6",
                "93250f2631c4e047"
            ],
            [
                "1e2e089e5f67454c"
            ]
        ]
    },
    {
        "id": "232035efdfcc0ede",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "store parameters",
        "rules": [
            {
                "t": "set",
                "p": "study_id",
                "pt": "msg",
                "to": "payload.study_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "event_id",
                "pt": "msg",
                "to": "payload.event_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "cms_countries_string",
                "pt": "msg",
                "to": "payload.response_full[]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "lead_country_string",
                "pt": "msg",
                "to": "payload.lead_country",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "cta-automation",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "job.job_type",
                "pt": "msg",
                "to": "payload.job_type",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "job.job_scope",
                "pt": "msg",
                "to": "payload.job_scope",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "created_event_id",
                "pt": "msg",
                "to": "payload.created_event_id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2090,
        "y": 1960,
        "wires": [
            [
                "7147d272c95b9b91"
            ]
        ]
    },
    {
        "id": "6384e2cf76fa1a73",
        "type": "split",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "for each country",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1880,
        "y": 2020,
        "wires": [
            [
                "2a5dbf3a114a6c7f"
            ]
        ]
    },
    {
        "id": "2a5dbf3a114a6c7f",
        "type": "json",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "json to object",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 2070,
        "y": 2020,
        "wires": [
            [
                "5c5f8c6d3d14579b"
            ]
        ]
    },
    {
        "id": "5c5f8c6d3d14579b",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "lead_country",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2400,
        "y": 2020,
        "wires": [
            [
                "1ce0090dbddae5e8",
                "604f50bb6db90c11"
            ]
        ]
    },
    {
        "id": "1ce0090dbddae5e8",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2590,
        "y": 2020,
        "wires": []
    },
    {
        "id": "b1fa9325cae27f86",
        "type": "split",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "for each country",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1880,
        "y": 2080,
        "wires": [
            [
                "ea17aeeb8c17f5aa"
            ]
        ]
    },
    {
        "id": "ea17aeeb8c17f5aa",
        "type": "json",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "json to object",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 2070,
        "y": 2080,
        "wires": [
            [
                "30d0e763665a0f4f"
            ]
        ]
    },
    {
        "id": "30d0e763665a0f4f",
        "type": "join",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2230,
        "y": 2080,
        "wires": [
            [
                "8f4a274d1b5bd632"
            ]
        ]
    },
    {
        "id": "8f4a274d1b5bd632",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "cms_countries",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2400,
        "y": 2080,
        "wires": [
            [
                "52fb1526b6af11ee",
                "4379a5a24c6d2e1a"
            ]
        ]
    },
    {
        "id": "4379a5a24c6d2e1a",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2590,
        "y": 2080,
        "wires": []
    },
    {
        "id": "c935b2229ba86e1a",
        "type": "http in",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "",
        "url": "cta/ctd",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 1350,
        "y": 1960,
        "wires": [
            [
                "959da61bde9bb8b0"
            ]
        ]
    },
    {
        "id": "a29e783cc968e8c6",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "parse Lead country",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "lead_country_string",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1610,
        "y": 2020,
        "wires": [
            [
                "6384e2cf76fa1a73"
            ]
        ]
    },
    {
        "id": "604f50bb6db90c11",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "parse CMS countries",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cms_countries_string",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 2080,
        "wires": [
            [
                "b1fa9325cae27f86"
            ]
        ]
    },
    {
        "id": "52fb1526b6af11ee",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "query countries",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v, country_code__rim, region__v, region__vr.name__v from country__v where status__v = 'active__v' and id !='\" & $.lead_country[0].country_id & \"' AND \" & (cms_countries.country_id ~> $map(function($v) {\"id!='\" & $v & \"'\"}) ~> $join(\" AND \"))",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1600,
        "y": 2140,
        "wires": [
            [
                "9026e264d0fa9d16"
            ]
        ]
    },
    {
        "id": "bdf4c22bb3725613",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "query existing applications",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v,lead_market__rim, application_type__rim from application__v where clinical_study__c = '\" & study_id & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 2300,
        "wires": [
            [
                "99b5a29dc4898dc1"
            ]
        ]
    },
    {
        "id": "4cbcdab4ed0ad26d",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "query application types",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SELECT country__rim, country__rimr.name__v, country__rimr.country_code__rim, region__rim, region__rimr.name__v, cv_1__rim, cv_1__rimr.name__v FROM constraint__rim WHERE applicable_product_type__v = 'drug__v' AND constraint_scope__v = 'investigational__c' AND status__v = 'active__v' AND cv_1__rimr.controlled_vocabulary_type__rim = 'application_type__rim' AND cv_1__rimr.status__v = 'active__v'",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 2360,
        "wires": [
            [
                "5b674da7b3b3c493"
            ]
        ]
    },
    {
        "id": "b43c0eed548cafd3",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "set fields for input form",
        "rules": [
            {
                "t": "set",
                "p": "title",
                "pt": "msg",
                "to": "Please select the target countries for new CTAs",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "type",
                "pt": "msg",
                "to": "checkbox",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "description",
                "pt": "msg",
                "to": "\"For Study \" & flow.study.name__v & \" \" & study.study_alias__c & \". Leave empty if not applicable.\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "tableheader",
                "pt": "msg",
                "to": "{\"columns\":[\"Country\",\"Region\",\"Application Type\"]}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "dataarray",
                "pt": "msg",
                "to": "full_application_types.{\t   \"selection\": $string(),\t   \"columns\": [\t       country_name,\t       region_name,\t       application_type\t   ]\t}",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "flow",
                "pt": "msg",
                "to": "nodes/cta/app_country",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hiddenfields",
                "pt": "msg",
                "to": "[\t   {\t       \"name\": \"study_id\",\t       \"value\": study_id\t    },\t    {\t        \"name\": \"lead_country\",\t        \"value\": $string(lead_country)\t    },\t    {\t        \"name\": \"cms_countries\",\t        \"value\": $string(cms_countries)\t    },\t    {\t        \"name\": \"event_id\",\t        \"value\": event_id\t    },\t    {\t        \"name\": \"created_event_id\",\t        \"value\": created_event_id\t    },\t    {\t        \"name\": \"job_type\",\t        \"value\": job.job_type\t    },\t    {\t        \"name\": \"job_scope\",\t        \"value\": job.job_scope\t    }\t\t]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 2420,
        "wires": [
            [
                "e06fc599ded4e970"
            ]
        ]
    },
    {
        "id": "6a6c7efc7e51bf6d",
        "type": "json",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "resp_full",
        "property": "payload.response_full",
        "action": "obj",
        "pretty": false,
        "x": 1860,
        "y": 1960,
        "wires": [
            [
                "232035efdfcc0ede"
            ]
        ]
    },
    {
        "id": "b7de0fe7ad66d2ca",
        "type": "link out",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "0b4394d395558302"
        ],
        "x": 2265,
        "y": 2440,
        "wires": []
    },
    {
        "id": "86268d6a0b837218",
        "type": "http response",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2110,
        "y": 1800,
        "wires": []
    },
    {
        "id": "97b53a3a8dd09761",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "set fields for input form",
        "rules": [
            {
                "t": "set",
                "p": "title",
                "pt": "msg",
                "to": "Please select all the participating countries of the CTR process",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "type",
                "pt": "msg",
                "to": "checkbox",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "description",
                "pt": "msg",
                "to": "\"Lead Country is set as European Union for new CTR for Study \" & study.name__v & \" \" & study.study_alias__c",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "tableheader",
                "pt": "msg",
                "to": "{\"columns\":[\"Country\",\"Region\",\"Application Type\"]}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "dataarray",
                "pt": "msg",
                "to": "full_application_types.{\t   \"selection\": $string(),\t   \"columns\": [\t       country_name,\t       region_name,\t       application_type\t   ]\t}",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "flow",
                "pt": "msg",
                "to": "nodes/cta/ctd",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hiddenfields",
                "pt": "msg",
                "to": "[\t   {\t       \"name\": \"study_id\",\t       \"value\": study_id\t    },\t    {\t       \"name\": \"lead_country\",\t       \"value\": $string(lead_country)\t    },\t    {\t        \"name\": \"event_id\",\t        \"value\": event_id\t    },\t    {\t        \"name\": \"created_event_id\",\t        \"value\": created_event_id\t    },\t    {\t        \"name\": \"job_type\",\t        \"value\": job.job_type\t    },\t    {\t        \"name\": \"job_scope\",\t        \"value\": job.job_scope\t    }\t\t]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 1760,
        "wires": [
            [
                "09ab16f41f604cb4"
            ]
        ]
    },
    {
        "id": "4cac1cf727b0ef9f",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 1760,
        "wires": []
    },
    {
        "id": "3db241b53e5fc1f6",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "query application types",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SELECT country__rim, country__rimr.name__v, country__rimr.country_code__rim, region__rim, region__rimr.name__v, cv_1__rim, cv_1__rimr.name__v FROM constraint__rim WHERE applicable_product_type__v = 'drug__v' AND constraint_scope__v = 'investigational__c' AND status__v = 'active__v' AND cv_1__rimr.controlled_vocabulary_type__rim = 'application_type__rim' AND cv_1__rimr.status__v = 'active__v' AND region__rimr.name__v='European Union'",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 1700,
        "wires": [
            [
                "309297c842b780cc"
            ]
        ]
    },
    {
        "id": "f366310a370cb263",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "query countries",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v, country_code__rim, region__v, region__vr.name__v from country__v where status__v = 'active__v' and region__vr.name__v='European Union' and id !='\" & $$.lead_country[0].country_id & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 1520,
        "wires": [
            [
                "cc8836b7ba4047c6"
            ]
        ]
    },
    {
        "id": "2b6a8988be4f6aa1",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "countries",
                "pt": "msg",
                "to": "payload.data.{\t   \"country_id\": id,\t   \"country_name\": name__v,\t   \"country_code\": country_code__rim,\t   \"region_id\": region__v,\t   \"region_name\": `region__vr.name__v`\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1850,
        "y": 1520,
        "wires": [
            [
                "59a605b44b4e458f",
                "eabb62e6f580519c"
            ]
        ]
    },
    {
        "id": "59a605b44b4e458f",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 1520,
        "wires": []
    },
    {
        "id": "8f7f5b7af1e523e8",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 1700,
        "wires": []
    },
    {
        "id": "cc8836b7ba4047c6",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "",
        "x": 1630,
        "y": 1520,
        "wires": [
            [
                "2b6a8988be4f6aa1"
            ],
            [
                "1e2e089e5f67454c"
            ]
        ]
    },
    {
        "id": "309297c842b780cc",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "",
        "x": 1630,
        "y": 1700,
        "wires": [
            [
                "45d06b2c211d3315"
            ],
            [
                "1e2e089e5f67454c"
            ]
        ]
    },
    {
        "id": "09ab16f41f604cb4",
        "type": "brave-input-form",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "",
        "x": 1630,
        "y": 1760,
        "wires": [
            [
                "86268d6a0b837218",
                "4cac1cf727b0ef9f"
            ]
        ]
    },
    {
        "id": "eabb62e6f580519c",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "query existing applications",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v,lead_market__rim, application_type__rim from application__v where clinical_study__c = '\" & study_id & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 1580,
        "wires": [
            [
                "077d32a3b26a735d"
            ]
        ]
    },
    {
        "id": "077d32a3b26a735d",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "",
        "x": 1630,
        "y": 1580,
        "wires": [
            [
                "a0f6e8171e172d4a"
            ],
            [
                "1e2e089e5f67454c"
            ]
        ]
    },
    {
        "id": "a0f6e8171e172d4a",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "applications",
                "pt": "msg",
                "to": "payload.data",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1860,
        "y": 1580,
        "wires": [
            [
                "f0987bd0f1eba5cc",
                "1f5889e43a4b930a"
            ]
        ]
    },
    {
        "id": "f0987bd0f1eba5cc",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 1580,
        "wires": []
    },
    {
        "id": "1c94bab016a6778b",
        "type": "http in",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "",
        "url": "cta/cms",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 1360,
        "y": 1340,
        "wires": [
            [
                "6d5e72093e4f1763"
            ]
        ]
    },
    {
        "id": "3d50cf1b7e19fa64",
        "type": "brave-login",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "",
        "x": 1810,
        "y": 1340,
        "wires": [
            [
                "fc53ea68445af2da"
            ],
            [
                "1e2e089e5f67454c"
            ]
        ]
    },
    {
        "id": "6d5e72093e4f1763",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "store parameters",
        "rules": [
            {
                "t": "set",
                "p": "study_id",
                "pt": "msg",
                "to": "payload.study_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "lead_country_string",
                "pt": "msg",
                "to": "[{\"country_id\":\"00C000000000783\",\"country_name\":\"European Union\",\"country_code\":\"EU\",\"region_id\":\"00R000000000102\",\"region_name\":\"European Union\",\"application_type_id\":\"A0V000000004004\",\"application_type\":\"CTA Regulation\"}]",
                "tot": "str",
                "dc": true
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "cta-automation",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "event_id",
                "pt": "msg",
                "to": "payload.id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "job.job_scope",
                "pt": "msg",
                "to": "payload.job_scope",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "job.job_type",
                "pt": "msg",
                "to": "payload.job_type",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "created_event_id",
                "pt": "msg",
                "to": "payload.created_event_id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1650,
        "y": 1340,
        "wires": [
            [
                "3d50cf1b7e19fa64"
            ]
        ]
    },
    {
        "id": "62db2312adce6927",
        "type": "json",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "json to object",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1630,
        "y": 1400,
        "wires": [
            [
                "2b6443fc1090bbdb"
            ]
        ]
    },
    {
        "id": "2b6443fc1090bbdb",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "lead_country",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1860,
        "y": 1400,
        "wires": [
            [
                "380f6e75443f7e3e",
                "a53bccc1a94c03cb"
            ]
        ]
    },
    {
        "id": "2a898795a346bdae",
        "type": "split",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "for each country",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1340,
        "y": 1400,
        "wires": [
            [
                "62db2312adce6927"
            ]
        ]
    },
    {
        "id": "fc53ea68445af2da",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "parse countries",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "lead_country_string",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2080,
        "y": 1340,
        "wires": [
            [
                "2a898795a346bdae"
            ]
        ]
    },
    {
        "id": "380f6e75443f7e3e",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 1400,
        "wires": []
    },
    {
        "id": "1f5889e43a4b930a",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "query existing Application Countries",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, country__rim, country__rimr.name__v, application__rim, application__rimr.name__v, application__rimr.application_type__rim from application_country__rim where application__rimr.clinical_study__c ='\" & study_id & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1400,
        "y": 1640,
        "wires": [
            [
                "a6055687aa65ad2f"
            ]
        ]
    },
    {
        "id": "a6055687aa65ad2f",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "",
        "x": 1630,
        "y": 1640,
        "wires": [
            [
                "a4abf52b8768caf0"
            ],
            [
                "1e2e089e5f67454c"
            ]
        ]
    },
    {
        "id": "a4abf52b8768caf0",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "application_countries",
                "pt": "msg",
                "to": "payload.data",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1890,
        "y": 1640,
        "wires": [
            [
                "5945973ffe5f9e1c",
                "3db241b53e5fc1f6"
            ]
        ]
    },
    {
        "id": "5945973ffe5f9e1c",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 1640,
        "wires": []
    },
    {
        "id": "1e2e089e5f67454c",
        "type": "link out",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "0b4394d395558302"
        ],
        "x": 1785,
        "y": 1820,
        "wires": []
    },
    {
        "id": "0571712f078a2137",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "3b0d3c603c0d1fd6",
        "name": "create application countries",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"application_country__rim\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "join_countries",
                "pt": "msg",
                "to": "$append(cms_countries,countries)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cms_countries@$i.ha@$h[$i.country_id=$h.country__rim].{\t   \"country__rim\": $i.country_id,\t   \"health_authority__c\": $h.health_authority__v,\t   \"application__rim\": applications[0].id,\t   \"object_type__vr.name__v\": \"Investigational Application Country\"\t}[]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1800,
        "y": 3560,
        "wires": [
            [
                "eb1b125d55482241"
            ]
        ]
    },
    {
        "id": "eb1b125d55482241",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "3b0d3c603c0d1fd6",
        "name": "",
        "x": 2100,
        "y": 3560,
        "wires": [
            [
                "22075ff5491384ec",
                "80c81f840d3d8bf8"
            ],
            [
                "e47b4d5d5c74d6f1"
            ]
        ]
    },
    {
        "id": "22075ff5491384ec",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "3b0d3c603c0d1fd6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2410,
        "y": 3560,
        "wires": []
    },
    {
        "id": "bbd3c599a4d4a203",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "3b0d3c603c0d1fd6",
        "name": "query HA",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "select id, country__rim, country__rimr.name__v, object_type__v, object_type__vr.name__v, health_authority__v, health_authority__vr.name__v from constraint__rim where object_type__vr.name__v='Health Authority'",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 3500,
        "wires": [
            [
                "b9d002f72c39627d"
            ]
        ]
    },
    {
        "id": "b9d002f72c39627d",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "3b0d3c603c0d1fd6",
        "name": "",
        "x": 1570,
        "y": 3500,
        "wires": [
            [
                "646ee80e0e3c6a5f"
            ],
            [
                "e47b4d5d5c74d6f1"
            ]
        ]
    },
    {
        "id": "fc7d31296cf7b12f",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "3b0d3c603c0d1fd6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ha",
                "pt": "msg",
                "to": "payload.data",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 3560,
        "wires": [
            [
                "8dd59e74376d6937"
            ]
        ]
    },
    {
        "id": "d43907b12f64f459",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "3b0d3c603c0d1fd6",
        "name": "",
        "x": 2100,
        "y": 3620,
        "wires": [
            [
                "00c17791fffdd382",
                "9a87a1f173d5e53f"
            ],
            [
                "e47b4d5d5c74d6f1"
            ]
        ]
    },
    {
        "id": "00c17791fffdd382",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "3b0d3c603c0d1fd6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2410,
        "y": 3620,
        "wires": []
    },
    {
        "id": "90e528859987db49",
        "type": "function",
        "z": "2c4527dad914ec1c",
        "g": "3b0d3c603c0d1fd6",
        "name": "Remove duplicate by country",
        "func": "var prev = null;\n\nmsg.payload.data = msg.payload.data.filter((item) => {\n    var keep = (item.country__rim !== prev);\n    prev = item.country__rim;\n    return keep;\n});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2140,
        "y": 3500,
        "wires": [
            [
                "fc7d31296cf7b12f",
                "66ccba17afd6cf21"
            ]
        ]
    },
    {
        "id": "66ccba17afd6cf21",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "3b0d3c603c0d1fd6",
        "name": "debug 353",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2430,
        "y": 3500,
        "wires": []
    },
    {
        "id": "646ee80e0e3c6a5f",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "3b0d3c603c0d1fd6",
        "name": "Order the HA by Country",
        "rules": [
            {
                "t": "set",
                "p": "payload.data",
                "pt": "msg",
                "to": "payload.data\t~>$sort(function($l, $r) {$l.country__rim > $r.country__rim})",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1790,
        "y": 3500,
        "wires": [
            [
                "90e528859987db49"
            ]
        ]
    },
    {
        "id": "e47b4d5d5c74d6f1",
        "type": "link out",
        "z": "2c4527dad914ec1c",
        "g": "3b0d3c603c0d1fd6",
        "name": "",
        "mode": "link",
        "links": [
            "0b4394d395558302"
        ],
        "x": 1805,
        "y": 3680,
        "wires": []
    },
    {
        "id": "4e0728471558a67e",
        "type": "switch",
        "z": "2c4527dad914ec1c",
        "g": "a7a8a74946229b91",
        "name": "If Event creation needed and which type",
        "property": "job",
        "propertyType": "msg",
        "rules": [
            {
                "t": "jsonata_exp",
                "v": "job.job_type=\"1\" and $contains(job.job_scope,\"Event\") and $not($exists(event_id))",
                "vt": "jsonata"
            },
            {
                "t": "jsonata_exp",
                "v": "job.job_type=\"2\" and $contains(job.job_scope,\"Event\") and $not($exists(event_id))",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1040,
        "y": 820,
        "wires": [
            [
                "19967e71170ecd73"
            ],
            [
                "d046d19b53dad465"
            ],
            [
                "0b5e993385abdbaf"
            ]
        ]
    },
    {
        "id": "0b5e993385abdbaf",
        "type": "switch",
        "z": "2c4527dad914ec1c",
        "g": "a7a8a74946229b91",
        "name": "If Application creation needed",
        "property": "job",
        "propertyType": "msg",
        "rules": [
            {
                "t": "jsonata_exp",
                "v": "$contains(job.job_scope,\"Country\")",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1790,
        "y": 840,
        "wires": [
            [
                "3d2f1bb1ca763691"
            ],
            [
                "b3626201f7983f76",
                "115701a7b00b4c46"
            ]
        ]
    },
    {
        "id": "b3626201f7983f76",
        "type": "switch",
        "z": "2c4527dad914ec1c",
        "g": "a7a8a74946229b91",
        "name": "If record creation needed and which type",
        "property": "job",
        "propertyType": "msg",
        "rules": [
            {
                "t": "jsonata_exp",
                "v": "job.job_type=\"1\" and $contains(job.job_scope,\"Related\")",
                "vt": "jsonata"
            },
            {
                "t": "jsonata_exp",
                "v": "job.job_type=\"2\" and $contains(job.job_scope,\"Related\")",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2600,
        "y": 840,
        "wires": [
            [
                "4b8eadec1c5671af",
                "eefb2eeedd415df4"
            ],
            [
                "4b8eadec1c5671af",
                "eefb2eeedd415df4"
            ],
            [
                "eefb2eeedd415df4",
                "8bda251317c47732"
            ]
        ]
    },
    {
        "id": "c65594f62b66ba6c",
        "type": "link out",
        "z": "2c4527dad914ec1c",
        "g": "cf3f4fcb8dc2573a",
        "name": "link out 13",
        "mode": "link",
        "links": [
            "6e98ee16de826386"
        ],
        "x": 4245,
        "y": 520,
        "wires": []
    },
    {
        "id": "eb998f707cad852f",
        "type": "comment",
        "z": "2c4527dad914ec1c",
        "name": "testing in scratchbox 01",
        "info": "",
        "x": 120,
        "y": 20,
        "wires": []
    },
    {
        "id": "413d0d4919352499",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "debug 354",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2650,
        "y": 520,
        "wires": []
    },
    {
        "id": "cd510823c811d7c4",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "a7a8a74946229b91",
        "name": "debug 355",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 740,
        "wires": []
    },
    {
        "id": "64a2d7cc0f15b947",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "a7a8a74946229b91",
        "name": "debug 356",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 780,
        "wires": []
    },
    {
        "id": "19967e71170ecd73",
        "type": "link call",
        "z": "2c4527dad914ec1c",
        "g": "a7a8a74946229b91",
        "name": "Create CTA Event",
        "links": [
            "82f3a1c97692584d"
        ],
        "linkType": "static",
        "timeout": "10000",
        "x": 1330,
        "y": 760,
        "wires": [
            [
                "0b5e993385abdbaf",
                "cd510823c811d7c4"
            ]
        ]
    },
    {
        "id": "82f3a1c97692584d",
        "type": "link in",
        "z": "2c4527dad914ec1c",
        "g": "c3cc3bc6b0b0ab38",
        "name": "link in 3",
        "links": [],
        "x": 85,
        "y": 1020,
        "wires": [
            [
                "f14722cf1050e3b6"
            ]
        ]
    },
    {
        "id": "d046d19b53dad465",
        "type": "link call",
        "z": "2c4527dad914ec1c",
        "g": "a7a8a74946229b91",
        "name": "Create Amendment Event",
        "links": [
            "e4914f34cdb1e255"
        ],
        "linkType": "static",
        "timeout": "300000",
        "x": 1350,
        "y": 800,
        "wires": [
            [
                "0b5e993385abdbaf",
                "64a2d7cc0f15b947"
            ]
        ]
    },
    {
        "id": "3d2f1bb1ca763691",
        "type": "link call",
        "z": "2c4527dad914ec1c",
        "g": "a7a8a74946229b91",
        "name": "Create Application",
        "links": [
            "eece97d5539892a0"
        ],
        "linkType": "static",
        "timeout": "10000",
        "x": 2070,
        "y": 800,
        "wires": [
            [
                "b3626201f7983f76"
            ]
        ]
    },
    {
        "id": "5301adb11c7b2c3a",
        "type": "link out",
        "z": "2c4527dad914ec1c",
        "g": "c3cc3bc6b0b0ab38",
        "name": "link out 14",
        "mode": "return",
        "links": [],
        "x": 985,
        "y": 1060,
        "wires": []
    },
    {
        "id": "05d9e73aaf4a53f9",
        "type": "http response",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 350,
        "y": 1880,
        "wires": []
    },
    {
        "id": "bdf854e2d1181a35",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "c3cc3bc6b0b0ab38",
        "name": "debug 357",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 1020,
        "wires": []
    },
    {
        "id": "115701a7b00b4c46",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "a7a8a74946229b91",
        "name": "debug 358",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2050,
        "y": 880,
        "wires": []
    },
    {
        "id": "959da61bde9bb8b0",
        "type": "switch",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "CTR?",
        "property": "payload.lead_country",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1570,
        "y": 1960,
        "wires": [
            [
                "6a6c7efc7e51bf6d"
            ],
            [
                "4f6dbedf8f6e524e"
            ]
        ]
    },
    {
        "id": "93250f2631c4e047",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "debug 362",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2610,
        "y": 1960,
        "wires": []
    },
    {
        "id": "4f6dbedf8f6e524e",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "store parameters",
        "rules": [
            {
                "t": "set",
                "p": "study_id",
                "pt": "msg",
                "to": "payload.study_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "cms_countries_string",
                "pt": "msg",
                "to": "payload.response_full[]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "lead_country_string",
                "pt": "msg",
                "to": "payload.lead_country",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "cta-automation",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "job.job_scope",
                "pt": "msg",
                "to": "payload.job_scope",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "job.job_type",
                "pt": "msg",
                "to": "payload.job_type",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "created_event_id",
                "pt": "msg",
                "to": "payload.created_event_id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 2080,
        "wires": [
            [
                "b219b669e1aa3a1f"
            ]
        ]
    },
    {
        "id": "b219b669e1aa3a1f",
        "type": "brave-login",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "",
        "x": 1310,
        "y": 2200,
        "wires": [
            [
                "7e622617fec07ddd"
            ],
            [
                "1e2e089e5f67454c"
            ]
        ]
    },
    {
        "id": "7e622617fec07ddd",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "query countries",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v, country_code__rim, region__v, region__vr.name__v from country__v where status__v = 'active__v'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1600,
        "y": 2180,
        "wires": [
            [
                "9026e264d0fa9d16"
            ]
        ]
    },
    {
        "id": "c526a83f886ee66c",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "f4492470635578ae",
        "name": "create applications",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"application__v\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "Application_country",
                "pt": "msg",
                "to": "$append(lead_country,countries)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Application_country.{\t   \"name__v\": \"cta_\" & $millis() & \"_\" & country_code,\t   \"object_type__vr.api_name__v\": \"investigational_application__c\",\t   \"domain__vr.name__v\": \"Human use\",\t   \"lead_market__rim\": country_id,\t   \"region__v\": region_id,\t   \"product__v\": $$.study.product__v,\t   \"applicable_product_type__v\": \"drug__v\",\t   \"application_type__rim\": application_type_id,\t   \"clinical_study__c\": $$.study.id,\t   \"publishing_hub__c\": \"ctis_submission_management__c\"\t}[]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 3100,
        "wires": [
            [
                "aeba6128dc0f5605"
            ]
        ]
    },
    {
        "id": "9a87a1f173d5e53f",
        "type": "link out",
        "z": "2c4527dad914ec1c",
        "g": "3b0d3c603c0d1fd6",
        "name": "link out 16",
        "mode": "link",
        "links": [
            "0e57f11a59848a31"
        ],
        "x": 2375,
        "y": 3680,
        "wires": []
    },
    {
        "id": "80c81f840d3d8bf8",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "3b0d3c603c0d1fd6",
        "name": "create non-CTR application countries",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"application_country__rim\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "applications@$i.ha@$h[$i.lead_market__rim != \"00C000000000783\" and $i.lead_market__rim=$h.country__rim].{\t   \"country__rim\": $i.lead_market__rim,\t   \"health_authority__c\": $h.health_authority__v,\t   \"application__rim\": $i.id,\t   \"object_type__vr.name__v\": \"Investigational Application Country\"\t}[]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1830,
        "y": 3620,
        "wires": [
            [
                "d43907b12f64f459"
            ]
        ]
    },
    {
        "id": "ec1a25f9388786d7",
        "type": "template",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "application type selection",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n\n<html lang=\"en\">\n\n    <head>\n\n        <meta charset=\"UTF-8\">\n\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n\n        <title>{{title}}</title>\n\n        <link  href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n\n        <script src=\"https://code.jquery.com/jquery-1.11.1.min.js\"></script>\n\n        <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js\"></script>\n\n\n\n\n        <style>\n\n           .tabs {\n\n                width: 400px;\n\n                margin: 30px auto;\n\n                background-color: #FFF;\n\n               /* border: 500px solid #C0DCC0;\n\n                /*box-sizing: border-box;*/\n\n                display: inline;\n\n                }\n\n           \n\n            .tabs nav {\n\n                width:400px;\n\n                height: 40px;\n\n                text-align: center;\n\n                line-height: 40px;\n\n                overflow: hidden;\n\n                background-color: #C0DCC0;\n\n                /* 伸缩盒模型 */\n\n                display: flex;\n\n                }\n\n\n\n\n            nav a {\n\n                display: block;\n\n                width: 400px;\n\n                border-right: 1px solid #FFF;\n\n                color: #000;\n\n                text-decoration: none;\n\n                }\n\n           \n\n            nav a:last-child {\n\n                border-right: none;\n\n                }\n\n\n\n\n            nav a.active {\n\n                background-color: #9BAF9B;\n\n                }\n\n\n\n\n            .cont {\n\n                overflow: hidden;\n\n                display: none;\n\n                }\n\n\n\n\n            .cont ol {\n\n                line-height: 300px;\n\n                }\n\n            p#back-to-top{\n\n                cursor:pointer;\n\n                position:fixed;\n\n                display:none;\n\n                bottom:100px;\n\n                right:40px;\n\n            }\n\n            #myBtn {\n\n                display: none; /* Hidden by default */\n\n                position: fixed; /* Fixed/sticky position */\n\n                bottom: 20px; /* Place the button at the bottom of the page */\n\n                right: 30px; /* Place the button 30px from the right */\n\n                z-index: 99; /* Make sure it does not overlap */\n\n                border: none; /* Remove borders */\n\n                outline: none; /* Remove outline */\n\n                background-color: #33D1FF; /* Set a background color */\n\n                color: white; /* Text color */\n\n                cursor: pointer; /* Add a mouse pointer on hover */\n\n                padding: 15px; /* Some padding */\n\n                border-radius: 10px; /* Rounded corners */\n\n                font-size: 18px; /* Increase font size */\n\n            }\n\n\n\n\n            #myBtn:hover {\n\n                background-color: #555; /* Add a dark-grey background on hover */\n\n                }\n\n\n\n\n            .searchTerm {\n\n                width: 25%;\n\n                border: 3px solid #00B4CC;\n\n                padding: 5px;\n\n                height: 30px;\n\n                border-radius: 5px 5px 5px 5px;\n\n                outline: none;\n\n                color: #9DBFAF;\n\n            }\n\n\n\n\n            .searchTerm:focus{\n\n                color: #00B4CC;\n\n                }\n\n\n\n\n                /*Resize the wrap to see the search bar change!*/\n\n            .wrap{\n\n                width: 30%;\n\n                position: absolute;\n\n                top: 50%;\n\n                left: 50%;\n\n                right:50%;\n\n                transform: translate(-50%, -50%);\n\n                }\n\n    </style>\n\n   \n\n    </head>\n\n    <body>\n\n   \n\n    <div class=\"container\">\n\n        <div class=\"row\">\n\n            <div class=\"col-md-12\">\n\n                <h2>Please define scope of the request for study {{ study.name__v  }}  {{ study.study_alias__c  }}</h2>\n\n           \n\n            <div class=\"tabs\">\n\n                   <nav id=\"tab\">\n\n                       <a id=\"tabCTA\" href=\"javascript:;\"  style=\"text-decoration: none;\" data-cont=\"CTA\" class=\"active\">CTA Application</a>\n\n                    <a id=\"tabCTD\" href=\"javascript:;\" style=\"text-decoration: none;\" data-cont=\"CTAD\">CTA Amendment</a>\n\n                  </nav>\n\n                    <br/>\n\n \n\n                    <section class=\"cont\" id =\"CTA\" style=\"display:block\">\n\n                        <div class=\"table-responsive\">\n\n                            <form method=\"post\" action=\"/nodes/cta/execute\">\n\n                            <input type=\"hidden\" id=\"applicationType\" name=\"job_scope\" value=\"\" />\n\n                            <input type=\"hidden\" id=\"jobType\" name=\"job_type\" value=\"0\" />\n\n                       {{#hiddenfields}}\n\n                            <input type=\"hidden\" name=\"{{name}}\" value=\"{{value}}\" />\n\n                        {{/hiddenfields}}\n\n                              <tr>\n\n                                    <td>\n\n                                     <input id=\"submitCTA\" type=\"submit\" style=\"width:70px;height:30px\" value=\"Next\" class=\"btn btn-primary\" disabled=\"true\">\n\n                                 </td>\n\n\n                              </tr>\n\n                                <br/>\n\n                                <tr> CTA Application: </tr>\n\n                                <br/>\n\n                                <div>\n\n                                    <tr>&nbsp;&nbsp;&nbsp;\n\n                                       <td><input type=\"checkbox\" value=\"CreateEvent\" name=\"CreateEvent\" class=\"CreateEvent\">&nbsp;Planning phase – Create Event and CTA Content Plan <span style=\"color:blue\"> (The first step to create tracking objects for a CTA is the creation of Event(s). When IMPD information is available or At time of document collection, the Event and Content Plan can be created)</span></td>\n\n                                    </tr>\n\n                                    <br/> <br/>\n\n                                     <tr>&nbsp;&nbsp;&nbsp;\n\n                                       <td><input type=\"checkbox\" value=\"CreateCountry\" name=\"CreateCountry\" class=\"CreateCountry\">&nbsp;Preparation phase – Create Country Application(s) <span style=\"color:blue\"> (Applications would only be created if not yet available. Therefore, it is strongly recommended to  <span style=\"font-weight:bold;\">first conduct a search for already existing applications. The corresponding CTA Amendment Event is needed to perform this action.</span>)</span></td>\n\n                                    </tr>\n\n                                     <br/> <br/>\n\n                                     <tr>&nbsp;&nbsp;&nbsp;\n\n                                       <td><input type=\"checkbox\" value=\"CreateRelated\" name=\"CreateRelated\" class=\"CreateRelated\">&nbsp;Preparation phase – Create Related Records <span style=\"color:blue\"> (When the final core package is ready for dispatch, Regulatory Objective and Submission records must be created to track the submission process. <span style=\"font-weight:bold;\">The corresponding CTA Amendment Event and Application(s) of the involved countries are needed to perform this action.</span>)</span></td>\n\n                                    </tr>\n\n                                </div>\n\n                                 <br/>\n\n                            </form>\n\n                        </div>\n\n                    </section>\n\n                    <section class=\"cont\" id=\"CTAD\">\n\n                        <div class=\"table-responsive\">\n\n                        <form method=\"post\" action=\"/nodes/cta/execute\">\n\n                         <input type=\"hidden\" id=\"applicationADType\" name=\"job_scope\" value=\"\" />\n\n                         <input type=\"hidden\" id=\"jobADType\" name=\"job_type\" value=\"0\" />\n\n                         {{#hiddenfields}}\n\n                         <input type=\"hidden\" name=\"{{name}}\" value=\"{{value}}\" />\n\n                         {{/hiddenfields}}\n\n                              <tr>\n\n                                    <td>\n\n                                     <input id=\"submitCTAD\" type=\"submit\" style=\"width:70px;height:30px\" value=\"Next\" class=\"btn btn-primary\" disabled=\"true\">\n\n                                 </td>\n\n\n\n\n                                        <td>\n\n                                     <button id=\"cancelCTAD\" onclick=\"window.history.go(-{{ . }})\" class=\"btn btn-primary\" style=\"width:70px;height:30px\" value=\"Cancel\">Cancel</button>\n\n                                 </td>\n\n\n\n\n                              </tr>\n\n                                <br/>\n\n                                <tr> CTA Amendment: </tr>\n\n                                <br/>\n\n                                <div>\n\n                                    <tr>&nbsp;&nbsp;&nbsp;\n\n                                       <td><input type=\"checkbox\" value=\"CreateADEvent\" name=\"CreateADEvent\" class=\"CreateADEvent\">&nbsp;Planning phase – Create Event and CTA Content Plan <span style=\"color:blue\"> (The first step to create tracking objects for a CTA is the creation of Event(s). Under Event you can set the scope of the to be changed details for all impacted countries.)</span></td>\n\n                                    </tr>\n\n                                    <br/> <br/>\n\n                                     <tr>&nbsp;&nbsp;&nbsp;\n\n                                       <td><input type=\"checkbox\" value=\"CreateADCountry\" name=\"CreateADCountry\" class=\"CreateADCountry\">&nbsp;Preparation phase – Create Country Application(s)  <span style=\"color:blue\"> (Usually the applications are only needed when first CTA application and only need to be created if not ye available. Therefore, it is strongly recommended to  <span style=\"font-weight:bold;\">first conduct a search for already existing applications. The corresponding CTA Application Event is needed to perform this action.</span>)</span></td>\n\n                                    </tr>\n\n                                     <br/> <br/>\n\n                                     <tr>&nbsp;&nbsp;&nbsp;\n\n                                       <td><input type=\"checkbox\" value=\"CreateADRelated\" name=\"CreateADRelated\" class=\"CreateADRelated\">&nbsp;Preparation phase – Create Related Records  <span style=\"color:blue\"> (When the final core package is ready for dispatch, Regulatory Objective and Submission records have to be created to track the submission process. <span style=\"font-weight:bold;\">The corresponding CTA Amendment Event and Application(s) of the involved countries are needed to perform this action.</span>)</span></td>\n\n                                    </tr>\n\n                                </div>\n\n                                 <br/>\n\n                            </form>\n\n                        </div>\n\n                       </section>\n\n                </div>\n\n            </div>\n\n        </div>\n\n    </div>\n\n    </body>\n\n</html>\n\n\n\n\n<script>\n\n    $(function(){\n\n          var aArr=document.querySelectorAll('a');\n\n          for(var i=0;i<aArr.length;i++){\n\n          aArr[i].onclick=function(){\n\n        var active=document.querySelector(\".active\");\n\n        active.classList.remove(\"active\");\n\n        this.classList.add(\"active\");\n\n        var name=this.getAttribute(\"data-cont\");\n\n        var section=document.getElementById(name);\n\n        var cont = document.getElementsByClassName(\"cont\");\n\n        for(var i=0;i<cont.length;i++){\n\n        cont[i].style.display=\"none\";\n\n\n\n\n        }\n\n        section.style.display=\"block\";\n\n\n\n\n\n          }\n\n      }\n\n    })\n\n</script>\n\n<script>\n\n    $(\"#CTAD\").change(function(){\n\n        var createEvent = document.getElementsByClassName('CreateADEvent');\n\n        var createCountry = document.getElementsByClassName('CreateADCountry');\n\n        var createRelated = document.getElementsByClassName('CreateADRelated');\n\n        var applicationType = document.getElementById('applicationADType').value.toString();\n\n           if(applicationType.startsWith('_'))\n\n            applicationType = applicationType.substring(1);\n\n     \n\n        var checkedcta = 0\n\n        for(let i=0; i<createEvent.length; i++){\n\n            if(createEvent[i].checked){\n\n               checkedcta = 1\n\n                 if(!applicationType.includes(\"CreateADEvent\"))\n\n                  applicationType=applicationType+'_CreateADEvent'\n\n               document.getElementById('applicationADType').value = applicationType\n\n            } else {\n\n                newType = applicationType.replace(\"CreateADEvent\", \"\")\n\n                newType = newType.replace(\"__\", \"_\")\n\n\n\n\n                applicationType = newType\n\n                document.getElementById('applicationADType').value = newType\n\n            }\n\n        }\n\n\n\n\n        for(let i=0; i<createCountry.length; i++){\n\n            if(createCountry[i].checked){\n\n               checkedcta = 1\n\n            if(!applicationType.includes(\"CreateADCountry\"))\n\n                  applicationType=applicationType+'_CreateADCountry'\n\n               document.getElementById('applicationADType').value = applicationType\n\n            } else {\n\n                newType = applicationType.replace(\"CreateADCountry\", \"\")\n\n                newType = newType.replace(\"__\", \"_\")\n\n\n\n\n                applicationType = newType\n\n                document.getElementById('applicationADType').value = newType\n\n            }\n\n        }\n\n\n\n\n        for(let i=0; i<createRelated.length; i++){\n\n            if(createRelated[i].checked){\n\n               checkedcta = 1\n\n                if(!applicationType.includes(\"CreateADRelated\"))\n\n                   applicationType=applicationType+'_CreateADRelated'\n\n               document.getElementById('applicationADType').value = applicationType\n\n            } else {\n\n                newType = applicationType.replace(\"CreateADRelated\", \"\")\n\n                newType = newType.replace(\"__\", \"_\")\n\n\n\n\n                applicationType = newType\n\n                document.getElementById('applicationADType').value = newType\n\n            }\n\n        }\n\n        if(checkedcta == 0){\n\n            document.getElementById('submitCTAD').disabled= true\n\n            document.getElementById('tabCTA').style = \"text-decoration: none;\"\n\n        }\n\n        if(checkedcta !== 0){\n\n           document.getElementById('submitCTAD').disabled= false\n\n           document.getElementById('tabCTA').style = \"pointer-events: none;\"\n\n           document.getElementById('jobADType').value = 2\n\n        }\n\n        console.log(checkedcta)\n\n    })\n\n</script>\n\n<script>\n\n    $(\"#CTA\").change(function(){\n\n        var createEvent = document.getElementsByClassName('CreateEvent');\n\n        var createCountry = document.getElementsByClassName('CreateCountry');\n\n        var createRelated = document.getElementsByClassName('CreateRelated');\n\n        var applicationType = document.getElementById('applicationType').value.toString();\n\n\n\n\n        if(applicationType.startsWith('_'))\n\n            applicationType = applicationType.substring(1);\n\n           \n\n\n\n\n        var checkedcta = 0\n\n        for(let i=0; i<createEvent.length; i++){\n\n            if(createEvent[i].checked){\n\n                console.log(\"--- clicked\")\n\n               checkedcta = 1\n\n               if(!applicationType.includes(\"CreateEvent\"))\n\n                  applicationType=applicationType+'_CreateEvent'\n\n               document.getElementById('applicationType').value = applicationType\n\n            } else {\n\n                newType = applicationType.replace(\"CreateEvent\", \"\")\n\n                newType = newType.replace(\"__\", \"_\")\n\n\n\n\n                applicationType = newType\n\n                document.getElementById('applicationType').value = newType\n\n            }\n\n        }\n\n\n\n\n        for(let i=0; i<createCountry.length; i++){\n\n            if(createCountry[i].checked){\n\n               checkedcta = 1\n\n               if(!applicationType.includes(\"CreateCountry\"))\n\n                  applicationType=applicationType+'_CreateCountry'\n\n               document.getElementById('applicationType').value = applicationType\n\n            } else {\n\n                newType = applicationType.replace(\"CreateCountry\", \"\")\n\n                newType = newType.replace(\"__\", \"_\")\n\n\n\n\n                applicationType = newType\n\n\n\n\n                document.getElementById('applicationType').value = newType\n\n            }\n\n        }\n\n\n\n\n        for(let i=0; i<createRelated.length; i++){\n\n            if(createRelated[i].checked){\n\n               checkedcta = 1\n\n               if(!applicationType.includes(\"createRelated\"))\n\n                   applicationType=applicationType+'_createRelated'\n\n               document.getElementById('applicationType').value = applicationType\n\n            } else {\n\n                newType = applicationType.replace(\"createRelated\", \"\")\n\n                newType = newType.replace(\"__\", \"_\")\n\n\n\n\n                applicationType = newType\n\n                document.getElementById('applicationType').value = newType\n\n            }\n\n        }\n\n        if(checkedcta == 0){\n\n            //document.getElementById('submitCTA').style.display='none'\n\n            document.getElementById('submitCTA').disabled= true\n\n            document.getElementById('tabCTD').style = \"text-decoration: none;\"\n\n           \n\n        }\n\n        if(checkedcta !== 0){\n\n           document.getElementById('submitCTA').disabled= false\n\n           document.getElementById('tabCTD').style = \"pointer-events: none;\"\n\n           document.getElementById('jobType').value = 1\n\n        }\n\n        console.log(checkedcta)\n\n    })\n\n</script>",
        "output": "str",
        "x": 2390,
        "y": 580,
        "wires": [
            [
                "413d0d4919352499",
                "ecd1f9618322385c"
            ]
        ]
    },
    {
        "id": "ecd1f9618322385c",
        "type": "http response",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2630,
        "y": 580,
        "wires": []
    },
    {
        "id": "1f4c810a5b6057fd",
        "type": "http in",
        "z": "2c4527dad914ec1c",
        "g": "a7a8a74946229b91",
        "name": "",
        "url": "cta/execute",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 820,
        "wires": [
            [
                "120256ee19425fdd"
            ]
        ]
    },
    {
        "id": "43a8f21c944f48c2",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "No Indication",
        "rules": [
            {
                "t": "set",
                "p": "hiddenfields",
                "pt": "msg",
                "to": "[\t   {\t       \"name\": \"study_id\",\t       \"value\": study_id    \t   },\t   {\t       \"name\": \"client_id\",\t       \"value\": \"cta-automation\"    \t   },\t   {\t       \"name\": \"vault_domain_url\",\t       \"value\": vault_domain_url\t   },\t   {\t       \"name\": \"session_id\",\t       \"value\": session_id\t   }\t]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1650,
        "y": 600,
        "wires": [
            [
                "ec1a25f9388786d7"
            ]
        ]
    },
    {
        "id": "120256ee19425fdd",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "a7a8a74946229b91",
        "name": "Store parameters",
        "rules": [
            {
                "t": "set",
                "p": "study_id",
                "pt": "msg",
                "to": "payload.study_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "payload.client_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "vault_domain_url",
                "pt": "msg",
                "to": "payload.vault_domain_url",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "session_id",
                "pt": "msg",
                "to": "payload.session_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "vault_api",
                "pt": "msg",
                "to": "vault_domain_url & \"/api/\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "event_id",
                "pt": "msg",
                "to": "payload.event_id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 820,
        "wires": [
            [
                "a69633711211e86e"
            ]
        ]
    },
    {
        "id": "a21361800a8e5222",
        "type": "http response",
        "z": "2c4527dad914ec1c",
        "g": "c3cc3bc6b0b0ab38",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 950,
        "y": 1120,
        "wires": []
    },
    {
        "id": "a69633711211e86e",
        "type": "switch",
        "z": "2c4527dad914ec1c",
        "g": "a7a8a74946229b91",
        "name": "payload.job exists?",
        "property": "$exists(payload.job)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 820,
        "wires": [
            [
                "bfd4c5ba48630dad"
            ],
            [
                "f8af263b4577eb60"
            ]
        ]
    },
    {
        "id": "f8af263b4577eb60",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "a7a8a74946229b91",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "job.job_type",
                "pt": "msg",
                "to": "payload.job_type",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "job.job_scope",
                "pt": "msg",
                "to": "payload.job_scope",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 840,
        "wires": [
            [
                "4e0728471558a67e"
            ]
        ]
    },
    {
        "id": "bfd4c5ba48630dad",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "a7a8a74946229b91",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "job",
                "pt": "msg",
                "to": "payload.job",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 800,
        "wires": [
            [
                "4e0728471558a67e"
            ]
        ]
    },
    {
        "id": "806db9d17f47a16f",
        "type": "http in",
        "z": "2c4527dad914ec1c",
        "g": "a7a8a74946229b91",
        "name": "",
        "url": "cta/execute",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1120,
        "y": 880,
        "wires": [
            [
                "6517fc922a6908a8"
            ]
        ]
    },
    {
        "id": "6517fc922a6908a8",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "a7a8a74946229b91",
        "name": "Store parameters",
        "rules": [
            {
                "t": "set",
                "p": "study_id",
                "pt": "msg",
                "to": "payload.study_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "cta-automation",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "created_event_id",
                "pt": "msg",
                "to": "payload.event_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "event_id",
                "pt": "msg",
                "to": "payload.event_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "job.job_type",
                "pt": "msg",
                "to": "payload.job_type",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "job.job_scope",
                "pt": "msg",
                "to": "payload.job_scope",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 880,
        "wires": [
            [
                "edf88ee6c1a5aee3"
            ]
        ]
    },
    {
        "id": "c83461d786b5f389",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "c3cc3bc6b0b0ab38",
        "name": "debug 370",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 1020,
        "wires": []
    },
    {
        "id": "edf88ee6c1a5aee3",
        "type": "brave-login",
        "z": "2c4527dad914ec1c",
        "g": "a7a8a74946229b91",
        "name": "",
        "x": 1490,
        "y": 880,
        "wires": [
            [
                "0b5e993385abdbaf"
            ],
            [
                "ec46849d03dc97ee"
            ]
        ]
    },
    {
        "id": "69470779e142a87f",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "",
        "x": 380,
        "y": 1460,
        "wires": [
            [
                "8fde7159b4debb7a"
            ],
            [
                "3916d23c39b50211"
            ]
        ]
    },
    {
        "id": "8c22964409200907",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "create REC",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"regulatory_event_code__c\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[\t   {\t       \t   }\t]",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 130,
        "y": 1460,
        "wires": [
            [
                "69470779e142a87f"
            ]
        ]
    },
    {
        "id": "73d1b1cc1b17b0a8",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "debug 379",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 1460,
        "wires": []
    },
    {
        "id": "8fde7159b4debb7a",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "store result",
        "rules": [
            {
                "t": "set",
                "p": "rec_id",
                "pt": "msg",
                "to": "payload.data[0].data.id",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 1460,
        "wires": [
            [
                "73d1b1cc1b17b0a8",
                "127f606ce23423fd"
            ]
        ]
    },
    {
        "id": "ac182d7b69f0f86a",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "Create Global Content Plan",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "vault_api & \"v22.2/vobjects/event__rim/\" & event_id &\"/actions/Objectlifecyclestateuseraction.event__rim.planned_state__c.create_global_content_plan_useraction__c\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"Authorization\": session_id,\t   \"Accept\": \"application/json\",\t   \"Content-Type\": \"application/x-www-form-urlencoded\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 1580,
        "wires": [
            [
                "fd63e95672fb41ae"
            ]
        ]
    },
    {
        "id": "8cfa0940562a9266",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "debug 380",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 1580,
        "wires": []
    },
    {
        "id": "fd63e95672fb41ae",
        "type": "http request",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 430,
        "y": 1580,
        "wires": [
            [
                "8cfa0940562a9266",
                "1125ca63681257a8"
            ]
        ]
    },
    {
        "id": "eadb4a6f7d0dd4bc",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "query global application",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, product__v, product__vr.name__v from application__v where object_type__vr.api_name__v='global_application__v' and product__v='\" & study.product__v & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 170,
        "y": 1400,
        "wires": [
            [
                "5872344ca0191238"
            ]
        ]
    },
    {
        "id": "5872344ca0191238",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "",
        "x": 370,
        "y": 1400,
        "wires": [
            [
                "b2a1451aac0e94f7"
            ],
            [
                "3916d23c39b50211"
            ]
        ]
    },
    {
        "id": "b2a1451aac0e94f7",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "global_application",
                "pt": "msg",
                "to": "payload.data[0].id",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 1400,
        "wires": [
            [
                "1e68c40c7d454e51",
                "8c22964409200907"
            ]
        ]
    },
    {
        "id": "1e68c40c7d454e51",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "e40195be7e014804",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1400,
        "wires": []
    },
    {
        "id": "34ea1cc0751f076c",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "create event",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"event__rim\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[\t   {\t       \"object_type__vr.api_name__v\": \"clinical_study_event__c\",\t       \"applicable_product_type__v\": \"drug__v\",\t       \"event_description__c\": (params.event_description__c !=\"\" ? params.event_description__c : \"N/A\" )& (params.shelf_life !=\"\" ? \"; Shelf life: \" & params.shelf_life : \"\"),\t       \"keywords__c\": event_keywords_name,\t       \"rec__c\": rec_id,\t       \"global_application__v\": global_application,\t       \"content_plan_template__v\": \"0EP00000004B425\",\t       \"project_id__c\": study.project_clinical_studies__cr.data[0].project__c\t\t   }\t]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 130,
        "y": 2980,
        "wires": [
            [
                "66ee8a94fb2d7adc"
            ]
        ]
    },
    {
        "id": "9ffd347dc28797f2",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "store result",
        "rules": [
            {
                "t": "set",
                "p": "event_id",
                "pt": "msg",
                "to": "payload.data[0].data.id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 2980,
        "wires": [
            [
                "4fca64c6e5d7ed76",
                "d75de5f5f81a0adc"
            ]
        ]
    },
    {
        "id": "37089233c845847c",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "link to product family",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"event_product_family__c\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[\t   {\t       \"name__v\": event_id & \"_\" & study.product__v,\t       \"event__c\": event_id,\t       \"product_family__c\": study.product__v\t    }\t]",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 3100,
        "wires": [
            [
                "bc0bf892de0b4278"
            ]
        ]
    },
    {
        "id": "0b502743c2105427",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "link to products",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"event_drug_product__rim\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[\t    study.clinical_study_products__cr.data.{\t       \"event__rim\": $$.event_id,\t       \"product_family__c\": product_family__c,\t       \"drug_product__rim\": product__c,\t       \"product_detail__rim\": product_variant__c,\t       \"study_role__c\": study_role__c\t    }\t]",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 140,
        "y": 3160,
        "wires": [
            [
                "5451e2d8fb92f9f3"
            ]
        ]
    },
    {
        "id": "b8f295cb419ef511",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "link to study",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"event_clinical_study__v\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[\t   {\t       \"event__v\": event_id,\t       \"clinical_study__v\": study_id,\t       \"impd_version_quality_part__c\": params.impd_version_quality_part__c,\t       \"impd_version_nonquality_part__c\": params.impd_version_nonquality_part__c,\t       \"protocol_version__c\": params.protocol_version__c,\t       \"ib_version__c\": params.ib_version__c\t    }\t]",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 130,
        "y": 3220,
        "wires": [
            [
                "9a5044524de15b1f"
            ]
        ]
    },
    {
        "id": "4fca64c6e5d7ed76",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 2980,
        "wires": []
    },
    {
        "id": "7afeedf6bafee44a",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 3100,
        "wires": []
    },
    {
        "id": "c407710e5c667233",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 3160,
        "wires": []
    },
    {
        "id": "463d51c07d96306f",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 3220,
        "wires": []
    },
    {
        "id": "66ee8a94fb2d7adc",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "x": 440,
        "y": 2980,
        "wires": [
            [
                "9ffd347dc28797f2"
            ],
            [
                "8b5fc85d413405da"
            ]
        ]
    },
    {
        "id": "bc0bf892de0b4278",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "x": 440,
        "y": 3100,
        "wires": [
            [
                "0b502743c2105427",
                "7afeedf6bafee44a"
            ],
            [
                "8b5fc85d413405da"
            ]
        ]
    },
    {
        "id": "5451e2d8fb92f9f3",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "x": 440,
        "y": 3160,
        "wires": [
            [
                "c407710e5c667233",
                "b8f295cb419ef511"
            ],
            [
                "8b5fc85d413405da"
            ]
        ]
    },
    {
        "id": "9a5044524de15b1f",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "x": 440,
        "y": 3220,
        "wires": [
            [
                "463d51c07d96306f",
                "7a6a4a210e0afacd"
            ],
            [
                "8b5fc85d413405da"
            ]
        ]
    },
    {
        "id": "8b5fc85d413405da",
        "type": "link out",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "mode": "link",
        "links": [
            "0b4394d395558302"
        ],
        "x": 685,
        "y": 3140,
        "wires": []
    },
    {
        "id": "7a6a4a210e0afacd",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "link to indications",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"event_indication__rim\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[\t   study.therapeutic_indication_clinical_studies__cr.data.{\t       \"product_family__c\": $$.study.product__v,\t       \"indication__rim\": therapeutic_indication__c,\t       \"event__rim\": $$.event_id\t    }\t]",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 150,
        "y": 3280,
        "wires": [
            [
                "c87ff740f015c7a0"
            ]
        ]
    },
    {
        "id": "c87ff740f015c7a0",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "x": 440,
        "y": 3280,
        "wires": [
            [
                "156170586af1680b",
                "b3fb81e7e5885281"
            ],
            [
                "8b5fc85d413405da"
            ]
        ]
    },
    {
        "id": "156170586af1680b",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 3280,
        "wires": []
    },
    {
        "id": "4a5932fab86abe01",
        "type": "http in",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "url": "cta/amend_event",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 2680,
        "wires": [
            [
                "c936f98b296593d4",
                "677b8bbeb3897d59"
            ]
        ]
    },
    {
        "id": "677b8bbeb3897d59",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "store parameters",
        "rules": [
            {
                "t": "set",
                "p": "study_id",
                "pt": "msg",
                "to": "payload.study_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "params",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "job.job_scope",
                "pt": "msg",
                "to": "payload.job_scope",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "job.job_type",
                "pt": "msg",
                "to": "payload.job_type",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "event_keywords_name",
                "pt": "msg",
                "to": "payload.event_keywords_name",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 2680,
        "wires": [
            [
                "286d257af08d6582",
                "18edec20a999d8ea"
            ]
        ]
    },
    {
        "id": "18edec20a999d8ea",
        "type": "brave-login",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "x": 930,
        "y": 2740,
        "wires": [
            [
                "adbccecc70ccc1de"
            ],
            [
                "8b5fc85d413405da"
            ]
        ]
    },
    {
        "id": "286d257af08d6582",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 2640,
        "wires": []
    },
    {
        "id": "b3fb81e7e5885281",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "restart CTA creation",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"location\":\"/nodes/cta/execute?study_id=\" & study_id & \"&event_id=\" & event_id & \"&job_type=\" & job.job_type & \"&job_scope=\" & job.job_scope\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "303",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 150,
        "y": 3340,
        "wires": [
            [
                "ea80771e71258993"
            ]
        ]
    },
    {
        "id": "c936f98b296593d4",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 2640,
        "wires": []
    },
    {
        "id": "adbccecc70ccc1de",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "query study",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v, study_alias__c, product__v, product__vr.name__v, (select id, name__v, product__c, product__cr.name__v, product_family__c, product_family__cr.name__v, product_variant__c, product_variant__cr.name__v, study_role__c from clinical_study_products__cr), (select id, project__c, project__cr.name__v from project_clinical_studies__cr), (select id, name__v, therapeutic_indication__c, therapeutic_indication__cr.name__v from therapeutic_indication_clinical_studies__cr) from clinical_study__v where id='\" & study_id & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 130,
        "y": 2800,
        "wires": [
            [
                "57f50ef402c17c23"
            ]
        ]
    },
    {
        "id": "57f50ef402c17c23",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "x": 430,
        "y": 2800,
        "wires": [
            [
                "6f439a7a79524586"
            ],
            [
                "8b5fc85d413405da"
            ]
        ]
    },
    {
        "id": "6f439a7a79524586",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "study",
                "pt": "msg",
                "to": "payload.data[0]",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 2800,
        "wires": [
            [
                "6c02ed1e44e31e22",
                "65c358887f4e068f"
            ]
        ]
    },
    {
        "id": "6c02ed1e44e31e22",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 2800,
        "wires": []
    },
    {
        "id": "ea80771e71258993",
        "type": "http response",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 410,
        "y": 3340,
        "wires": []
    },
    {
        "id": "d3885638377c2c4a",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "create REC",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"regulatory_event_code__c\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[\t   {\t       \t   }\t]",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 130,
        "y": 2920,
        "wires": [
            [
                "1dd759108b42270b"
            ]
        ]
    },
    {
        "id": "1dd759108b42270b",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "x": 440,
        "y": 2920,
        "wires": [
            [
                "67d9ed8e3673348f"
            ],
            [
                "8b5fc85d413405da"
            ]
        ]
    },
    {
        "id": "55ba323f168715bb",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "debug 381",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 2920,
        "wires": []
    },
    {
        "id": "67d9ed8e3673348f",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "store result",
        "rules": [
            {
                "t": "set",
                "p": "rec_id",
                "pt": "msg",
                "to": "payload.data[0].data.id",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 2920,
        "wires": [
            [
                "55ba323f168715bb",
                "34ea1cc0751f076c"
            ]
        ]
    },
    {
        "id": "d75de5f5f81a0adc",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "Create Global Content Plan",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "vault_api & \"v22.2/vobjects/event__rim/\" & event_id &\"/actions/Objectlifecyclestateuseraction.event__rim.planned_state__c.create_global_content_plan_useraction__c\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"Authorization\": session_id,\t   \"Accept\": \"application/json\",\t   \"Content-Type\": \"application/x-www-form-urlencoded\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 3040,
        "wires": [
            [
                "74f2aa2cafa46f84"
            ]
        ]
    },
    {
        "id": "c4dd41f3d158cecd",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "debug 382",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 3040,
        "wires": []
    },
    {
        "id": "74f2aa2cafa46f84",
        "type": "http request",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 430,
        "y": 3040,
        "wires": [
            [
                "c4dd41f3d158cecd",
                "37089233c845847c"
            ]
        ]
    },
    {
        "id": "65c358887f4e068f",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "query global application",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, product__v, product__vr.name__v from application__v where object_type__vr.api_name__v='global_application__v' and product__v='\" & study.product__v & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 170,
        "y": 2860,
        "wires": [
            [
                "2eae4c60b1476596"
            ]
        ]
    },
    {
        "id": "37f99f391a826882",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 2860,
        "wires": []
    },
    {
        "id": "b9c7b78dd7d44017",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "global_application",
                "pt": "msg",
                "to": "payload.data[0].id",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 2860,
        "wires": [
            [
                "37f99f391a826882",
                "d3885638377c2c4a"
            ]
        ]
    },
    {
        "id": "2eae4c60b1476596",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "x": 430,
        "y": 2860,
        "wires": [
            [
                "b9c7b78dd7d44017"
            ],
            [
                "8b5fc85d413405da"
            ]
        ]
    },
    {
        "id": "e4914f34cdb1e255",
        "type": "link in",
        "z": "2c4527dad914ec1c",
        "g": "77a95a28986a8bfc",
        "name": "link in 6",
        "links": [],
        "x": 85,
        "y": 2200,
        "wires": [
            [
                "25d332512d7867b8"
            ]
        ]
    },
    {
        "id": "82d495ca62c54a03",
        "type": "http response",
        "z": "2c4527dad914ec1c",
        "g": "77a95a28986a8bfc",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 2260,
        "wires": []
    },
    {
        "id": "1a580dd7501928eb",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "77a95a28986a8bfc",
        "name": "set fields for input form",
        "rules": [
            {
                "t": "set",
                "p": "title",
                "pt": "msg",
                "to": "\"Creating Event for Study \" & study.name__v & \" \" & study.study_alias__c",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "type",
                "pt": "msg",
                "to": "checkbox",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "description",
                "pt": "msg",
                "to": "Please select Event Keywords.",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "tableheader",
                "pt": "msg",
                "to": "{\"columns\":[\"Event Keyword\"]}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "dataarray",
                "pt": "msg",
                "to": "Event_Keywords.{\t   \"selection\": $string(),\t   \"columns\": \t   [\t       Title\t       ]\t}",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "flow",
                "pt": "msg",
                "to": "nodes/cta/event_info",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hiddenfields",
                "pt": "msg",
                "to": "[\t   {\t       \"name\": \"study_id\",\t       \"value\": study_id\t    },\t    {\t        \"name\": \"job_type\",\t        \"value\": job.job_type\t    },\t    {\t        \"name\": \"job_scope\",\t        \"value\": job.job_scope\t    }\t]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 2260,
        "wires": [
            [
                "20db1f0318099f37"
            ]
        ]
    },
    {
        "id": "20db1f0318099f37",
        "type": "brave-input-form",
        "z": "2c4527dad914ec1c",
        "g": "77a95a28986a8bfc",
        "name": "",
        "x": 470,
        "y": 2260,
        "wires": [
            [
                "82d495ca62c54a03"
            ]
        ]
    },
    {
        "id": "745c1f28d5453c5b",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "event_keywords_string",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 2680,
        "wires": [
            [
                "359d517b2871831f"
            ]
        ]
    },
    {
        "id": "c52cd54c453f4f22",
        "type": "json",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "json to object",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 130,
        "y": 2740,
        "wires": [
            [
                "0ed372e867cabe51"
            ]
        ]
    },
    {
        "id": "c9dd85cca0928b83",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "Event Keyword to string",
        "rules": [
            {
                "t": "set",
                "p": "event_keywords_name",
                "pt": "msg",
                "to": "payload.Name ~>\t$reduce(function($i,$j){$i & \",\" & $j})",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 2740,
        "wires": [
            [
                "9f0baf50744a8972",
                "18edec20a999d8ea"
            ]
        ]
    },
    {
        "id": "9f0baf50744a8972",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "debug 383",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 2660,
        "wires": []
    },
    {
        "id": "359d517b2871831f",
        "type": "split",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 830,
        "y": 2680,
        "wires": [
            [
                "c52cd54c453f4f22"
            ]
        ]
    },
    {
        "id": "0ed372e867cabe51",
        "type": "join",
        "z": "2c4527dad914ec1c",
        "g": "4efce2b6e1fdfe62",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 410,
        "y": 2740,
        "wires": [
            [
                "c9dd85cca0928b83"
            ]
        ]
    },
    {
        "id": "ec46849d03dc97ee",
        "type": "link out",
        "z": "2c4527dad914ec1c",
        "g": "a7a8a74946229b91",
        "name": "link out 17",
        "mode": "link",
        "links": [
            "0b4394d395558302"
        ],
        "x": 1685,
        "y": 880,
        "wires": []
    },
    {
        "id": "4b8eadec1c5671af",
        "type": "link out",
        "z": "2c4527dad914ec1c",
        "g": "a7a8a74946229b91",
        "name": "link out 18",
        "mode": "link",
        "links": [
            "02de661d53928e64",
            "da23fd7381dc1b26",
            "e3d2034e8f5e2cdb"
        ],
        "x": 2925,
        "y": 820,
        "wires": []
    },
    {
        "id": "96ab22406c6dcd7e",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "debug 385",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2430,
        "y": 2540,
        "wires": []
    },
    {
        "id": "c89d44f157d80bc4",
        "type": "switch",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "",
        "property": "lead_country_string",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1310,
        "y": 2600,
        "wires": [
            [
                "551b9623d7990835"
            ],
            [
                "40b6e35085a52486"
            ]
        ]
    },
    {
        "id": "40b6e35085a52486",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "213c3efa9b282b39",
        "name": "Clear lead & cms country",
        "rules": [
            {
                "t": "set",
                "p": "lead_country",
                "pt": "msg",
                "to": "[]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "cms_countries",
                "pt": "msg",
                "to": "[]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1510,
        "y": 2720,
        "wires": [
            [
                "40898951895346d8"
            ]
        ]
    },
    {
        "id": "a53bccc1a94c03cb",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "query study",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v, study_alias__c, product__v, product__vr.name__v, (select id, name__v, product__c, product__cr.name__v, product_family__c, product_family__cr.name__v, product_variant__c, product_variant__cr.name__v from clinical_study_products__cr), (select id, name__v, therapeutic_indication__c, therapeutic_indication__cr.name__v from therapeutic_indication_clinical_studies__cr) from clinical_study__v where id='\" & study_id & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1460,
        "wires": [
            [
                "d0a29d4805a80d8d"
            ]
        ]
    },
    {
        "id": "d0a29d4805a80d8d",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "",
        "x": 1630,
        "y": 1460,
        "wires": [
            [
                "4c13bcff35809281"
            ],
            [
                "1e2e089e5f67454c"
            ]
        ]
    },
    {
        "id": "4c13bcff35809281",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "study",
                "pt": "msg",
                "to": "payload.data[0]",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1840,
        "y": 1460,
        "wires": [
            [
                "13bd5f110d29cf33",
                "f366310a370cb263"
            ]
        ]
    },
    {
        "id": "13bd5f110d29cf33",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 1460,
        "wires": []
    },
    {
        "id": "bd46d5f7dd3c56b5",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "query study",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v, study_alias__c, product__v, product__vr.name__v, (select id, name__v, product__c, product__cr.name__v, product_family__c, product_family__cr.name__v, product_variant__c, product_variant__cr.name__v from clinical_study_products__cr), (select id, name__v, therapeutic_indication__c, therapeutic_indication__cr.name__v from therapeutic_indication_clinical_studies__cr) from clinical_study__v where id='\" & study_id & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1590,
        "y": 2240,
        "wires": [
            [
                "aabf522cbde63186"
            ]
        ]
    },
    {
        "id": "aabf522cbde63186",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "",
        "x": 1870,
        "y": 2240,
        "wires": [
            [
                "8e7df44115a60b5e"
            ],
            [
                "b7de0fe7ad66d2ca"
            ]
        ]
    },
    {
        "id": "8e7df44115a60b5e",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "study",
                "pt": "msg",
                "to": "payload.data[0]",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2080,
        "y": 2240,
        "wires": [
            [
                "9304d4da4efa5f6c",
                "bdf4c22bb3725613"
            ]
        ]
    },
    {
        "id": "9304d4da4efa5f6c",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2590,
        "y": 2240,
        "wires": []
    },
    {
        "id": "8dd59e74376d6937",
        "type": "switch",
        "z": "2c4527dad914ec1c",
        "g": "3b0d3c603c0d1fd6",
        "name": "",
        "property": "lead_country_string",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1510,
        "y": 3560,
        "wires": [
            [
                "0571712f078a2137"
            ],
            [
                "80c81f840d3d8bf8"
            ]
        ]
    },
    {
        "id": "eece97d5539892a0",
        "type": "link in",
        "z": "2c4527dad914ec1c",
        "g": "fa41432bb855af38",
        "name": "To create Application",
        "links": [],
        "x": 1275,
        "y": 1020,
        "wires": [
            [
                "147046e7feeea1d8"
            ]
        ]
    },
    {
        "id": "0e57f11a59848a31",
        "type": "link in",
        "z": "2c4527dad914ec1c",
        "g": "a7a8a74946229b91",
        "name": "link in 9",
        "links": [
            "9a87a1f173d5e53f"
        ],
        "x": 2305,
        "y": 880,
        "wires": [
            [
                "b3626201f7983f76"
            ]
        ]
    },
    {
        "id": "eefb2eeedd415df4",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "a7a8a74946229b91",
        "name": "debug 388",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2610,
        "y": 740,
        "wires": []
    },
    {
        "id": "6e441cc056e5c53b",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "cf3f4fcb8dc2573a",
        "name": "Set the result page",
        "rules": [
            {
                "t": "set",
                "p": "applications",
                "pt": "msg",
                "to": "$append(ctrapplications,applications)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "ros",
                "pt": "msg",
                "to": "$append(ctrros,ros)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "submissions",
                "pt": "msg",
                "to": "$append(ctrsubmissions,submissions)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "title",
                "pt": "msg",
                "to": "The operation was successful",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "unescaped",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "httpcalls",
                "pt": "msg",
                "to": "5",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "dataarray",
                "pt": "msg",
                "to": "[\t    {\t       \"selection\": created_event,\t       \"columns\": [\t           \"Event\",\t           \"<a href=\\\"https://\" & req.cookies.vault_domain & \"/ui/#t/0TB000000000B03/A0Z/\" &\t          created_event.id & \"\\\" target=\\\"_blank\\\"\"&\"\\\">\"& created_event.name__v & \"</a>\"\t        ]\t    },\t    created_applications@$vl. {\t        \"selection\": \"n/a\",\t         \"columns\": [\t            \"Application\",\t            \"<a href=\\\"https://\" & req.cookies.vault_domain & \"/ui/#t/0TB000000000B21/00A/\" & $vl.id & \"\\\" target=\\\"_blank\\\"\"&\"\\\">\"& $vl.name__v & \"</a>\"\t        ]\t    },\t    ros@$vl. {\t        \"selection\": \"n/a\",\t         \"columns\": [\t            \"Regulatory Objective\",\t            \"<a href=\\\"https://\" & req.cookies.vault_domain & \"/ui/#t/0TB000000000K01/OBH/\" & $vl.id & \"\\\" target=\\\"_blank\\\"\"&\"\\\">\"& $vl.name__v & \"</a>\"\t        ]\t    },\t    submissions@$vl. {\t        \"selection\": \"n/a\",\t         \"columns\": [\t            \"Submission\",\t            \"<a href=\\\"https://\" & req.cookies.vault_domain & \"/ui/#t/0TB000000000B22/00S/\" & $vl.id & \"\\\" target=\\\"_blank\\\"\"&\"\\\">\"& $vl.name__v & \"</a>\"\t        ]\t    }\t]\t\t",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "tableheader",
                "pt": "msg",
                "to": "{\t   \"columns\": \t    [\t        \"Type\",\t        \"Name\"\t    ]\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "flow",
                "pt": "msg",
                "to": "nodes/cta",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4030,
        "y": 520,
        "wires": [
            [
                "c65594f62b66ba6c",
                "dc179569b9799870"
            ]
        ]
    },
    {
        "id": "c3df4ccf459db19f",
        "type": "link in",
        "z": "2c4527dad914ec1c",
        "g": "cf3f4fcb8dc2573a",
        "name": "link in 10",
        "links": [
            "1ad0402c6eac4a81",
            "8bda251317c47732"
        ],
        "x": 3105,
        "y": 280,
        "wires": [
            [
                "3875450d706f6724"
            ]
        ]
    },
    {
        "id": "e3f83d8d0cbdf4a4",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "cf3f4fcb8dc2573a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "query_ids",
                "pt": "msg",
                "to": "created_application_ids ~> $split(\",\") ~> $map(function($v) {\"id='\" & $v & \"'\"}) ~> $join(\" OR \")",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3430,
        "y": 280,
        "wires": [
            [
                "82a34d65142c7d1e",
                "e0c1393bdfa1865e"
            ]
        ]
    },
    {
        "id": "e0c1393bdfa1865e",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "cf3f4fcb8dc2573a",
        "name": "query created applications",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v from application__v where \" & query_ids",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3660,
        "y": 280,
        "wires": [
            [
                "908a3e8352298a3f",
                "25277f4f1f618498"
            ]
        ]
    },
    {
        "id": "908a3e8352298a3f",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "cf3f4fcb8dc2573a",
        "name": "",
        "x": 3880,
        "y": 280,
        "wires": [
            [
                "8a97172448094a63"
            ],
            [
                "e2bbf68093902dd8"
            ]
        ]
    },
    {
        "id": "8a97172448094a63",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "cf3f4fcb8dc2573a",
        "name": "store result",
        "rules": [
            {
                "t": "set",
                "p": "created_applications",
                "pt": "msg",
                "to": "payload.data",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "description",
                "pt": "msg",
                "to": "\"<h5>The following Vault objects are now available for study \" & \"<a href=\\\"https://\" & req.cookies.vault_domain & \"/ui/#t/0TB000000000B26/0CT/\" & study_id & \"\\\" target=\\\"_blank\\\"\"&\"\\\">\" & study.name__v & \"</a><br><br></h5> It would take a while for the Submission Content Plan to be created and there would be a BRAVE notification after the completion.\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4060,
        "y": 280,
        "wires": [
            [
                "e465505a38c646ab",
                "f913b67552863c67"
            ]
        ]
    },
    {
        "id": "dd8e0450df6db078",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "cf3f4fcb8dc2573a",
        "name": "query created event",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v from event__rim where id='\" & created_event_id & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3650,
        "y": 340,
        "wires": [
            [
                "21345e0676e23ae3",
                "b286a0092acfd283"
            ]
        ]
    },
    {
        "id": "21345e0676e23ae3",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "cf3f4fcb8dc2573a",
        "name": "",
        "x": 3880,
        "y": 340,
        "wires": [
            [
                "133e012f4802a9b2"
            ],
            [
                "e2bbf68093902dd8"
            ]
        ]
    },
    {
        "id": "133e012f4802a9b2",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "cf3f4fcb8dc2573a",
        "name": "store result",
        "rules": [
            {
                "t": "set",
                "p": "created_event",
                "pt": "msg",
                "to": "payload.data",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "description",
                "pt": "msg",
                "to": "\"<h5>The following Vault objects are now available for study \" & \"<a href=\\\"https://\" & req.cookies.vault_domain & \"/ui/#t/0TB000000000B26/0CT/\" & study_id & \"\\\" target=\\\"_blank\\\"\"&\"\\\">\" & study.name__v & \"</a><br><br></h5> It would take a while for the Submission Content Plan to be created and there would be a BRAVE notification after the completion.\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4060,
        "y": 340,
        "wires": [
            [
                "e4d80dada213b37f",
                "6e441cc056e5c53b"
            ]
        ]
    },
    {
        "id": "82a34d65142c7d1e",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "cf3f4fcb8dc2573a",
        "name": "debug 400",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3860,
        "y": 220,
        "wires": []
    },
    {
        "id": "25277f4f1f618498",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "cf3f4fcb8dc2573a",
        "name": "debug 401",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4240,
        "y": 220,
        "wires": []
    },
    {
        "id": "e465505a38c646ab",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "cf3f4fcb8dc2573a",
        "name": "debug 402",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4240,
        "y": 280,
        "wires": []
    },
    {
        "id": "e4d80dada213b37f",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "cf3f4fcb8dc2573a",
        "name": "debug 403",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4240,
        "y": 340,
        "wires": []
    },
    {
        "id": "dc179569b9799870",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "cf3f4fcb8dc2573a",
        "name": "debug 404",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4240,
        "y": 460,
        "wires": []
    },
    {
        "id": "b286a0092acfd283",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "cf3f4fcb8dc2573a",
        "name": "debug 405",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4240,
        "y": 400,
        "wires": []
    },
    {
        "id": "3875450d706f6724",
        "type": "switch",
        "z": "2c4527dad914ec1c",
        "g": "cf3f4fcb8dc2573a",
        "name": "",
        "property": "created_application_ids",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3240,
        "y": 280,
        "wires": [
            [
                "e3f83d8d0cbdf4a4"
            ],
            [
                "f913b67552863c67"
            ]
        ]
    },
    {
        "id": "f913b67552863c67",
        "type": "switch",
        "z": "2c4527dad914ec1c",
        "g": "cf3f4fcb8dc2573a",
        "name": "",
        "property": "created_event_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3380,
        "y": 340,
        "wires": [
            [
                "dd8e0450df6db078"
            ],
            [
                "866256d61e7910ed"
            ]
        ]
    },
    {
        "id": "8bda251317c47732",
        "type": "link out",
        "z": "2c4527dad914ec1c",
        "g": "a7a8a74946229b91",
        "name": "link out 19",
        "mode": "link",
        "links": [
            "c3df4ccf459db19f"
        ],
        "x": 2925,
        "y": 860,
        "wires": []
    },
    {
        "id": "787961bfe48f9c3f",
        "type": "template",
        "z": "2c4527dad914ec1c",
        "g": "e1b7d81d3cd06a62",
        "name": "Input Form",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>New Clinical Study Event</title>\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/css/bootstrap.min.css\"\n        integrity=\"sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu\" crossorigin=\"anonymous\">\n    <script src=\"https://code.jquery.com/jquery-1.12.4.min.js\"\n        integrity=\"sha384-nvAa0+6Qg9clwYCGGPpDQLVpLNn0fRaROjHqs13t4Ggj3Ez50XnGQqc/r8MhnRDZ\"\n        crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/js/bootstrap.min.js\"\n        integrity=\"sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd\"\n        crossorigin=\"anonymous\"></script>\n</head>\n\n<body>\n    <div class=\"modal fade\" id=\"modal\" tabindex=\"-1\" data-backdrop=\"static\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Processing ...</h4>\n                </div>\n                <div class=\"modal-body\">\n                    <p>Please wait while the changes are applied.</p>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"container\">\n        <h1>New Event for Clinical Study {{study.name__v}}</h1>\n        <p>Please provide details for the new Clinical Study Event.</p>\n        <br>\n        <form class=\"form-horizontal\" method=\"post\" action=\"/nodes/cta/amend_event\">\n            <input type=\"hidden\" name=\"study_id\" value=\"{{study_id}}\">\n            <input type=\"hidden\" name=\"job_scope\" value=\"{{job.job_scope}}\">\n            <input type=\"hidden\" name=\"job_type\" value=\"{{job.job_type}}\">\n            <input type=\"hidden\" name=\"event_keywords_name\" value=\"{{event_keywords_name}}\">\n            \n            <div class=\"form-group\">\n                <label class=\"col-md-4 control-label\" for=\"impd_version_quality_part__c\">IMPD Version Quality Part\n                    Provided</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" class=\"form-control\" id=\"impd_version_quality_part__c\"\n                        name=\"impd_version_quality_part__c\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"col-md-4 control-label\" for=\"impd_version_nonquality_part__c\">IMPD Version non- Quality\n                    Part Provided</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" class=\"form-control\" id=\"impd_version_nonquality_part__c\"\n                        name=\"impd_version_nonquality_part__c\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"col-md-4 control-label\" for=\"protocol_version__c\">Protocol Version Provided</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" class=\"form-control\" id=\"protocol_version__c\" name=\"protocol_version__c\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"col-md-4 control-label\" for=\"ib_version__c\">IB Version Provided</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" class=\"form-control\" id=\"ib_version__c\" name=\"ib_version__c\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"col-md-4 control-label\" for=\"shelf_life\">Shelf Life</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" class=\"form-control\" id=\"shelf_life\" name=\"shelf_life\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"col-md-4 control-label\" for=\"event_description__c\">Event Desciption</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" class=\"form-control\" id=\"event_description__c\" name=\"event_description__c\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"col-md-offset-4 col-md-8\">\n                    <button type=\"submit\" class=\"btn btn-primary\">Create Clinical Study Event</button>\n                </div>\n            </div>\n        </form>\n    </div>\n\n    <script>\n        $(document).ready(function(){\n            $(\"form\").submit(function() {\n                $(\"#modal\").modal(\"show\");\n            });\n        });\n    </script>\n</body>\n\n</html>",
        "output": "str",
        "x": 870,
        "y": 2540,
        "wires": [
            [
                "5ec534431ecdbbc3"
            ]
        ]
    },
    {
        "id": "5ec534431ecdbbc3",
        "type": "http response",
        "z": "2c4527dad914ec1c",
        "g": "e1b7d81d3cd06a62",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1030,
        "y": 2540,
        "wires": []
    },
    {
        "id": "6d77e6da0d189a2f",
        "type": "http in",
        "z": "2c4527dad914ec1c",
        "g": "e1b7d81d3cd06a62",
        "name": "",
        "url": "cta/event_info",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 2360,
        "wires": [
            [
                "9c10197129e36e22"
            ]
        ]
    },
    {
        "id": "83bfb2c8803ef98a",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "e1b7d81d3cd06a62",
        "name": "store parameters",
        "rules": [
            {
                "t": "set",
                "p": "study_id",
                "pt": "msg",
                "to": "payload.study_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "params",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "job.job_scope",
                "pt": "msg",
                "to": "payload.job_scope",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "job.job_type",
                "pt": "msg",
                "to": "payload.job_type",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "event_keywords_string",
                "pt": "msg",
                "to": "payload.response_full",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 2360,
        "wires": [
            [
                "aec7dcad5b069c99",
                "29d6cf22180fb772"
            ]
        ]
    },
    {
        "id": "1c245cad2a9ec068",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "e1b7d81d3cd06a62",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "event_keywords_string",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 2460,
        "wires": [
            [
                "23fa5da47fb79950"
            ]
        ]
    },
    {
        "id": "23fa5da47fb79950",
        "type": "split",
        "z": "2c4527dad914ec1c",
        "g": "e1b7d81d3cd06a62",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 590,
        "y": 2460,
        "wires": [
            [
                "b05a3d51f61273c5"
            ]
        ]
    },
    {
        "id": "b05a3d51f61273c5",
        "type": "json",
        "z": "2c4527dad914ec1c",
        "g": "e1b7d81d3cd06a62",
        "name": "json to object",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 130,
        "y": 2500,
        "wires": [
            [
                "fede6ae32eca8534"
            ]
        ]
    },
    {
        "id": "fede6ae32eca8534",
        "type": "join",
        "z": "2c4527dad914ec1c",
        "g": "e1b7d81d3cd06a62",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 390,
        "y": 2500,
        "wires": [
            [
                "0eab635811c284a9"
            ]
        ]
    },
    {
        "id": "0eab635811c284a9",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "e1b7d81d3cd06a62",
        "name": "Event Keyword to string",
        "rules": [
            {
                "t": "set",
                "p": "event_keywords_name",
                "pt": "msg",
                "to": "payload.Name ~>\t$reduce(function($i,$j){$i & \",\" & $j})",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "event_keywords_title",
                "pt": "msg",
                "to": "payload.Title ~>\t$reduce(function($i,$j){$i & \",\" & $j})",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 2500,
        "wires": [
            [
                "787961bfe48f9c3f",
                "2d6057ae01606945"
            ]
        ]
    },
    {
        "id": "aec7dcad5b069c99",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "e1b7d81d3cd06a62",
        "name": "debug 408",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 2360,
        "wires": []
    },
    {
        "id": "2d6057ae01606945",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "e1b7d81d3cd06a62",
        "name": "debug 409",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 2500,
        "wires": []
    },
    {
        "id": "9c10197129e36e22",
        "type": "json",
        "z": "2c4527dad914ec1c",
        "g": "e1b7d81d3cd06a62",
        "name": "resp_full",
        "property": "payload.response_full",
        "action": "obj",
        "pretty": false,
        "x": 400,
        "y": 2360,
        "wires": [
            [
                "83bfb2c8803ef98a"
            ]
        ]
    },
    {
        "id": "de5518a5c2dcf534",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1890,
        "y": 560,
        "wires": []
    },
    {
        "id": "ad3d43f8c209bac3",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "more than one Project",
        "rules": [
            {
                "t": "set",
                "p": "description",
                "pt": "msg",
                "to": "\"Study \" & study.name__v & \" \" & study.study_alias__c & \" is invalid.\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.errors",
                "pt": "msg",
                "to": "[{\"type\":\"Inconsistent Data\",\"message\":\"There are more than one Project connected with the study\"}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1680,
        "y": 560,
        "wires": [
            [
                "de5518a5c2dcf534",
                "d1295ce2fe20155c"
            ]
        ]
    },
    {
        "id": "fc41e3958fc57881",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "1adf9a7b09d9ec3e",
        "name": "debug 417",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 520,
        "wires": []
    },
    {
        "id": "3f3ba07ae696a258",
        "type": "subflow:fca036ab5aa23301",
        "z": "2c4527dad914ec1c",
        "g": "77a95a28986a8bfc",
        "name": "",
        "x": 490,
        "y": 2200,
        "wires": [
            [
                "eaaae11c9d0f5209"
            ],
            []
        ]
    },
    {
        "id": "eaaae11c9d0f5209",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "77a95a28986a8bfc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Event_Keywords",
                "pt": "msg",
                "to": "payload[0].event_keywords",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 2200,
        "wires": [
            [
                "82f885e754fc45bd",
                "1a580dd7501928eb"
            ]
        ]
    },
    {
        "id": "25d332512d7867b8",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "77a95a28986a8bfc",
        "name": "Retrieve configs in BRAVE",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t    \"settings_name\":\"cta_record_creation\",\t    \"attachment_name\":\"cta_creation_config.json\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 2200,
        "wires": [
            [
                "3f3ba07ae696a258"
            ]
        ]
    },
    {
        "id": "82f885e754fc45bd",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "77a95a28986a8bfc",
        "name": "debug 424",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 2200,
        "wires": []
    },
    {
        "id": "a710fd5c93105bef",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "f4492470635578ae",
        "name": "rename Application",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "vault_api & \"v22.2/vobjects/application__v\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"Authorization\": session_id,\t   \"Accept\": \"application/json\",\t   \"Content-Type\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "applications.{\t   \"id\": id,\t   \"name__v\": $substringBefore(name__v,\" - ##\")\t}[]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 3220,
        "wires": [
            [
                "e1b7d959e12be6a2"
            ]
        ]
    },
    {
        "id": "e1b7d959e12be6a2",
        "type": "http request",
        "z": "2c4527dad914ec1c",
        "g": "b21a8850dadd4a12",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1570,
        "y": 3020,
        "wires": [
            [
                "ee0a41c3e261db60"
            ]
        ]
    },
    {
        "id": "d43cbcb95adf6c56",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "f4492470635578ae",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 3220,
        "wires": []
    },
    {
        "id": "ee0a41c3e261db60",
        "type": "switch",
        "z": "2c4527dad914ec1c",
        "g": "f4492470635578ae",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "SUCCESS",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1830,
        "y": 3220,
        "wires": [
            [
                "0e58817144b122ca",
                "d43cbcb95adf6c56"
            ],
            [
                "1f9e9253f0f4ed09"
            ]
        ]
    },
    {
        "id": "3758841ab014d3be",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "c3cc3bc6b0b0ab38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "event_id",
                "pt": "msg",
                "to": "\"eee\" & payload.data[0].id",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 1060,
        "wires": [
            [
                "5301adb11c7b2c3a"
            ]
        ]
    },
    {
        "id": "866256d61e7910ed",
        "type": "switch",
        "z": "2c4527dad914ec1c",
        "g": "cf3f4fcb8dc2573a",
        "name": "",
        "property": "event_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "eee",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3370,
        "y": 420,
        "wires": [
            [
                "2a5f44b8d1cb431c"
            ],
            [
                "6e441cc056e5c53b"
            ]
        ]
    },
    {
        "id": "1f36f70c88f794b2",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "cf3f4fcb8dc2573a",
        "name": "store result",
        "rules": [
            {
                "t": "set",
                "p": "created_event",
                "pt": "msg",
                "to": "payload.data",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "description",
                "pt": "msg",
                "to": "\"<h5>An Initial Event already exist for study \" & \"<a href=\\\"https://\" & req.cookies.vault_domain & \"/ui/#t/0TB000000000B26/0CT/\" & study_id & \"\\\" target=\\\"_blank\\\"\"&\"\\\">\" & study.name__v & \"</a><br><br></h5> \"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4050,
        "y": 400,
        "wires": [
            [
                "6e441cc056e5c53b"
            ]
        ]
    },
    {
        "id": "2a5f44b8d1cb431c",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "cf3f4fcb8dc2573a",
        "name": "query existing event",
        "rules": [
            {
                "t": "set",
                "p": "event_id",
                "pt": "msg",
                "to": "$substringAfter(event_id,\"eee\")",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v from event__rim where id='\" & event_id & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3640,
        "y": 400,
        "wires": [
            [
                "6d6546d966b508bd"
            ]
        ]
    },
    {
        "id": "6d6546d966b508bd",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "cf3f4fcb8dc2573a",
        "name": "",
        "x": 3870,
        "y": 400,
        "wires": [
            [
                "1f36f70c88f794b2"
            ],
            [
                "e2bbf68093902dd8"
            ]
        ]
    },
    {
        "id": "29d6cf22180fb772",
        "type": "switch",
        "z": "2c4527dad914ec1c",
        "g": "e1b7d81d3cd06a62",
        "name": "",
        "property": "event_keywords_string",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 110,
        "y": 2420,
        "wires": [
            [
                "5a37f175503d5345"
            ],
            [
                "1c245cad2a9ec068"
            ]
        ]
    },
    {
        "id": "5a37f175503d5345",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "e1b7d81d3cd06a62",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "event_keywords_name",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 2420,
        "wires": [
            [
                "787961bfe48f9c3f",
                "83cd95335c63883a"
            ]
        ]
    },
    {
        "id": "83cd95335c63883a",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "e1b7d81d3cd06a62",
        "name": "debug 428",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 2420,
        "wires": []
    },
    {
        "id": "45d06b2c211d3315",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "0342ae8990d4e5d0",
        "name": "set msg.application_types",
        "rules": [
            {
                "t": "set",
                "p": "application_types",
                "pt": "msg",
                "to": "$distinct(payload.data).{\t   \"country_id\": country__rim,\t   \"country_name\": `country__rimr.name__v`,\t   \"country_code\": `country__rimr.country_code__rim`,\t   \"region_id\": region__rim,\t   \"region_name\": `region__rimr.name__v`,\t   \"application_type_id\": cv_1__rim,\t   \"application_type\": `cv_1__rimr.name__v`\t} ~> $filter(function($v) {\t    $v.region_name = \"European Union\" and $v.application_type != \"CTA Directive\" and $v.application_type != \"Paediatric Investigation Plan (PIP)\" and $v.application_type != \"Orphan Drug Designation Application\"or\t    $v.country_name = \"United States\" and $v.application_type = \"Investigational New Drug (IND)\" or\t    $v.region_name != \"European Union\" and $v.country_name != \"United States\" and $v.application_type != \"Paediatric Investigation Plan (PIP)\"\t})",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "full_application_types",
                "pt": "msg",
                "to": "application_types[country_id=null]\t/* Replace null countries with a list of all countries in that region */\t~> $map(function($t) {$.countries[region_id=$t.region_id] ~> $map(function($c) {$merge([$t,$c])})})\t/* Reduce list of lists to single list */\t~> $reduce(function($i, $v) { $append($i, $v) })\t/* Join with non-null countries */\t~> $append(application_types[country_id!=null])\t/* Filter out already existing applications */\t/* by using the Countries in Lead Country*/\t~> $filter(function($v) {$count(applications[lead_market__rim=$v.country_id and application_type__rim=$v.application_type_id])=0})\t/* by using the Countries in Application Country join*/\t~> $filter(function($v) {$count(application_countries[country__rim=$v.country_id and `application__rimr.application_type__rim`=$v.application_type_id])=0})\t/* Filter out Common (EU) and Common (GCC) */\t~> $filter(function($v) {$v.country_name != \"Common (EU)\" and $v.country_name != \"Common (GCC)\"})\t/* Sort by name */\t~> $sort(function($l, $r) {$l.country_name > $r.country_name})\t/* Remove duplicates */\t~> $distinct()",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1870,
        "y": 1700,
        "wires": [
            [
                "8f7f5b7af1e523e8",
                "97b53a3a8dd09761"
            ]
        ]
    },
    {
        "id": "62640940a60a1f05",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "create submissions",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"submission__v\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "applications.{\t   \"name__v\": $$.event.name__v & ' - ' & $substringBefore(name__v, \" -\"),\t   \"description__v\": $length($$.event.event_description__c) > 500 ? $substring($$.event.event_description__c,0,497) & \"...\" : $$.event.event_description__c,\t   \"application__v\": id,\t   \"object_type__vr.api_name__v\": \"investigational_submission__c\",\t   \"submission_type__rimr.name__v\": \"*Placeholder - Please Update*\"\t}[]\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3190,
        "y": 2300,
        "wires": [
            [
                "a77d51b53d8a6f23"
            ]
        ]
    },
    {
        "id": "898365ea0e27f9fa",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "store result",
        "rules": [
            {
                "t": "set",
                "p": "submission_ids",
                "pt": "msg",
                "to": "payload.data[responseStatus=\"SUCCESS\"].data.id[]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3670,
        "y": 2300,
        "wires": [
            [
                "fd61c358f16a025d",
                "f58d0bb835412fc4"
            ]
        ]
    },
    {
        "id": "fd61c358f16a025d",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "query submissions",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v from submission__v where \" & (submission_ids ~> $map(function($v) {\"id='\" & $v & \"'\"}) ~> $join(\" OR \"))",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3190,
        "y": 2360,
        "wires": [
            [
                "c871db4946297902"
            ]
        ]
    },
    {
        "id": "9398e7263bf82b17",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "store result",
        "rules": [
            {
                "t": "set",
                "p": "submissions",
                "pt": "msg",
                "to": "payload.data",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3670,
        "y": 2360,
        "wires": [
            [
                "b4d75ca5d1862d0d",
                "3a5fef5ba445dca6"
            ]
        ]
    },
    {
        "id": "b4d75ca5d1862d0d",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "link to products",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"submission_pharmaceutical_product__rim\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[\t    submissions ~> $map(\t       function($submission) {\t           study.clinical_study_products__cr.data.{\t               \"submission__rim\": $submission.id,\t               \"pharmaceutical_product__rim\": product__c,\t               \"product_detail__rim\": product_variant__c\t        }\t    }\t    ) ~> $reduce(\t       function($accumulator, $value) {$append($accumulator, $value)}\t    )\t]",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3180,
        "y": 2420,
        "wires": [
            [
                "14be5b3467d426ef"
            ]
        ]
    },
    {
        "id": "19b4e65ee7032903",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "link to study",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"submission_clinical_study__rim\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "submissions.{\t   \"submission__rim\": id,\t   \"clinical_study__rim\": $$.study_id\t}[]",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3170,
        "y": 2540,
        "wires": [
            [
                "857c942e1e147c0c"
            ]
        ]
    },
    {
        "id": "f58d0bb835412fc4",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3850,
        "y": 2300,
        "wires": []
    },
    {
        "id": "3a5fef5ba445dca6",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3850,
        "y": 2360,
        "wires": []
    },
    {
        "id": "8e82a3e29f089f62",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3850,
        "y": 2420,
        "wires": []
    },
    {
        "id": "7f14e480377ecb8f",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3850,
        "y": 2540,
        "wires": []
    },
    {
        "id": "a77d51b53d8a6f23",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "",
        "x": 3420,
        "y": 2300,
        "wires": [
            [
                "898365ea0e27f9fa"
            ],
            [
                "1b109bb176828d44"
            ]
        ]
    },
    {
        "id": "c871db4946297902",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "",
        "x": 3410,
        "y": 2360,
        "wires": [
            [
                "9398e7263bf82b17"
            ],
            [
                "1b109bb176828d44"
            ]
        ]
    },
    {
        "id": "14be5b3467d426ef",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "",
        "x": 3420,
        "y": 2420,
        "wires": [
            [
                "8e82a3e29f089f62",
                "675035dafe7624c4"
            ],
            [
                "1b109bb176828d44"
            ]
        ]
    },
    {
        "id": "1b109bb176828d44",
        "type": "link out",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "",
        "mode": "link",
        "links": [
            "0b4394d395558302"
        ],
        "x": 3645,
        "y": 2620,
        "wires": []
    },
    {
        "id": "857c942e1e147c0c",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "",
        "x": 3420,
        "y": 2540,
        "wires": [
            [
                "7f14e480377ecb8f",
                "9e1f9abf0b7f18c2"
            ],
            [
                "1b109bb176828d44"
            ]
        ]
    },
    {
        "id": "9e1f9abf0b7f18c2",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "link to indications",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"submission_indication__rim\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[\t    submissions ~> $map(function($submission) {\t       study.therapeutic_indication_clinical_studies__cr.data.{\t           \"indication__rim\": therapeutic_indication__c,\t           \"submission__rim\": $submission.id\t        }\t    }) ~> $reduce(function($accumulator, $value) {$append($accumulator, $value)})\t]",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3190,
        "y": 2600,
        "wires": [
            [
                "8d568405b4ec34f2"
            ]
        ]
    },
    {
        "id": "8d568405b4ec34f2",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "",
        "x": 3420,
        "y": 2600,
        "wires": [
            [
                "a951ef41ea04daa1",
                "38c9f670c6aad425"
            ],
            [
                "1b109bb176828d44"
            ]
        ]
    },
    {
        "id": "a951ef41ea04daa1",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3850,
        "y": 2600,
        "wires": []
    },
    {
        "id": "675035dafe7624c4",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "link to event",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"event_submission__rim\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "submissions.{\t   \"submission__rim\": id,\t   \"event__rim\": $$.event.id\t}[]",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3170,
        "y": 2480,
        "wires": [
            [
                "a6fdd8a4c088efcd"
            ]
        ]
    },
    {
        "id": "a6fdd8a4c088efcd",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "",
        "x": 3420,
        "y": 2480,
        "wires": [
            [
                "19b4e65ee7032903",
                "91c1fc453443a8e3"
            ],
            [
                "1b109bb176828d44"
            ]
        ]
    },
    {
        "id": "91c1fc453443a8e3",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3850,
        "y": 2480,
        "wires": []
    },
    {
        "id": "d8d634dbb1feb7f0",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "query event",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v, event_description__c, (select id, impd_version_nonquality_part__c, impd_version_quality_part__c, protocol_version__c, ib_version__c from event_clinical_studies__vr) from event__rim where object_type__vr.api_name__v = 'clinical_study_event__c' and applicable_product_type__v = 'drug__v'and keywords__c = 'clinical_initial_cta__c' and id in (select id from event_clinical_studies__vr where clinical_study__v='\" & study_id & \"')\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3170,
        "y": 2240,
        "wires": [
            [
                "2a00af4ef68684ee"
            ]
        ]
    },
    {
        "id": "2a00af4ef68684ee",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "",
        "x": 3410,
        "y": 2240,
        "wires": [
            [
                "b3093d1ee9de67e1"
            ],
            [
                "1b109bb176828d44"
            ]
        ]
    },
    {
        "id": "b3093d1ee9de67e1",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "event",
                "pt": "msg",
                "to": "payload.data[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3680,
        "y": 2240,
        "wires": [
            [
                "62640940a60a1f05",
                "71e04109ad804aa3"
            ]
        ]
    },
    {
        "id": "71e04109ad804aa3",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3850,
        "y": 2240,
        "wires": []
    },
    {
        "id": "b89f95ec9abb8084",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "query study",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v, study_alias__c, product__v, product__vr.name__v, (select id, name__v, product__c, product__cr.name__v, product_family__c, product_family__cr.name__v, product_variant__c, product_variant__cr.name__v from clinical_study_products__cr), (select id, name__v, therapeutic_indication__c, therapeutic_indication__cr.name__v from therapeutic_indication_clinical_studies__cr) from clinical_study__v where id='\" & study_id & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3410,
        "y": 2120,
        "wires": [
            [
                "f5854a7cc17c0aa7"
            ]
        ]
    },
    {
        "id": "f5854a7cc17c0aa7",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "",
        "x": 3670,
        "y": 2120,
        "wires": [
            [
                "9ef56b03101f70be"
            ],
            [
                "1b109bb176828d44"
            ]
        ]
    },
    {
        "id": "9ef56b03101f70be",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "study",
                "pt": "msg",
                "to": "payload.data[0]",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3880,
        "y": 2120,
        "wires": [
            [
                "9bf734a0d565b0b0"
            ]
        ]
    },
    {
        "id": "7827ec475b7c8da5",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3850,
        "y": 2180,
        "wires": []
    },
    {
        "id": "ceb33ad242526776",
        "type": "http in",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "",
        "url": "cta/create_records",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 3230,
        "y": 2000,
        "wires": [
            [
                "383eedb90d0b8b41"
            ]
        ]
    },
    {
        "id": "383eedb90d0b8b41",
        "type": "json",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "resp_full",
        "property": "payload.response_full",
        "action": "obj",
        "pretty": false,
        "x": 3440,
        "y": 2000,
        "wires": [
            [
                "521d70b563cc5942"
            ]
        ]
    },
    {
        "id": "521d70b563cc5942",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "store parameters",
        "rules": [
            {
                "t": "set",
                "p": "study_id",
                "pt": "msg",
                "to": "payload.study_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "applications",
                "pt": "msg",
                "to": "payload.response_full[]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "lead_country_string",
                "pt": "msg",
                "to": "payload.lead_country",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "cta-automation",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "event_id",
                "pt": "msg",
                "to": "payload.event_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "job.job_scope",
                "pt": "msg",
                "to": "payload.job_scope",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "job.job_type",
                "pt": "msg",
                "to": "payload.job_type",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "created_application_ids",
                "pt": "msg",
                "to": "payload.created_application_ids",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "created_event_id",
                "pt": "msg",
                "to": "payload.created_event_id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3690,
        "y": 2000,
        "wires": [
            [
                "618ef6d8cb29ffce"
            ]
        ]
    },
    {
        "id": "618ef6d8cb29ffce",
        "type": "brave-login",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "",
        "x": 3850,
        "y": 2000,
        "wires": [
            [
                "09d4586254506745"
            ],
            [
                "1b109bb176828d44"
            ]
        ]
    },
    {
        "id": "09d4586254506745",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "parse Application",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "applications",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3190,
        "y": 2060,
        "wires": [
            [
                "b9ecf6ddd77ad675"
            ]
        ]
    },
    {
        "id": "b9ecf6ddd77ad675",
        "type": "split",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "for each Application",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3430,
        "y": 2060,
        "wires": [
            [
                "867650c5b98c06c8"
            ]
        ]
    },
    {
        "id": "867650c5b98c06c8",
        "type": "json",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "json to object",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 3670,
        "y": 2060,
        "wires": [
            [
                "119a9f972c38c24a"
            ]
        ]
    },
    {
        "id": "119a9f972c38c24a",
        "type": "join",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3850,
        "y": 2060,
        "wires": [
            [
                "a2813cb05abc95ed"
            ]
        ]
    },
    {
        "id": "a2813cb05abc95ed",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "applications",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3200,
        "y": 2120,
        "wires": [
            [
                "b89f95ec9abb8084"
            ]
        ]
    },
    {
        "id": "9bf734a0d565b0b0",
        "type": "switch",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "",
        "property": "job.job_type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3150,
        "y": 2180,
        "wires": [
            [
                "d8d634dbb1feb7f0"
            ],
            [
                "bfecddb23cb14652"
            ]
        ]
    },
    {
        "id": "bfecddb23cb14652",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "4a932e6034254d18",
        "name": "query event",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v, event_description__c, (select id, impd_version_nonquality_part__c, impd_version_quality_part__c, protocol_version__c, ib_version__c from event_clinical_studies__vr) from event__rim where id='\" & event_id & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3410,
        "y": 2180,
        "wires": [
            [
                "2a00af4ef68684ee",
                "7827ec475b7c8da5"
            ]
        ]
    },
    {
        "id": "e92dbdab8eb4e6f5",
        "type": "http response",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 3610,
        "y": 1840,
        "wires": []
    },
    {
        "id": "3575399d43c70958",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "set fields for input form",
        "rules": [
            {
                "t": "set",
                "p": "title",
                "pt": "msg",
                "to": "\"Creating records for Study \" & study.name__v & \" \" & study.study_alias__c",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "type",
                "pt": "msg",
                "to": "checkbox",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "description",
                "pt": "msg",
                "to": "Please select the Applications for which RO and Submission would be created.",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "tableheader",
                "pt": "msg",
                "to": "{\"columns\":[\"Application Name\",\"Lead Country\",\"Created Date\"]}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "dataarray",
                "pt": "msg",
                "to": "applications.{\t   \"selection\": $string(),\t   \"columns\": \t   [\t       name__v, \t       lead_market__rimr.data[0].name__v,\t       created_date__v\t       ]\t}",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "flow",
                "pt": "msg",
                "to": "nodes/cta/create_records",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hiddenfields",
                "pt": "msg",
                "to": "[\t   {\t       \"name\": \"study_id\",\t       \"value\": study_id\t    },\t    {\t        \"name\": \"job_type\",\t        \"value\": job.job_type\t    },\t    {\t        \"name\": \"job_scope\",\t        \"value\": job.job_scope\t    },\t    {\t        \"name\": \"event_id\",\t        \"value\": event_id\t    },\t    {\t        \"name\": \"created_application_ids\",\t        \"value\": created_application_ids\t    },\t    {\t        \"name\": \"created_event_id\",\t        \"value\": created_event_id\t    }\t]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3180,
        "y": 1840,
        "wires": [
            [
                "c229575af81a577a"
            ]
        ]
    },
    {
        "id": "c229575af81a577a",
        "type": "brave-input-form",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "",
        "x": 3450,
        "y": 1840,
        "wires": [
            [
                "e92dbdab8eb4e6f5"
            ]
        ]
    },
    {
        "id": "6ee4c82e5bbdfb64",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "query applications",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v, lead_market__rim, (select name__v, region__v, reporting_region__c from lead_market__rimr), created_date__v from application__v where id in (select application__c from application_clinical_studies__cr where clinical_study__c='\" & study_id & \"') and state__v='active_state__c'\" & app_filter",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3170,
        "y": 1720,
        "wires": [
            [
                "baa100f75a1bdf83"
            ]
        ]
    },
    {
        "id": "baa100f75a1bdf83",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "",
        "x": 3450,
        "y": 1720,
        "wires": [
            [
                "69e9f2c548c72906"
            ],
            [
                "0acb4f725a0b3b4d"
            ]
        ]
    },
    {
        "id": "69e9f2c548c72906",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "applications",
                "pt": "msg",
                "to": "payload.data",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3660,
        "y": 1720,
        "wires": [
            [
                "dbb0938eb77fb439",
                "c5fde75660caf0e0"
            ]
        ]
    },
    {
        "id": "dbb0938eb77fb439",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3850,
        "y": 1720,
        "wires": []
    },
    {
        "id": "b1d50aba3ccae290",
        "type": "http in",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "",
        "url": "cta/app_for_records",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 3210,
        "y": 1400,
        "wires": [
            [
                "6f594307a0362067"
            ]
        ]
    },
    {
        "id": "b29bd3b6b73fa3f4",
        "type": "brave-login",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "",
        "x": 3850,
        "y": 1460,
        "wires": [
            [
                "368a237cb3da03f4"
            ],
            [
                "0acb4f725a0b3b4d"
            ]
        ]
    },
    {
        "id": "c5fde75660caf0e0",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "query applications",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select application__v from submission__v where id in (select submission__rim from event_submissions__rimr where event__rim='\" & event_id & \"')\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3170,
        "y": 1780,
        "wires": [
            [
                "8ea7bea18c3a37ec"
            ]
        ]
    },
    {
        "id": "8ea7bea18c3a37ec",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "",
        "x": 3450,
        "y": 1780,
        "wires": [
            [
                "3e3267b7bf950552"
            ],
            [
                "0acb4f725a0b3b4d"
            ]
        ]
    },
    {
        "id": "3e3267b7bf950552",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "applications",
                "pt": "msg",
                "to": "applications\t~> $filter(function($v){$not($v.id in payload.data.application__v)})",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3660,
        "y": 1780,
        "wires": [
            [
                "3575399d43c70958",
                "8f6dbe66602cd363"
            ]
        ]
    },
    {
        "id": "8f6dbe66602cd363",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3850,
        "y": 1780,
        "wires": []
    },
    {
        "id": "6f594307a0362067",
        "type": "json",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "resp_full",
        "property": "payload.response_full",
        "action": "obj",
        "pretty": false,
        "x": 3440,
        "y": 1400,
        "wires": [
            [
                "d224372d0f77adba"
            ]
        ]
    },
    {
        "id": "d224372d0f77adba",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "store parameters",
        "rules": [
            {
                "t": "set",
                "p": "study_id",
                "pt": "msg",
                "to": "payload.study_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "created_application_ids",
                "pt": "msg",
                "to": "payload.created_application_ids",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "created_event_id",
                "pt": "msg",
                "to": "payload.created_event_id",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "cta-automation",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "event_id",
                "pt": "msg",
                "to": "$filter (payload.event_id, function ($v) { $v != \"\" })",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "job.job_scope",
                "pt": "msg",
                "to": "payload.job_scope",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "job.job_type",
                "pt": "msg",
                "to": "payload.job_type",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ro_type",
                "pt": "msg",
                "to": "payload.response_full[]",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3670,
        "y": 1400,
        "wires": [
            [
                "9e24def7b8e1ed20"
            ]
        ]
    },
    {
        "id": "9e24def7b8e1ed20",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ro_type",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3880,
        "y": 1400,
        "wires": [
            [
                "56bb3f2ede4357d3"
            ]
        ]
    },
    {
        "id": "56bb3f2ede4357d3",
        "type": "split",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "for RO Type",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3150,
        "y": 1460,
        "wires": [
            [
                "63b1e190539c60d6"
            ]
        ]
    },
    {
        "id": "63b1e190539c60d6",
        "type": "json",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "json to object",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 3330,
        "y": 1460,
        "wires": [
            [
                "2d30c1a1b88ffd77"
            ]
        ]
    },
    {
        "id": "2d30c1a1b88ffd77",
        "type": "join",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3510,
        "y": 1460,
        "wires": [
            [
                "9e67043bce8e07ce"
            ]
        ]
    },
    {
        "id": "9e67043bce8e07ce",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ro_type",
                "pt": "msg",
                "to": "payload[0].ID",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "ro_region",
                "pt": "msg",
                "to": "payload[0].Region",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3680,
        "y": 1460,
        "wires": [
            [
                "b29bd3b6b73fa3f4"
            ]
        ]
    },
    {
        "id": "0acb4f725a0b3b4d",
        "type": "link out",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "",
        "mode": "link",
        "links": [
            "0b4394d395558302"
        ],
        "x": 3995,
        "y": 1780,
        "wires": []
    },
    {
        "id": "368a237cb3da03f4",
        "type": "switch",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "check RO Type region",
        "property": "ro_region",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "EU",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Non-EU",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Japan",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "United States",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "All Region",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 3180,
        "y": 1560,
        "wires": [
            [
                "f7b29bb7055e0a74"
            ],
            [
                "f2ae517ed12d39ef"
            ],
            [
                "a1ea860eacff14bf"
            ],
            [
                "6b4365514871b2fa"
            ],
            [
                "acbf802c7351198d"
            ]
        ]
    },
    {
        "id": "f7b29bb7055e0a74",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "app filter - EU",
        "rules": [
            {
                "t": "set",
                "p": "app_filter",
                "pt": "msg",
                "to": " and lead_market__rimr.region__v='00R000000000102'",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3440,
        "y": 1500,
        "wires": [
            [
                "6ee4c82e5bbdfb64"
            ]
        ]
    },
    {
        "id": "f2ae517ed12d39ef",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "app filter - Non-EU",
        "rules": [
            {
                "t": "set",
                "p": "app_filter",
                "pt": "msg",
                "to": " and lead_market__rimr.region__v!='00R000000000102'",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3450,
        "y": 1540,
        "wires": [
            [
                "6ee4c82e5bbdfb64"
            ]
        ]
    },
    {
        "id": "6b4365514871b2fa",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "app filter - US",
        "rules": [
            {
                "t": "set",
                "p": "app_filter",
                "pt": "msg",
                "to": " and lead_market__rim='00C000000000752'",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3440,
        "y": 1620,
        "wires": [
            [
                "6ee4c82e5bbdfb64"
            ]
        ]
    },
    {
        "id": "a1ea860eacff14bf",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "app filter - JP",
        "rules": [
            {
                "t": "set",
                "p": "app_filter",
                "pt": "msg",
                "to": " and lead_market__rim='00C000000000808'",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3430,
        "y": 1580,
        "wires": [
            [
                "6ee4c82e5bbdfb64"
            ]
        ]
    },
    {
        "id": "acbf802c7351198d",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "eb7523f05c7170f0",
        "name": "app filter - all",
        "rules": [
            {
                "t": "set",
                "p": "app_filter",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3430,
        "y": 1660,
        "wires": [
            [
                "6ee4c82e5bbdfb64"
            ]
        ]
    },
    {
        "id": "da23fd7381dc1b26",
        "type": "link in",
        "z": "2c4527dad914ec1c",
        "g": "0cad5663dc4721fe",
        "name": "link in 8",
        "links": [
            "4b8eadec1c5671af"
        ],
        "x": 3095,
        "y": 820,
        "wires": [
            [
                "574a5630803b0224"
            ]
        ]
    },
    {
        "id": "f6ab8aa482d9d67f",
        "type": "http response",
        "z": "2c4527dad914ec1c",
        "g": "0cad5663dc4721fe",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 3790,
        "y": 980,
        "wires": []
    },
    {
        "id": "b6c6c4bc76a4ba53",
        "type": "brave-input-form",
        "z": "2c4527dad914ec1c",
        "g": "0cad5663dc4721fe",
        "name": "",
        "x": 3590,
        "y": 980,
        "wires": [
            [
                "f6ab8aa482d9d67f"
            ]
        ]
    },
    {
        "id": "0181e70f2a18599b",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "0cad5663dc4721fe",
        "name": "query event",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v, brave_event_code__cr.name__v, event_description__c, keywords__c, state__v from event__rim where object_type__vr.api_name__v = 'clinical_study_event__c' and applicable_product_type__v = 'drug__v'and keywords__c != 'clinical_initial_cta__c' and id in (select id from event_clinical_studies__vr where clinical_study__v='\" & study_id & \"') and state__v != 'inactive_state__c' and state__v != 'cancelled_state__c'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3410,
        "y": 880,
        "wires": [
            [
                "6d26ea123b445cc9"
            ]
        ]
    },
    {
        "id": "6d26ea123b445cc9",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "0cad5663dc4721fe",
        "name": "",
        "x": 3590,
        "y": 900,
        "wires": [
            [
                "70be352a47eee3c5"
            ],
            [
                "e2bbf68093902dd8"
            ]
        ]
    },
    {
        "id": "8985a769a95830ae",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "0cad5663dc4721fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "events",
                "pt": "msg",
                "to": "payload.data",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "event",
                "pt": "msg",
                "to": "payload.data.{\t    \"event_id\": id,\t   \"event_name\": name__v,\t   \"rec\": `brave_event_code__cr.name__v` != null ? `brave_event_code__cr.name__v` : \"N/A\",\t   \"event_description\": event_description__c,\t   \"keyword\": $reduce(keywords__c[]@$kw.[$$.event_keyword[Name=$kw].Title],function($i,$j){$i & \",\" & $j}) != null ? $reduce(keywords__c[]@$kw.[$$.event_keyword[Name=$kw].Title],function($i,$j){$i & \",\" & $j}) : \"N/A\"\t\t}\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4060,
        "y": 900,
        "wires": [
            [
                "a1def3152347a0c1",
                "26a7680b9a307992"
            ]
        ]
    },
    {
        "id": "a1def3152347a0c1",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "0cad5663dc4721fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4230,
        "y": 900,
        "wires": []
    },
    {
        "id": "26a7680b9a307992",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "0cad5663dc4721fe",
        "name": "set fields for input form",
        "rules": [
            {
                "t": "set",
                "p": "title",
                "pt": "msg",
                "to": "\"Creating records for Study \" & study.name__v & \" \" & study.study_alias__c",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "type",
                "pt": "msg",
                "to": "radio",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "description",
                "pt": "msg",
                "to": "Please select the Event for which records would be created",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "tableheader",
                "pt": "msg",
                "to": "{\"columns\":[\"Event Name\",\"Regulatory Event Code\",\"Keywords\",\"Description\"]}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "dataarray",
                "pt": "msg",
                "to": "event.{\t   \"selection\": $string(),\t   \"columns\": \t   [\t       event_name,\t       rec,\t       keyword,\t       event_description\t    ]\t}",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "flow",
                "pt": "msg",
                "to": "nodes/cta/ro_type",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hiddenfields",
                "pt": "msg",
                "to": "[\t   {\t       \"name\": \"study_id\",\t       \"value\": study_id\t    },\t    {\t        \"name\": \"job_type\",\t        \"value\": job.job_type\t    },\t    {\t        \"name\": \"job_scope\",\t        \"value\": job.job_scope\t    },\t    {\t        \"name\": \"created_event_id\",\t        \"value\": created_event_id\t    },\t    {\t        \"name\": \"created_application_ids\",\t        \"value\": created_application_ids\t    }\t\t]\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3300,
        "y": 980,
        "wires": [
            [
                "b6c6c4bc76a4ba53"
            ]
        ]
    },
    {
        "id": "e2bbf68093902dd8",
        "type": "link out",
        "z": "2c4527dad914ec1c",
        "g": "0cad5663dc4721fe",
        "name": "",
        "mode": "link",
        "links": [
            "0b4394d395558302"
        ],
        "x": 4255,
        "y": 980,
        "wires": []
    },
    {
        "id": "70be352a47eee3c5",
        "type": "switch",
        "z": "2c4527dad914ec1c",
        "g": "0cad5663dc4721fe",
        "name": "If any event exists",
        "property": "$count(payload.data)!=0",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3830,
        "y": 900,
        "wires": [
            [
                "8985a769a95830ae"
            ],
            [
                "6134dde92e85f832"
            ]
        ]
    },
    {
        "id": "6134dde92e85f832",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "0cad5663dc4721fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.errors",
                "pt": "msg",
                "to": "[\t   {\t       \"type\":\"Incomplete Data\",\t       \"message\":\"The study has no existing Event. Please confirm.\"\t   }\t]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4080,
        "y": 980,
        "wires": [
            [
                "e2bbf68093902dd8"
            ]
        ]
    },
    {
        "id": "6e512e1221e08cb3",
        "type": "switch",
        "z": "2c4527dad914ec1c",
        "g": "0cad5663dc4721fe",
        "name": "",
        "property": "job.job_type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3250,
        "y": 900,
        "wires": [
            [
                "0181e70f2a18599b"
            ],
            [
                "55f7361f6ff3d3c0"
            ]
        ]
    },
    {
        "id": "55f7361f6ff3d3c0",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "0cad5663dc4721fe",
        "name": "query event",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v, brave_event_code__cr.name__v, event_description__c, keywords__c from event__rim where object_type__vr.api_name__v = 'clinical_study_event__c' and applicable_product_type__v = 'drug__v'and keywords__c = 'clinical_initial_cta__c' and id in (select id from event_clinical_studies__vr where clinical_study__v='\" & study_id & \"')\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3410,
        "y": 920,
        "wires": [
            [
                "6d26ea123b445cc9"
            ]
        ]
    },
    {
        "id": "f41e2e7c203bbd25",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "0cad5663dc4721fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "event_keyword",
                "pt": "msg",
                "to": "payload[0].event_keywords",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3850,
        "y": 820,
        "wires": [
            [
                "6e512e1221e08cb3",
                "be3c6ef4855d08d7"
            ]
        ]
    },
    {
        "id": "574a5630803b0224",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "0cad5663dc4721fe",
        "name": "Retrieve configs in BRAVE",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t    \"settings_name\":\"cta_record_creation\",\t    \"attachment_name\":\"cta_creation_config.json\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3320,
        "y": 820,
        "wires": [
            [
                "aa6b891b0c5003f6"
            ]
        ]
    },
    {
        "id": "aa6b891b0c5003f6",
        "type": "subflow:fca036ab5aa23301",
        "z": "2c4527dad914ec1c",
        "g": "0cad5663dc4721fe",
        "name": "",
        "x": 3610,
        "y": 820,
        "wires": [
            [
                "f41e2e7c203bbd25"
            ],
            []
        ]
    },
    {
        "id": "be3c6ef4855d08d7",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "0cad5663dc4721fe",
        "name": "debug 427",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4210,
        "y": 820,
        "wires": []
    },
    {
        "id": "8de992bdd38f4d75",
        "type": "http response",
        "z": "2c4527dad914ec1c",
        "g": "2258a8ecc4d06406",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 3850,
        "y": 1280,
        "wires": []
    },
    {
        "id": "ea2ff3f91e64e1c8",
        "type": "brave-input-form",
        "z": "2c4527dad914ec1c",
        "g": "2258a8ecc4d06406",
        "name": "",
        "x": 3450,
        "y": 1280,
        "wires": [
            [
                "8de992bdd38f4d75"
            ]
        ]
    },
    {
        "id": "322b77670ebfbc73",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "2258a8ecc4d06406",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4110,
        "y": 1280,
        "wires": []
    },
    {
        "id": "6dae2eeabda1866b",
        "type": "http in",
        "z": "2c4527dad914ec1c",
        "g": "2258a8ecc4d06406",
        "name": "",
        "url": "/cta/ro_type",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 3190,
        "y": 1100,
        "wires": [
            [
                "35a584fdbbbf184c"
            ]
        ]
    },
    {
        "id": "e18582e1e6af8a27",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "2258a8ecc4d06406",
        "name": "set fields for input form",
        "rules": [
            {
                "t": "set",
                "p": "title",
                "pt": "msg",
                "to": "Please define the Regulatory Objective Type",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "type",
                "pt": "msg",
                "to": "radio",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "description",
                "pt": "msg",
                "to": "\"for Study \" & study.name__v & \" \" & study.study_alias__c",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "tableheader",
                "pt": "msg",
                "to": "{\"columns\":[\"Type\",\"Applicable region\"]}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "dataarray",
                "pt": "msg",
                "to": "RO_type.{\t   \"selection\": $string(),\t   \"columns\": [\t       Type,\t       Region\t   ]\t}",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "flow",
                "pt": "msg",
                "to": "nodes/cta/app_for_records",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hiddenfields",
                "pt": "msg",
                "to": "[\t   {\t       \"name\": \"study_id\",\t       \"value\": study_id\t    },\t    {\t       \"name\": \"lead_country\",\t       \"value\": $string(lead_country)\t    },\t    {\t        \"name\": \"job_type\",\t        \"value\": job.job_type\t    },\t    {\t        \"name\": \"job_scope\",\t        \"value\": job.job_scope\t    },\t    {\t        \"name\": \"created_event_id\",\t        \"value\": created_event_id\t    },\t    {\t        \"name\": \"created_application_ids\",\t        \"value\": created_application_ids\t    },\t    {\t        \"name\": \"event_id\",\t        \"value\": event_id\t    }\t\t]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3180,
        "y": 1280,
        "wires": [
            [
                "ea2ff3f91e64e1c8",
                "322b77670ebfbc73"
            ]
        ]
    },
    {
        "id": "48df2f80a99d8b29",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "2258a8ecc4d06406",
        "name": "parse Event",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "event",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3870,
        "y": 1100,
        "wires": [
            [
                "4034cdfe618d83a5",
                "d4315b2a2c87f603"
            ]
        ]
    },
    {
        "id": "35a584fdbbbf184c",
        "type": "json",
        "z": "2c4527dad914ec1c",
        "g": "2258a8ecc4d06406",
        "name": "resp_full",
        "property": "payload.response_full",
        "action": "obj",
        "pretty": false,
        "x": 3440,
        "y": 1100,
        "wires": [
            [
                "bdd066564c6ce95f"
            ]
        ]
    },
    {
        "id": "bdd066564c6ce95f",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "2258a8ecc4d06406",
        "name": "Store parameters",
        "rules": [
            {
                "t": "set",
                "p": "study_id",
                "pt": "msg",
                "to": "payload.study_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "cta-automation",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "event_id",
                "pt": "msg",
                "to": "payload.event_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "job.job_type",
                "pt": "msg",
                "to": "payload.job_type",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "job.job_scope",
                "pt": "msg",
                "to": "payload.job_scope",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "event",
                "pt": "msg",
                "to": "payload.response_full[0]",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "created_event_id",
                "pt": "msg",
                "to": "payload.created_event_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "created_application_ids",
                "pt": "msg",
                "to": "payload.created_application_ids",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3650,
        "y": 1100,
        "wires": [
            [
                "48df2f80a99d8b29"
            ]
        ]
    },
    {
        "id": "627236e68743463c",
        "type": "json",
        "z": "2c4527dad914ec1c",
        "g": "2258a8ecc4d06406",
        "name": "json to object",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 3450,
        "y": 1160,
        "wires": [
            [
                "e7d6e3c82350409a"
            ]
        ]
    },
    {
        "id": "4034cdfe618d83a5",
        "type": "split",
        "z": "2c4527dad914ec1c",
        "g": "2258a8ecc4d06406",
        "name": "Event",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3130,
        "y": 1160,
        "wires": [
            [
                "627236e68743463c"
            ]
        ]
    },
    {
        "id": "e7d6e3c82350409a",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "2258a8ecc4d06406",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "event",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "event_id",
                "pt": "msg",
                "to": "payload.event_id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3640,
        "y": 1160,
        "wires": [
            [
                "364df53d72877480"
            ]
        ]
    },
    {
        "id": "d4315b2a2c87f603",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "2258a8ecc4d06406",
        "name": "debug 407",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4130,
        "y": 1100,
        "wires": []
    },
    {
        "id": "364df53d72877480",
        "type": "brave-login",
        "z": "2c4527dad914ec1c",
        "g": "2258a8ecc4d06406",
        "name": "",
        "x": 3850,
        "y": 1160,
        "wires": [
            [
                "0d1633a753414cdd"
            ],
            []
        ]
    },
    {
        "id": "0d1633a753414cdd",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "2258a8ecc4d06406",
        "name": "Retrieve configs in BRAVE",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t    \"settings_name\":\"cta_record_creation\",\t    \"attachment_name\":\"cta_creation_config.json\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3200,
        "y": 1220,
        "wires": [
            [
                "816f8fd43db06c24"
            ]
        ]
    },
    {
        "id": "816f8fd43db06c24",
        "type": "subflow:fca036ab5aa23301",
        "z": "2c4527dad914ec1c",
        "g": "2258a8ecc4d06406",
        "name": "",
        "x": 3470,
        "y": 1220,
        "wires": [
            [
                "2d01b3958155921c"
            ],
            [
                "e2bbf68093902dd8"
            ]
        ]
    },
    {
        "id": "2d01b3958155921c",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "2258a8ecc4d06406",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "RO_type",
                "pt": "msg",
                "to": "payload[0].ro_type",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3890,
        "y": 1220,
        "wires": [
            [
                "e18582e1e6af8a27",
                "9828977331cdadbe"
            ]
        ]
    },
    {
        "id": "9828977331cdadbe",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "2258a8ecc4d06406",
        "name": "debug 425",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4130,
        "y": 1220,
        "wires": []
    },
    {
        "id": "ea8fd3395ae5fd49",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "create ros",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"regulatory_objective__rim\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "applications.{\t   \"name__v\": $$.event.name__v & ' - ' & $substringBefore(name__v, \" -\"),\t   \"description_of_change__rim\": $$.event.event_description__c,\t   \"application__rim\": id,\t   \"object_type__vr.api_name__v\": \"investigational_regulatory_objective__c\",\t   \"safetyrelated__c\": \"no__c\",\t   \"regulatory_objective_type_global__c\": $$.ro_type\t}[]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3160,
        "y": 2800,
        "wires": [
            [
                "d054a08aba76294a"
            ]
        ]
    },
    {
        "id": "ea3dfeb51546e24a",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "store result",
        "rules": [
            {
                "t": "set",
                "p": "ro_ids",
                "pt": "msg",
                "to": "payload.data[responseStatus=\"SUCCESS\"].data.id[]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3650,
        "y": 2800,
        "wires": [
            [
                "449abf85b0dfeb5a",
                "f36d5ec80cec5d8f"
            ]
        ]
    },
    {
        "id": "7282d98b9aebfd65",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "link to products",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"regulatory_objective_drug_product__v\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[\t    ros ~> $map(\t       function($ro) {\t           study.clinical_study_products__cr.data.{\t               \"regulatory_objective__v\": $ro.id,\t               \"drug_product__v\": product__c,\t               \"product_detail__v\": product_variant__c\t        }\t    }\t    ) ~> $reduce(\t       function($accumulator, $value) {$append($accumulator, $value)}\t    )\t]",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3180,
        "y": 2920,
        "wires": [
            [
                "f44a6fefd13d1c10"
            ]
        ]
    },
    {
        "id": "449abf85b0dfeb5a",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "query ros",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v from regulatory_objective__rim where \" & (ro_ids ~> $map(function($v) {\"id='\" & $v & \"'\"}) ~> $join(\" OR \"))",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3160,
        "y": 2860,
        "wires": [
            [
                "33574cd26d86b730"
            ]
        ]
    },
    {
        "id": "4f666270c6fff25d",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "store result",
        "rules": [
            {
                "t": "set",
                "p": "ros",
                "pt": "msg",
                "to": "payload.data",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3650,
        "y": 2860,
        "wires": [
            [
                "7282d98b9aebfd65",
                "9104486cb4f058e0"
            ]
        ]
    },
    {
        "id": "dda0db44b7fc76a2",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "link to study",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"regulatory_objective_clinical_study__v\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ros.{\t   \"regulatory_objective__v\": id,\t   \"clinical_study__v\": $$.study_id,\t   \"impd_version_nonquality_part__c\": $$.event.event_clinical_studies__vr.data.impd_version_nonquality_part__c,\t   \"impd_version_quality_part__c\": $$.event.event_clinical_studies__vr.data.impd_version_quality_part__c,\t   \"protocol_version__c\": $$.event.event_clinical_studies__vr.data.protocol_version__c,\t   \"ib_version__c\": $$.event.event_clinical_studies__vr.data.ib_version__c\t}[]",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3170,
        "y": 3040,
        "wires": [
            [
                "dd1397594a408f05"
            ]
        ]
    },
    {
        "id": "92ab0d09bc0a2257",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "link to submissions",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"submission_regulatory_objective__v\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "submissions#$i.{\t   \"regulatory_objective__v\": $$.ros[$i].id,\t   \"submission__v\": id\t}[]",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3190,
        "y": 3100,
        "wires": [
            [
                "ac4deb9539f1fb55"
            ]
        ]
    },
    {
        "id": "50129e1a7a69e488",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3850,
        "y": 2740,
        "wires": []
    },
    {
        "id": "f36d5ec80cec5d8f",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3850,
        "y": 2800,
        "wires": []
    },
    {
        "id": "9104486cb4f058e0",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3850,
        "y": 2860,
        "wires": []
    },
    {
        "id": "acaa1af7a2c60d83",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3850,
        "y": 2920,
        "wires": []
    },
    {
        "id": "1a0e3c813639d7e8",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3850,
        "y": 3040,
        "wires": []
    },
    {
        "id": "38c9f670c6aad425",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "query ro type",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "select id from controlled_vocabulary__rim where controlled_vocabulary_type__rim = 'regulatory_objective_type_global__c' and name__v = 'New Clinical Trial' and status__v = 'active__v'",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3170,
        "y": 2740,
        "wires": [
            [
                "9e0fbc59446d769b"
            ]
        ]
    },
    {
        "id": "be244ca4d55bdd38",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "store result",
        "rules": [
            {
                "t": "set",
                "p": "ro_type",
                "pt": "msg",
                "to": "payload.data[0].id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3650,
        "y": 2740,
        "wires": [
            [
                "ea8fd3395ae5fd49",
                "50129e1a7a69e488"
            ]
        ]
    },
    {
        "id": "2e6605503e1d4370",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3850,
        "y": 3100,
        "wires": []
    },
    {
        "id": "9e0fbc59446d769b",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "",
        "x": 3410,
        "y": 2740,
        "wires": [
            [
                "be244ca4d55bdd38"
            ],
            [
                "275cac78bf29b682"
            ]
        ]
    },
    {
        "id": "d054a08aba76294a",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "",
        "x": 3420,
        "y": 2800,
        "wires": [
            [
                "ea3dfeb51546e24a"
            ],
            [
                "275cac78bf29b682"
            ]
        ]
    },
    {
        "id": "33574cd26d86b730",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "",
        "x": 3410,
        "y": 2860,
        "wires": [
            [
                "4f666270c6fff25d"
            ],
            [
                "275cac78bf29b682"
            ]
        ]
    },
    {
        "id": "f44a6fefd13d1c10",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "",
        "x": 3420,
        "y": 2920,
        "wires": [
            [
                "acaa1af7a2c60d83",
                "2fee73769422c35f"
            ],
            [
                "275cac78bf29b682"
            ]
        ]
    },
    {
        "id": "dd1397594a408f05",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "",
        "x": 3420,
        "y": 3040,
        "wires": [
            [
                "92ab0d09bc0a2257",
                "1a0e3c813639d7e8"
            ],
            [
                "275cac78bf29b682"
            ]
        ]
    },
    {
        "id": "275cac78bf29b682",
        "type": "link out",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "",
        "mode": "link",
        "links": [
            "0b4394d395558302"
        ],
        "x": 3605,
        "y": 2940,
        "wires": []
    },
    {
        "id": "ac4deb9539f1fb55",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "",
        "x": 3420,
        "y": 3100,
        "wires": [
            [
                "2e6605503e1d4370",
                "aa47eed378c684f0"
            ],
            [
                "275cac78bf29b682"
            ]
        ]
    },
    {
        "id": "aa47eed378c684f0",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "link to indications",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"regulatory_objective_indication__v\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[\t    ros ~> $map(function($ro) {\t       study.therapeutic_indication_clinical_studies__cr.data.{\t           \"indication__v\": therapeutic_indication__c,\t           \"regulatory_objective__v\": $ro.id\t        }\t    }) ~> $reduce(function($accumulator, $value) {$append($accumulator, $value)})\t]",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3190,
        "y": 3160,
        "wires": [
            [
                "991415f1a79cd20a"
            ]
        ]
    },
    {
        "id": "991415f1a79cd20a",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "",
        "x": 3420,
        "y": 3160,
        "wires": [
            [
                "f6465cef2e0631c0",
                "1ad0402c6eac4a81"
            ],
            [
                "275cac78bf29b682"
            ]
        ]
    },
    {
        "id": "f6465cef2e0631c0",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3850,
        "y": 3160,
        "wires": []
    },
    {
        "id": "2fee73769422c35f",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "link to event",
        "rules": [
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\t   \"object_name\": \"event_regulatory_objective__v\",\t   \"keep\": \"false\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ros.{\t   \"regulatory_objective__v\": id,\t   \"event__v\": $$.event.id\t}[]\t\t",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3170,
        "y": 2980,
        "wires": [
            [
                "a539cc3ec7312d9d"
            ]
        ]
    },
    {
        "id": "a539cc3ec7312d9d",
        "type": "brave-create-vobject",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "",
        "x": 3420,
        "y": 2980,
        "wires": [
            [
                "dda0db44b7fc76a2",
                "3d776d3161996ac6"
            ],
            [
                "275cac78bf29b682"
            ]
        ]
    },
    {
        "id": "3d776d3161996ac6",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "7dbb9c6933b0187b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3850,
        "y": 2980,
        "wires": []
    },
    {
        "id": "1ad0402c6eac4a81",
        "type": "link out",
        "z": "2c4527dad914ec1c",
        "g": "5e4f497cc3eacc9e",
        "name": "link out 10",
        "mode": "link",
        "links": [
            "c3df4ccf459db19f"
        ],
        "x": 3825,
        "y": 3240,
        "wires": []
    },
    {
        "id": "147046e7feeea1d8",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "fa41432bb855af38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"select id, name__v, application__c, application__cr.application_type__rim from application_clinical_study__c where application__cr.application_type__rim='A0V000000004004'\" & \"and clinical_study__c='\" & study_id & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 1020,
        "wires": [
            [
                "181528ce036da672"
            ]
        ]
    },
    {
        "id": "181528ce036da672",
        "type": "brave-vql-query",
        "z": "2c4527dad914ec1c",
        "g": "fa41432bb855af38",
        "name": "",
        "x": 1610,
        "y": 1020,
        "wires": [
            [
                "14f990ede77e57be",
                "0979b10c1cae59a9"
            ],
            [
                "ec46849d03dc97ee"
            ]
        ]
    },
    {
        "id": "14f990ede77e57be",
        "type": "switch",
        "z": "2c4527dad914ec1c",
        "g": "fa41432bb855af38",
        "name": "Check if CTR exists",
        "property": "$count(payload.data)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1630,
        "y": 1100,
        "wires": [
            [
                "877d493c814eb116"
            ],
            [
                "bc0df4977aee6128"
            ]
        ]
    },
    {
        "id": "bc0df4977aee6128",
        "type": "change",
        "z": "2c4527dad914ec1c",
        "g": "fa41432bb855af38",
        "name": "Select non-CTR directly",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"location\":\"/nodes/cta/ctd?study_id=\" & study_id & \"&created_event_id=\" & event_id & \"&job_type=\" & job.job_type & \"&job_scope=\" & job.job_scope\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "303",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1850,
        "y": 1140,
        "wires": [
            [
                "ac5f910b06d8544b"
            ]
        ]
    },
    {
        "id": "ac5f910b06d8544b",
        "type": "http response",
        "z": "2c4527dad914ec1c",
        "g": "fa41432bb855af38",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2070,
        "y": 1140,
        "wires": []
    },
    {
        "id": "db236dd4e340124a",
        "type": "http in",
        "z": "2c4527dad914ec1c",
        "g": "23b14172f95f39ef",
        "name": "",
        "url": "cta/ctd",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1350,
        "y": 1920,
        "wires": [
            [
                "959da61bde9bb8b0"
            ]
        ]
    },
    {
        "id": "0979b10c1cae59a9",
        "type": "debug",
        "z": "2c4527dad914ec1c",
        "g": "fa41432bb855af38",
        "name": "debug 477",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2090,
        "y": 1000,
        "wires": []
    },
    {
        "id": "8977e24d8855211f",
        "type": "split",
        "z": "3267d34c9be8d15b",
        "name": "Split Instruction Job",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 510,
        "y": 400,
        "wires": [
            [
                "2a6f4f878f1a1a40"
            ]
        ]
    },
    {
        "id": "27778e9b3445c87f",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "name": "nothing to process",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 170,
        "y": 1000,
        "wires": [
            [
                "aefed9d4c3ba03ad"
            ]
        ]
    },
    {
        "id": "9bece7d65c944b53",
        "type": "switch",
        "z": "3267d34c9be8d15b",
        "name": "instructions found?",
        "property": "$count(payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 190,
        "y": 400,
        "wires": [
            [
                "8977e24d8855211f"
            ],
            [
                "bc077f9d099bde63"
            ]
        ]
    },
    {
        "id": "764bb9beb8312077",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "38021b70803d451f",
        "name": "get automation configuration XLink Instruction objects",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"SELECT id, name__v\"\t&\" FROM automation_configuration__c\" \t&\" WHERE automation__c = 'Create XLink Instruction dummy_2' AND name__v like 'XLink%' AND status__v = 'active__v'\"\t",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "_log",
                "pt": "msg",
                "to": "[{\t   \"status\": \"unknown\",\t   \"action\": \"retrieve Instructions, query: \" & submit_query.query,\t   \"user_id\": create_xlink.instructions.vault.user_id\t}\t]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 340,
        "wires": [
            [
                "e505e2ef3046c9fe"
            ]
        ]
    },
    {
        "id": "b7519bf841fffd19",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "38021b70803d451f",
        "name": "Set payload to aray of XLink instructions",
        "rules": [
            {
                "t": "set",
                "p": "flow.instructions",
                "pt": "msg",
                "to": "payload.data",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "flow.instructions[]",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1740,
        "y": 340,
        "wires": [
            [
                "9bece7d65c944b53",
                "7b1a9eedbf6cea7a"
            ]
        ]
    },
    {
        "id": "b6ed57763abd8ea6",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "c6ebf848c0b01bb2",
        "name": "Set New Doc/Vers Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$join(\t    [\t        \"SELECT\", \t        (\t            $join(\t                $distinct(\t                    $append(\t                        [\t                            \"id\",\t                            \"name__v\",\t                            \"title__v\",\t                            \"version_id\",\t                            \"major_version_number__v\",\t                            \"minor_version_number__v\",\t                            \"version_modified_date__v\",\t                            \"subtype__v\",\t                            \"classification__v\",\t                            \"type__v\"\t                        ],\t                        flow.instruction.source.select\t                    )\t                ),\t                \", \"\t            )\t        ),\t        \"FROM ALLVERSIONS documents\",\t        \"WHERE crosslink__v = false\", \t        /*set the query interval between last run and now, shifted 1 Minute back to avoid any overlaps with ongoing write processes\t        use 1 second overlap between 2 runs to avoid any complications with potential rounding errors worst case an update would be processed twice*/\t        \"AND version_creation_date__v > '\" & $fromMillis(flow.instruction.last_run - 61000,'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].000Z') & \"'\",\t        \"AND version_creation_date__v < '\" & $fromMillis(flow.instruction.this_run - 60000,'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].000Z') & \"'\",\t        (flow.instruction.source.where?\"AND (\" & flow.instruction.source.where & \")\")\t    ], \" \"\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 820,
        "wires": [
            [
                "bfa3acf973ae3eca"
            ]
        ]
    },
    {
        "id": "0ba994d6e7a1b545",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "c6ebf848c0b01bb2",
        "name": "set new source docs/vers",
        "rules": [
            {
                "t": "set",
                "p": "flow.source",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "flow.source.doc_vers",
                "pt": "msg",
                "to": "payload.data@$d.\t    $merge([\t        $d, \t        {\"sort_version\":$d.major_version_number__v*10000+$d.minor_version_number__v,\t        \"query_source\": \"created\"}\t        ]\t    )\t",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1690,
        "y": 820,
        "wires": [
            [
                "164560a5ce4ae4cb",
                "7ade8842de9a7a64"
            ]
        ]
    },
    {
        "id": "8c09f2f654dcad02",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "2deb52da8866771f",
        "name": "set xlink.doc_vers",
        "rules": [
            {
                "t": "set",
                "p": "flow.xlink",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "flow.xlink.doc_vers",
                "pt": "msg",
                "to": "payload.data@$d.\t    $merge(\t        [\t            $d,\t            {\t                \"source_version_id\":$d.source_document_id__v&\"_\"&$d.bound_source_major_version__v&\"_\"&$d.bound_source_minor_version__v,\t                \"sort_version\": $d.major_version_number__v*10000 + $d.minor_version_number__v,\t                \"sort_bound_version\": $d.bound_source_major_version__v*10000 + $d.bound_source_minor_version__v\t            }\t        ]\t    )",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1670,
        "y": 1040,
        "wires": [
            [
                "75c9b4e7b1337120",
                "39a4c111cd0e502b"
            ]
        ]
    },
    {
        "id": "cfd7fb9f3bb507bc",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "ec7d72f3b34bb1b5",
        "name": "set array of objects",
        "rules": [
            {
                "t": "set",
                "p": "loop.objects",
                "pt": "msg",
                "to": "$lookup(flow.instruction, loop.vault).objects",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "loop.object_counter",
                "pt": "msg",
                "to": "$count(loop.objects)-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 1260,
        "wires": [
            [
                "161ca1539f716105"
            ]
        ]
    },
    {
        "id": "70b99aa11903a140",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "d36af2107dca85dd",
        "name": "set object name and fields",
        "rules": [
            {
                "t": "set",
                "p": "loop.object",
                "pt": "msg",
                "to": "loop.objects[$$.loop.object_counter]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "loop.fields",
                "pt": "msg",
                "to": "$distinct(\t   $append(\t       [\"id\",\"name__v\"],\t       (loop.object.fields[]?loop.object.fields[]:[])\t       )\t   )\t",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"SELECT \" & $join(loop.fields, \", \") &\t\" FROM \" & loop.object.object_name/*&\t\" WHERE modified_date__v > '\" & \t$fromMillis(last_run-60000, '[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].000Z') & \t\"'\"*/",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 1340,
        "wires": [
            [
                "8d79508e559979cf"
            ]
        ]
    },
    {
        "id": "c6c5d288b0d069c6",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "d36af2107dca85dd",
        "name": "set objects",
        "rules": [
            {
                "t": "move",
                "p": "payload.data",
                "pt": "msg",
                "to": "loop.result",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "loop.result",
                "pt": "msg",
                "to": "(\t   $upd_ids:= loop.result.id;\t   $append(\t       loop.redis_result.data[$not(id in $upd_ids)][], /*take those from redis source which have not been updated*/\t       loop.result[] /*append the updated*/\t   )\t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "loop.results",
                "pt": "msg",
                "to": "$merge(\t        [\t            loop.results,\t            {loop.object.object_name:loop.result}\t        ]\t    )\t",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "loop.updated",
                "pt": "msg",
                "to": "$boolean($count(loop.result))",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1830,
        "y": 1400,
        "wires": [
            [
                "e3f9fcdaf5c55e44",
                "a450771d6bf0134c"
            ]
        ]
    },
    {
        "id": "e9c9c43d84928588",
        "type": "switch",
        "z": "3267d34c9be8d15b",
        "name": "1. new doc \\n 2. update xlink \\n 3. approve xlink \\n 4. new version \\n 5. process unmatched \\n 6. done",
        "property": "true",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "jsonata_exp",
                "v": "$count(loop.new_sources) > 0",
                "vt": "jsonata"
            },
            {
                "t": "jsonata_exp",
                "v": "$count(loop.update_xlinks) > 0",
                "vt": "jsonata"
            },
            {
                "t": "jsonata_exp",
                "v": "$count(loop.approve_xlinks) > 0",
                "vt": "jsonata"
            },
            {
                "t": "jsonata_exp",
                "v": "$count(loop.new_versions) > 0",
                "vt": "jsonata"
            },
            {
                "t": "jsonata_exp",
                "v": "$count(loop.unmatched_xlinks) > 0",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 6,
        "x": 560,
        "y": 2840,
        "wires": [
            [
                "ddb8a98a06a740f2",
                "41ecf0ec3f5b2e10"
            ],
            [
                "f3c23d0d463d340b",
                "dee55638234b7123"
            ],
            [
                "5aa40a1026365147",
                "c207b4c9f2877a8d"
            ],
            [
                "95cbbe1ded2e087b",
                "752121345ec56b6a"
            ],
            [
                "36cb1c960b6626c9",
                "aefed9d4c3ba03ad"
            ],
            [
                "b360eaa961871022",
                "aefed9d4c3ba03ad"
            ]
        ]
    },
    {
        "id": "f548fc20fbf6a966",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "ec7d72f3b34bb1b5",
        "name": "update flow variable",
        "rules": [
            {
                "t": "set",
                "p": "data_source",
                "pt": "msg",
                "to": "$merge([data_source,\t    {\t        loop.vault:\t        $merge([$lookup(data_source, loop.vault),\t        {\"objects\":loop.results}\t        ])\t    }\t])",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "loop.results",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 1480,
        "wires": [
            [
                "896962c2f31f9f4d"
            ]
        ]
    },
    {
        "id": "84896e26921b7704",
        "type": "link out",
        "z": "3267d34c9be8d15b",
        "g": "c6ebf848c0b01bb2",
        "name": "error out",
        "mode": "link",
        "links": [
            "3960cc83d13b9762",
            "d27931e31cae90f8"
        ],
        "x": 1435,
        "y": 880,
        "wires": []
    },
    {
        "id": "1471bb087e0151a1",
        "type": "link out",
        "z": "3267d34c9be8d15b",
        "g": "2deb52da8866771f",
        "name": "error out",
        "mode": "link",
        "links": [
            "3960cc83d13b9762",
            "d27931e31cae90f8"
        ],
        "x": 1435,
        "y": 1040,
        "wires": []
    },
    {
        "id": "e2dac2eaf5e7a887",
        "type": "link out",
        "z": "3267d34c9be8d15b",
        "g": "ec7d72f3b34bb1b5",
        "name": "error out",
        "mode": "link",
        "links": [
            "3960cc83d13b9762",
            "d27931e31cae90f8"
        ],
        "x": 1595,
        "y": 1260,
        "wires": []
    },
    {
        "id": "64ef676694a433f3",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "94b09e2b11f23b6d",
        "name": "set vault_domain to source vault",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"vault_domain\": flow.instruction.source.vault_domain,\t    \"username\": flow.login.username,\t    \"password\": flow.login.password\t}",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_domain",
                "pt": "msg",
                "to": "payload.vault_domain",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "delete",
                "p": "vault_api",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "session_id",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "vault_id",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "user_id",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 560,
        "wires": [
            [
                "daeb8113ed0d5119"
            ]
        ]
    },
    {
        "id": "2a6f4f878f1a1a40",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "38021b70803d451f",
        "name": "prepare get xlink instruction",
        "rules": [
            {
                "t": "set",
                "p": "flow.instruction",
                "pt": "msg",
                "to": "{\"name__v\": payload.name__v}",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\"settings_name\": flow.instruction.name__v,\t\"attachment_name\": \"xlink_instruction (3).json\"}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 400,
        "wires": [
            [
                "9864f03deff65642"
            ]
        ]
    },
    {
        "id": "ae338033f5247ad4",
        "type": "link out",
        "z": "3267d34c9be8d15b",
        "g": "94b09e2b11f23b6d",
        "name": "error out",
        "mode": "link",
        "links": [
            "c90f759264c5a845",
            "d27931e31cae90f8"
        ],
        "x": 1855,
        "y": 560,
        "wires": []
    },
    {
        "id": "9f5007ca0efb3b19",
        "type": "link out",
        "z": "3267d34c9be8d15b",
        "g": "38021b70803d451f",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "6a814d28413dbfe7"
        ],
        "x": 1475,
        "y": 340,
        "wires": []
    },
    {
        "id": "bc077f9d099bde63",
        "type": "link out",
        "z": "3267d34c9be8d15b",
        "name": "link out 6",
        "mode": "link",
        "links": [],
        "x": 455,
        "y": 520,
        "wires": []
    },
    {
        "id": "2e8c402ed6421625",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "811963b2b29fb32c",
        "name": "prepare login and set starttime",
        "rules": [
            {
                "t": "set",
                "p": "starttime",
                "pt": "msg",
                "to": "$now()",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.vault_domain",
                "pt": "msg",
                "to": "flow.login.instruction.vault_domain",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "payload.username",
                "pt": "msg",
                "to": "flow.login.username",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "payload.password",
                "pt": "msg",
                "to": "flow.login.password",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 180,
        "wires": [
            [
                "4ef17aecca367dc4"
            ]
        ]
    },
    {
        "id": "93013df967f1cb8e",
        "type": "link out",
        "z": "3267d34c9be8d15b",
        "g": "811963b2b29fb32c",
        "name": "Error Abbort",
        "mode": "link",
        "links": [
            "d27931e31cae90f8"
        ],
        "x": 1085,
        "y": 240,
        "wires": [],
        "icon": "font-awesome/fa-hand-stop-o"
    },
    {
        "id": "dc0f2f8086e60ec3",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "811963b2b29fb32c",
        "name": "save settings",
        "rules": [
            {
                "t": "set",
                "p": "flow.settings",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1830,
        "y": 220,
        "wires": [
            [
                "764bb9beb8312077"
            ]
        ]
    },
    {
        "id": "24ac6a7f89b5b213",
        "type": "subflow:fca036ab5aa23301",
        "z": "3267d34c9be8d15b",
        "g": "811963b2b29fb32c",
        "name": "",
        "x": 1610,
        "y": 240,
        "wires": [
            [
                "dc0f2f8086e60ec3",
                "e3170974af286ec4"
            ],
            [
                "6d6923bcf7549d3a"
            ]
        ]
    },
    {
        "id": "6d6923bcf7549d3a",
        "type": "link out",
        "z": "3267d34c9be8d15b",
        "g": "811963b2b29fb32c",
        "name": "Error Abbort",
        "mode": "link",
        "links": [
            "d27931e31cae90f8"
        ],
        "x": 1925,
        "y": 260,
        "wires": [],
        "icon": "font-awesome/fa-hand-stop-o"
    },
    {
        "id": "5d0d835f77a50e61",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "811963b2b29fb32c",
        "name": "save login",
        "rules": [
            {
                "t": "set",
                "p": "flow.login.instruction",
                "pt": "msg",
                "to": "$merge(\t   [\t       flow.login.instruction,\t       {\t           \"client_id\":    client_id,\t           \"vault_api\":    vault_api,\t           \"session_id\":   session_id,\t           \"user_id\":      user_id,\t           \"vault_id\":     vault_id,\t           \"vault_domain\": vault_domain\t       }\t   ]\t)",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1840,
        "y": 180,
        "wires": [
            [
                "7ad40c5a80e9fc92",
                "764bb9beb8312077"
            ]
        ]
    },
    {
        "id": "e505e2ef3046c9fe",
        "type": "brave-vql-query",
        "z": "3267d34c9be8d15b",
        "g": "38021b70803d451f",
        "name": "",
        "x": 1270,
        "y": 340,
        "wires": [
            [
                "b7519bf841fffd19"
            ],
            [
                "9f5007ca0efb3b19"
            ]
        ]
    },
    {
        "id": "5107ed996b7da1f2",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 209",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3010,
        "y": 440,
        "wires": []
    },
    {
        "id": "d27931e31cae90f8",
        "type": "link in",
        "z": "3267d34c9be8d15b",
        "g": "566562338cd9b0df",
        "name": "Error Abbort",
        "links": [
            "128d254562eefa6d",
            "1471bb087e0151a1",
            "1581a680db671e5c",
            "237ec4378b954253",
            "2d4fea7ab5be2b2d",
            "2f69e1a30bdfb343",
            "382c142b2728b2ed",
            "3cae3fc43b4ec3a4",
            "4e18791855151808",
            "50fd31f5ce377d4c",
            "514d6d3b62ea32ed",
            "6118fd21f5dc9d98",
            "6d6923bcf7549d3a",
            "841d5405f127271f",
            "84896e26921b7704",
            "866a06205046b29d",
            "8aac891cf0cd37ad",
            "93013df967f1cb8e",
            "9838823c52dca3d9",
            "9e1b8ba0d0864e72",
            "9f252d9d55c756e6",
            "ae338033f5247ad4",
            "b6c096abb27dca98",
            "d91be8663ab18314",
            "e2dac2eaf5e7a887",
            "41931d136ad315d4",
            "ee45d82f4de0766c",
            "7bbbe1cc5739c7eb",
            "810558cfb37deaa9",
            "5954662b0f9ec8f0",
            "4b8871e780cde765",
            "97db13b20a3edac9",
            "58d93fbb6b0dddf0",
            "00dbaccb200ea05a",
            "ced81cb6249e47d5",
            "8acbd2b5d2c7b0df",
            "90f2d501681c289c",
            "17483d6514c74edc",
            "22f771342a04e34d",
            "d82eeb3e686d43df",
            "08ef418a352ddb94",
            "bb938a9810fc26b8",
            "23a6c4f5ae98bf1d",
            "66a3701619ae33b4",
            "58b0f1ab4a989e2a",
            "0b61a5e97c10d2d2",
            "2c93528756f2e1c0"
        ],
        "x": 2510,
        "y": 760,
        "wires": [
            [
                "3e1b8752678fe7bc",
                "5107ed996b7da1f2"
            ]
        ],
        "l": true
    },
    {
        "id": "3e1b8752678fe7bc",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "566562338cd9b0df",
        "name": "LOG to Redis",
        "rules": [
            {
                "t": "set",
                "p": "args.topic",
                "pt": "msg",
                "to": "$replace(\t   $join(\t       [\t           \"LOG__\" & client_id,\t           $string(_object_id),\t           $replace(\t               starttime?starttime:$now()\t               ,\":\",\"-\"),\t           \"ERROR\",\t           \"h\"\t       ],\t       \":\"\t   ),\t   /[ \"']/,\t   \"_\"\t)",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.method",
                "pt": "msg",
                "to": "SET",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "_log",
                "pt": "msg",
                "to": "$append(\t   _log,\t   {\t       \"timestamp\": $now(),\t       \"severity\": \"FATAL ERROR\",\t       \"message\": $merge($each($, function($v, $k) {($k!=\"req\" and $k!=\"res\")?{$k:$v}})),\t       \"source\":  $string(_event)\t   }\t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "_log",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2760,
        "y": 760,
        "wires": [
            [
                "cf346fab2c5943b4",
                "94d537ed54f56e35"
            ]
        ]
    },
    {
        "id": "2e1c79bf6b5126f7",
        "type": "brave-log-report",
        "z": "3267d34c9be8d15b",
        "g": "566562338cd9b0df",
        "name": "",
        "x": 3090,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "8d8c3a3fa49f05d4",
        "type": "delay",
        "z": "3267d34c9be8d15b",
        "g": "566562338cd9b0df",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2870,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "cf346fab2c5943b4",
        "type": "switch",
        "z": "3267d34c9be8d15b",
        "g": "566562338cd9b0df",
        "name": "avoid reporting on http errors",
        "property": "_error.source.type = \"http response\"\tor \terror.source.type  = \"http response\"\tor\t$type(req) != \"object\"",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2600,
        "y": 820,
        "wires": [
            [
                "8d8c3a3fa49f05d4"
            ]
        ]
    },
    {
        "id": "ef5ff2c1ff7b1dd2",
        "type": "brave-redis-queue",
        "z": "3267d34c9be8d15b",
        "g": "566562338cd9b0df",
        "name": "",
        "x": 3090,
        "y": 760,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "94d537ed54f56e35",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "566562338cd9b0df",
        "name": "set expire",
        "rules": [
            {
                "t": "set",
                "p": "args.expire",
                "pt": "msg",
                "to": "6*7*24*60*60",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2940,
        "y": 760,
        "wires": [
            [
                "ef5ff2c1ff7b1dd2"
            ]
        ]
    },
    {
        "id": "7a0d0938de68fd01",
        "type": "link in",
        "z": "3267d34c9be8d15b",
        "g": "938506b0fcdb6992",
        "name": "Error Log and continue",
        "links": [],
        "x": 2540,
        "y": 940,
        "wires": [
            [
                "8ac0f5a502daefd5",
                "5107ed996b7da1f2"
            ]
        ],
        "l": true
    },
    {
        "id": "8ac0f5a502daefd5",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "938506b0fcdb6992",
        "name": "LOG to Redis",
        "rules": [
            {
                "t": "set",
                "p": "args.topic",
                "pt": "msg",
                "to": "$replace(\t   $join(\t       [\t           \"LOG__\" & client_id,\t           $string(_object_id),\t           $replace(\t               starttime?starttime:$now()\t               ,\":\",\"-\"),\t           \"WARNING\",\t           \"h\"\t       ],\t       \":\"\t   ),\t   /[ \"']/,\t   \"_\"\t)",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.method",
                "pt": "msg",
                "to": "SET",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(\t   _log,\t   {\t       \"timestamp\": $now(),\t       \"severity\": \"INFO\",\t       \"message\": $merge($each($, function($v, $k) {($k!=\"req\" and $k!=\"res\")?{$k:$v}})),\t       \"source\":  $string(_event)\t   }\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2760,
        "y": 940,
        "wires": [
            [
                "24da094bdc90b865"
            ]
        ]
    },
    {
        "id": "d2aaeaf852423828",
        "type": "brave-redis-queue",
        "z": "3267d34c9be8d15b",
        "g": "938506b0fcdb6992",
        "name": "",
        "x": 3090,
        "y": 940,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "24da094bdc90b865",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "938506b0fcdb6992",
        "name": "set expire",
        "rules": [
            {
                "t": "set",
                "p": "args.expire",
                "pt": "msg",
                "to": "6*7*24*60*60",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2940,
        "y": 940,
        "wires": [
            [
                "d2aaeaf852423828"
            ]
        ]
    },
    {
        "id": "b269b431eee19dfe",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "638379cdf34e1a26",
        "name": "LOG to Redis",
        "rules": [
            {
                "t": "set",
                "p": "args.topic",
                "pt": "msg",
                "to": "$replace(\t   $join(\t       [\t           \"LOG__\" & client_id,\t           $string(_object_id),\t           $replace(\t               starttime?starttime:$now()\t               ,\":\",\"-\"),\t           \"ERROR_catched\",\t           \"h\"\t       ],\t       \":\"\t   ),\t   /[ \"']/,\t   \"_\"\t)",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.method",
                "pt": "msg",
                "to": "SET",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "_log",
                "pt": "msg",
                "to": "$append(\t   _log,\t    {\t    \"timestamp\": $now(),\t    \"severity\": \"ERROR\",\t    \"message\": $merge($each($, function($v, $k) {($k!=\"req\" and $k!=\"res\")?{$k:$v}})),\t    \"source\":  \"catch error\"    \t    }\t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "_log",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2720,
        "y": 580,
        "wires": [
            [
                "a158bbf13150ccbc",
                "1cea4016af6abc62",
                "5107ed996b7da1f2"
            ]
        ]
    },
    {
        "id": "e6675b953b33e029",
        "type": "catch",
        "z": "3267d34c9be8d15b",
        "g": "638379cdf34e1a26",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 2500,
        "y": 580,
        "wires": [
            [
                "b269b431eee19dfe"
            ]
        ]
    },
    {
        "id": "a158bbf13150ccbc",
        "type": "switch",
        "z": "3267d34c9be8d15b",
        "g": "638379cdf34e1a26",
        "name": "avoid reporting on http errors",
        "property": "_error.source.type = \"http response\"\tor \terror.source.type  = \"http response\"\tor\t$type(req) != \"object\"",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2600,
        "y": 640,
        "wires": [
            [
                "1d608c04c382259a"
            ]
        ]
    },
    {
        "id": "1d608c04c382259a",
        "type": "delay",
        "z": "3267d34c9be8d15b",
        "g": "638379cdf34e1a26",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2870,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "64dd237314ff74cf",
        "type": "brave-log-report",
        "z": "3267d34c9be8d15b",
        "g": "638379cdf34e1a26",
        "name": "",
        "x": 3090,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "7543e050ba757e0e",
        "type": "brave-redis-queue",
        "z": "3267d34c9be8d15b",
        "g": "638379cdf34e1a26",
        "name": "",
        "x": 3090,
        "y": 580,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1cea4016af6abc62",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "638379cdf34e1a26",
        "name": "set expire",
        "rules": [
            {
                "t": "set",
                "p": "args.expire",
                "pt": "msg",
                "to": "6*7*24*60*60",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2920,
        "y": 580,
        "wires": [
            [
                "7543e050ba757e0e"
            ]
        ]
    },
    {
        "id": "0c7212f9d30a4261",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "2642ac0e03326b5a",
        "name": "LOG to Redis",
        "rules": [
            {
                "t": "set",
                "p": "args.topic",
                "pt": "msg",
                "to": "$replace(\t   $join(\t       [\t           \"LOG__\" & client_id,\t           $string(_object_id),\t           $replace(\t               starttime?starttime:$now()\t               ,\":\",\"-\"),\t           \"INFO\",\t           \"h\"\t       ],\t       \":\"\t   ),\t   /[ \"']/,\t   \"_\"\t)",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.method",
                "pt": "msg",
                "to": "SET",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(\t   _log,\t   {\t       \"timestamp\": $now(),\t       \"severity\": \"INFO\",\t       \"message\": $merge($each($, function($v, $k) {($k!=\"req\" and $k!=\"res\")?{$k:$v}})),\t       \"source\":  $string(_event)\t   }\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2760,
        "y": 1040,
        "wires": [
            [
                "fb03edc920f4a1df"
            ]
        ]
    },
    {
        "id": "fb03edc920f4a1df",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "2642ac0e03326b5a",
        "name": "set expire",
        "rules": [
            {
                "t": "set",
                "p": "args.expire",
                "pt": "msg",
                "to": "6*7*24*60*60",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2940,
        "y": 1040,
        "wires": [
            [
                "6955cefb3033892b"
            ]
        ]
    },
    {
        "id": "6955cefb3033892b",
        "type": "brave-redis-queue",
        "z": "3267d34c9be8d15b",
        "g": "2642ac0e03326b5a",
        "name": "",
        "x": 3090,
        "y": 1040,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d11371542a48692e",
        "type": "link in",
        "z": "3267d34c9be8d15b",
        "g": "2642ac0e03326b5a",
        "name": "Info",
        "links": [],
        "x": 2490,
        "y": 1040,
        "wires": [
            [
                "492202ca9715414f"
            ]
        ],
        "l": true
    },
    {
        "id": "492202ca9715414f",
        "type": "switch",
        "z": "3267d34c9be8d15b",
        "g": "2642ac0e03326b5a",
        "name": "",
        "property": "clean_scp.settings.debug_level",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "INFO",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2610,
        "y": 1040,
        "wires": [
            [
                "0c7212f9d30a4261"
            ]
        ]
    },
    {
        "id": "9864f03deff65642",
        "type": "subflow:fca036ab5aa23301",
        "z": "3267d34c9be8d15b",
        "g": "38021b70803d451f",
        "name": "",
        "x": 1270,
        "y": 400,
        "wires": [
            [
                "654951cedb7d0931"
            ],
            []
        ]
    },
    {
        "id": "654951cedb7d0931",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "38021b70803d451f",
        "name": "Set Instruction",
        "rules": [
            {
                "t": "set",
                "p": "flow.instruction",
                "pt": "msg",
                "to": "$merge([flow.instruction, payload])",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "flow.instruction.this_run",
                "pt": "msg",
                "to": "$toMillis(starttime)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 400,
        "wires": [
            [
                "0c82347a3b9fa968",
                "a1b52fa75089ddb0"
            ]
        ]
    },
    {
        "id": "6611928e79d7cec0",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "94b09e2b11f23b6d",
        "name": "save login",
        "rules": [
            {
                "t": "set",
                "p": "flow.login.source",
                "pt": "msg",
                "to": "{\t    \"client_id\":    client_id,\t    \"vault_api\":    vault_api,\t    \"session_id\":   session_id,\t    \"user_id\":      user_id,\t    \"vault_id\":     vault_id,\t    \"vault_domain\": vault_domain\t}",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "_log",
                "pt": "msg",
                "to": "$append(_log, [{\t   \"status\": \"SUCCESS\",\t   \"action\": \"login xlink vault: \" & vaultDNS,\t   \"user_id\": create_xlink.source.vault.user_id\t}])",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 560,
        "wires": [
            [
                "9d99c86e99034359"
            ]
        ]
    },
    {
        "id": "9d99c86e99034359",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "aaca89fd0787251e",
        "name": "set vault_domain to xlink vault",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"vault_domain\": flow.instruction.xlink.vault_domain,\t    \"username\": flow.login.username,\t    \"password\": flow.login.password\t}",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_domain",
                "pt": "msg",
                "to": "payload.vault_domain",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 660,
        "wires": [
            [
                "e060af0474c4c9f7"
            ]
        ]
    },
    {
        "id": "7bbbe1cc5739c7eb",
        "type": "link out",
        "z": "3267d34c9be8d15b",
        "g": "aaca89fd0787251e",
        "name": "error out",
        "mode": "link",
        "links": [
            "c90f759264c5a845",
            "d27931e31cae90f8"
        ],
        "x": 1855,
        "y": 660,
        "wires": []
    },
    {
        "id": "3b2f9bc93d9d5d57",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "aaca89fd0787251e",
        "name": "save login",
        "rules": [
            {
                "t": "set",
                "p": "flow.login.xlink",
                "pt": "msg",
                "to": "{\t    \"client_id\":    client_id,\t    \"vault_api\":    vault_api,\t    \"session_id\":   session_id,\t    \"user_id\":      user_id,\t    \"vault_id\":     vault_id,\t    \"vault_domain\": vault_domain\t}",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "_log",
                "pt": "msg",
                "to": "$append(_log, [{\t   \"status\": \"SUCCESS\",\t   \"action\": \"login source vault: \" & vaultDNS,\t   \"user_id\": create_xlink.source.vault.user_id\t}])",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 660,
        "wires": [
            [
                "a0a0eda6b66b6cae"
            ]
        ]
    },
    {
        "id": "bfa3acf973ae3eca",
        "type": "brave-vql-query",
        "z": "3267d34c9be8d15b",
        "g": "c6ebf848c0b01bb2",
        "name": "",
        "x": 1270,
        "y": 820,
        "wires": [
            [
                "0ba994d6e7a1b545"
            ],
            [
                "84896e26921b7704"
            ]
        ]
    },
    {
        "id": "01ec0a3eb55c5db4",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "2deb52da8866771f",
        "name": "set Document Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"SELECT \"&\t$join(\t   [\t       \"id\",\t       \"name__v\",\t       \"title__v\",\t       \"version_id\",\t       \"source_binding_rule__v\",\t       \"source_vault_id__v\",\t       \"source_document_id__v\",\t       \"major_version_number__v\",\t       \"minor_version_number__v\",\t       \"bound_source_major_version__v\",\t       \"bound_source_minor_version__v\",\t       \"version_modified_date__v\",\t       \"subtype__v\",\t       \"classification__v\",\t       \"type__v\",\t       \"description__v\"\t    ],\t   \", \"\t)\t&\" FROM ALLVERSIONS documents\" \t&\" WHERE crosslink__v = true \"\t/* &\" AND source_binding_rule__v = 'Specific document version'\"*/\t&\" AND created_by__v = \" & user_id\t&\" AND source_vault_id__v = \" & $string(flow.login.source.vault_id)\t&\" AND source_document_id__v CONTAINS (\"&  \t        $join($distinct(flow.source.doc_vers.$string(id)[]\t                    ),\t            \", \")\t   &\")\"\t/*version modified date is useless for xlinks, since all versions get updated on almost?? any change of the source document, so just get all xlinks of a document.\tand work with it in the automation, seems to be just a waste of query time.\t&\" AND version_modified_date__v > '\" & $fromMillis(flow.instruction.last_run - 60*1000,'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].000Z') & \"'\"\t&\" AND version_modified_date__v < '\" & $fromMillis(flow.instruction.this_run - 60*1000,'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].000Z') & \"'\"*/\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 1040,
        "wires": [
            [
                "e4cc6d715f68e4d5"
            ]
        ]
    },
    {
        "id": "e4cc6d715f68e4d5",
        "type": "brave-vql-query",
        "z": "3267d34c9be8d15b",
        "g": "2deb52da8866771f",
        "name": "",
        "x": 1270,
        "y": 1040,
        "wires": [
            [
                "8c09f2f654dcad02"
            ],
            [
                "1471bb087e0151a1"
            ]
        ]
    },
    {
        "id": "4ef17aecca367dc4",
        "type": "subflow:f5e72a5d369ff484",
        "z": "3267d34c9be8d15b",
        "g": "811963b2b29fb32c",
        "name": "",
        "x": 1560,
        "y": 180,
        "wires": [
            [
                "5d0d835f77a50e61"
            ],
            [
                "6b25258ab0f1af3d"
            ]
        ]
    },
    {
        "id": "daeb8113ed0d5119",
        "type": "subflow:f5e72a5d369ff484",
        "z": "3267d34c9be8d15b",
        "g": "94b09e2b11f23b6d",
        "name": "",
        "x": 1260,
        "y": 560,
        "wires": [
            [
                "6611928e79d7cec0"
            ],
            []
        ]
    },
    {
        "id": "e060af0474c4c9f7",
        "type": "subflow:f5e72a5d369ff484",
        "z": "3267d34c9be8d15b",
        "g": "aaca89fd0787251e",
        "name": "",
        "x": 1260,
        "y": 660,
        "wires": [
            [
                "3b2f9bc93d9d5d57"
            ],
            []
        ]
    },
    {
        "id": "97352a34edca0a7e",
        "type": "brave-vql-query",
        "z": "3267d34c9be8d15b",
        "g": "d36af2107dca85dd",
        "name": "",
        "x": 1550,
        "y": 1400,
        "wires": [
            [
                "c6c5d288b0d069c6"
            ],
            []
        ]
    },
    {
        "id": "a636628106fb0fc7",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "2960b03e650ec0db",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "loop.vault",
                "pt": "msg",
                "to": "loop.vaults[$$.loop.vault_counter]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 1180,
        "wires": [
            [
                "cba77b0f1fdcef09"
            ]
        ]
    },
    {
        "id": "a0a0eda6b66b6cae",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "c6ebf848c0b01bb2",
        "name": "switch to source vault",
        "rules": [
            {
                "t": "set",
                "p": "temp.login_details",
                "pt": "msg",
                "to": "$lookup(flow.login, \"source\")",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "temp.login_details.client_id",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_api",
                "pt": "msg",
                "to": "temp.login_details.vault_api",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "session_id",
                "pt": "msg",
                "to": "temp.login_details.session_id",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_domain",
                "pt": "msg",
                "to": "temp.login_details.vault_domain",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "user_id",
                "pt": "msg",
                "to": "temp.login_details.user_id",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 820,
        "wires": [
            [
                "b6ed57763abd8ea6"
            ]
        ]
    },
    {
        "id": "f1c432ba3fc9ad46",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "2deb52da8866771f",
        "name": "switch to xlink vault",
        "rules": [
            {
                "t": "set",
                "p": "temp.login_details",
                "pt": "msg",
                "to": "$lookup(flow.login, \"xlink\")",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "temp.login_details.client_id",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_api",
                "pt": "msg",
                "to": "temp.login_details.vault_api",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "session_id",
                "pt": "msg",
                "to": "temp.login_details.session_id",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_domain",
                "pt": "msg",
                "to": "temp.login_details.vault_domain",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "user_id",
                "pt": "msg",
                "to": "temp.login_details.user_id",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 1040,
        "wires": [
            [
                "01ec0a3eb55c5db4"
            ]
        ]
    },
    {
        "id": "cba77b0f1fdcef09",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "2960b03e650ec0db",
        "name": "switch to loop.vault",
        "rules": [
            {
                "t": "set",
                "p": "temp.login_details",
                "pt": "msg",
                "to": "$lookup(flow.login, loop.vault)",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "temp.login_details.client_id",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_api",
                "pt": "msg",
                "to": "temp.login_details.vault_api",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "session_id",
                "pt": "msg",
                "to": "temp.login_details.session_id",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_domain",
                "pt": "msg",
                "to": "temp.login_details.vault_domain",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "user_id",
                "pt": "msg",
                "to": "temp.login_details.user_id",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 1180,
        "wires": [
            [
                "cfd7fb9f3bb507bc"
            ]
        ]
    },
    {
        "id": "161ca1539f716105",
        "type": "switch",
        "z": "3267d34c9be8d15b",
        "g": "d36af2107dca85dd",
        "name": "while objects",
        "property": "loop.object_counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 1340,
        "wires": [
            [
                "70b99aa11903a140"
            ],
            [
                "f548fc20fbf6a966"
            ]
        ]
    },
    {
        "id": "e3f9fcdaf5c55e44",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "d36af2107dca85dd",
        "name": "next object",
        "rules": [
            {
                "t": "set",
                "p": "loop.object_counter",
                "pt": "msg",
                "to": "loop.object_counter-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 1400,
        "wires": [
            [
                "161ca1539f716105"
            ]
        ]
    },
    {
        "id": "896962c2f31f9f4d",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "045185c7dd412368",
        "name": "set array of picklists",
        "rules": [
            {
                "t": "set",
                "p": "loop.picklists",
                "pt": "msg",
                "to": "$lookup(flow.instruction, loop.vault).picklists",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "loop.picklist_counter",
                "pt": "msg",
                "to": "$count(loop.picklists)-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 1580,
        "wires": [
            [
                "54072a757a438c43"
            ]
        ]
    },
    {
        "id": "7655937c9393c1a3",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "045185c7dd412368",
        "name": "update flow variable",
        "rules": [
            {
                "t": "set",
                "p": "data_source",
                "pt": "msg",
                "to": "$merge([data_source,\t    {\t        loop.vault:\t        $merge([$lookup(data_source, loop.vault),\t        {\"picklists\":loop.results}\t        ])\t    }\t])",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "loop.results",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 1800,
        "wires": [
            [
                "5eb774c9b9e0051e"
            ]
        ]
    },
    {
        "id": "810558cfb37deaa9",
        "type": "link out",
        "z": "3267d34c9be8d15b",
        "g": "045185c7dd412368",
        "name": "error out",
        "mode": "link",
        "links": [
            "3960cc83d13b9762",
            "d27931e31cae90f8"
        ],
        "x": 1815,
        "y": 1580,
        "wires": []
    },
    {
        "id": "09cb42a8e4dc129f",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "7d8b8fab12d1dffd",
        "name": "set picklist name",
        "rules": [
            {
                "t": "set",
                "p": "loop.picklist",
                "pt": "msg",
                "to": "loop.picklists[$$.loop.picklist_counter]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "args.picklist_name",
                "pt": "msg",
                "to": "loop.picklist.picklist_name",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 1660,
        "wires": [
            [
                "116d75de4f9177a3"
            ]
        ]
    },
    {
        "id": "6703756f13602083",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "7d8b8fab12d1dffd",
        "name": "set picklists",
        "rules": [
            {
                "t": "set",
                "p": "loop.results",
                "pt": "msg",
                "to": "$merge(\t        [\t            loop.results,\t            {loop.picklist.picklist_name:payload.picklistValues}\t        ]\t    )\t",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1830,
        "y": 1660,
        "wires": [
            [
                "bef12c9d6a3d0122"
            ]
        ]
    },
    {
        "id": "54072a757a438c43",
        "type": "switch",
        "z": "3267d34c9be8d15b",
        "g": "7d8b8fab12d1dffd",
        "name": "while picklists",
        "property": "loop.picklist_counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1020,
        "y": 1660,
        "wires": [
            [
                "09cb42a8e4dc129f"
            ],
            [
                "7655937c9393c1a3"
            ]
        ]
    },
    {
        "id": "bef12c9d6a3d0122",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "7d8b8fab12d1dffd",
        "name": "next picklist",
        "rules": [
            {
                "t": "set",
                "p": "loop.picklist_counter",
                "pt": "msg",
                "to": "loop.picklist_counter-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 1720,
        "wires": [
            [
                "54072a757a438c43"
            ]
        ]
    },
    {
        "id": "116d75de4f9177a3",
        "type": "brave-retrieve-picklist-values",
        "z": "3267d34c9be8d15b",
        "g": "7d8b8fab12d1dffd",
        "name": "",
        "x": 1590,
        "y": 1660,
        "wires": [
            [
                "6703756f13602083"
            ],
            []
        ]
    },
    {
        "id": "5eb774c9b9e0051e",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "091d7d63f3cf4ae8",
        "name": "set array of mappings",
        "rules": [
            {
                "t": "set",
                "p": "loop.mappings",
                "pt": "msg",
                "to": "$lookup(flow.instruction, loop.vault).mappings",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "loop.mapping_counter",
                "pt": "msg",
                "to": "$count(loop.mappings)-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 1900,
        "wires": [
            [
                "b93a7bc56bfc99f5"
            ]
        ]
    },
    {
        "id": "f25b741fce21a884",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "091d7d63f3cf4ae8",
        "name": "update flow variable",
        "rules": [
            {
                "t": "set",
                "p": "data_source",
                "pt": "msg",
                "to": "$merge([data_source,\t    {\t        loop.vault:\t        $merge([$lookup(data_source, loop.vault),\t        {\"mappings\":loop.results}\t        ])\t    }\t])",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "loop.results",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 2120,
        "wires": [
            [
                "4e6270243c49367f"
            ]
        ]
    },
    {
        "id": "4b8871e780cde765",
        "type": "link out",
        "z": "3267d34c9be8d15b",
        "g": "091d7d63f3cf4ae8",
        "name": "error out",
        "mode": "link",
        "links": [
            "3960cc83d13b9762",
            "d27931e31cae90f8"
        ],
        "x": 1815,
        "y": 1900,
        "wires": []
    },
    {
        "id": "079ca70a4327014d",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "89198508be36b423",
        "name": "set mapping name",
        "rules": [
            {
                "t": "set",
                "p": "loop.mapping",
                "pt": "msg",
                "to": "loop.mappings[$$.loop.mapping_counter]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "args.settings_name",
                "pt": "msg",
                "to": "loop.mapping.mapping_name",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.attachment_name",
                "pt": "msg",
                "to": "loop.mapping.attachment_name",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1980,
        "wires": [
            [
                "cbbb1a8addbf9438"
            ]
        ]
    },
    {
        "id": "9f2042d0351c259e",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "89198508be36b423",
        "name": "set mappings",
        "rules": [
            {
                "t": "set",
                "p": "loop.results",
                "pt": "msg",
                "to": "$merge(\t        [\t            loop.results,\t            {loop.mapping.mapping_name: payload}\t        ]\t    )\t",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1830,
        "y": 1980,
        "wires": [
            [
                "343d6ae5aa82148c"
            ]
        ]
    },
    {
        "id": "b93a7bc56bfc99f5",
        "type": "switch",
        "z": "3267d34c9be8d15b",
        "g": "89198508be36b423",
        "name": "while mappings",
        "property": "loop.mapping_counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1020,
        "y": 1980,
        "wires": [
            [
                "079ca70a4327014d"
            ],
            [
                "f25b741fce21a884"
            ]
        ]
    },
    {
        "id": "343d6ae5aa82148c",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "89198508be36b423",
        "name": "next mapping",
        "rules": [
            {
                "t": "set",
                "p": "loop.mapping_counter",
                "pt": "msg",
                "to": "loop.mapping_counter-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 2040,
        "wires": [
            [
                "b93a7bc56bfc99f5"
            ]
        ]
    },
    {
        "id": "cbbb1a8addbf9438",
        "type": "subflow:fca036ab5aa23301",
        "z": "3267d34c9be8d15b",
        "g": "89198508be36b423",
        "name": "",
        "x": 1570,
        "y": 1980,
        "wires": [
            [
                "9f2042d0351c259e"
            ],
            []
        ]
    },
    {
        "id": "4e6270243c49367f",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "2960b03e650ec0db",
        "name": "next vault",
        "rules": [
            {
                "t": "set",
                "p": "loop.vault_counter",
                "pt": "msg",
                "to": "loop.vault_counter-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 2120,
        "wires": [
            [
                "c14320492a4a0812"
            ]
        ]
    },
    {
        "id": "c14320492a4a0812",
        "type": "switch",
        "z": "3267d34c9be8d15b",
        "g": "2960b03e650ec0db",
        "name": "while vaults",
        "property": "loop.vault_counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 730,
        "y": 1240,
        "wires": [
            [
                "a636628106fb0fc7"
            ],
            [
                "852bc6f5cf710b21",
                "b306110f4e66b1dc"
            ]
        ]
    },
    {
        "id": "39a4c111cd0e502b",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "2960b03e650ec0db",
        "name": "Set vauls",
        "rules": [
            {
                "t": "set",
                "p": "loop.vaults",
                "pt": "msg",
                "to": "[\"source\", \"xlink\", \"instruction\"]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "loop.vault_counter",
                "pt": "msg",
                "to": "$count(loop.vaults)-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 1180,
        "wires": [
            [
                "c14320492a4a0812"
            ]
        ]
    },
    {
        "id": "caa91d595e7729da",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "520c2af02903f751",
        "name": "add created xlink to flow.xlink.doc_vers",
        "rules": [
            {
                "t": "set",
                "p": "flow.xlink.doc_vers",
                "pt": "msg",
                "to": "$append(\t   $$.flow.xlink.doc_vers,\t   $merge(\t       [\t           $$.loop.new_xlink,\t           {\t               \"id\":$$.payload.id,\t               \"responseStatus\":$$.payload.responseStatus,\t               \"responseMessage\":$$.payload.responseMessage,\t               \"source_version_id\":\t                   $$.loop.new_xlink.source_document_id__v & \"_\" &\t                   $$.loop.new_xlink.bound_source_major_version__v & \"_\" &\t                   $$.loop.new_xlink.bound_source_minor_version__v,\t               \"sort_version\": $$.loop.new_xlink.major_version_number__v*10000 + $$.loop.new_xlink.minor_version_number__v,\t               \"sort_bound_version\": $$.loop.new_xlink.bound_source_major_version__v*10000 + $$.loop.new_xlink.bound_source_minor_version__v,\t               \"version_id\": \t                   $$.payload.id & \"_\" &\t                   $$.loop.new_xlink.major_version_number__v & \"_\" &\t                   $$.loop.new_xlink.minor_version_number__v,\t               \"version_modified_date__v\":$now(),\t               \"xlink_created\": true\t            }\t        ]\t    )\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2230,
        "y": 2380,
        "wires": [
            [
                "f73ae19b5e770598",
                "cfba220769f6db1f"
            ]
        ]
    },
    {
        "id": "6118fd21f5dc9d98",
        "type": "link out",
        "z": "3267d34c9be8d15b",
        "g": "520c2af02903f751",
        "name": "error out",
        "mode": "link",
        "links": [
            "6e23b29b8f76aa72",
            "d27931e31cae90f8"
        ],
        "x": 2305,
        "y": 2260,
        "wires": []
    },
    {
        "id": "950db8159108fd4a",
        "type": "switch",
        "z": "3267d34c9be8d15b",
        "g": "520c2af02903f751",
        "name": "while new documents",
        "property": "loop.doc_counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1280,
        "y": 2320,
        "wires": [
            [
                "5b1f08ade618b3a5"
            ],
            [
                "8eb421dc0aa55bc1"
            ]
        ]
    },
    {
        "id": "f73ae19b5e770598",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "520c2af02903f751",
        "name": "next document",
        "rules": [
            {
                "t": "set",
                "p": "loop.doc_counter",
                "pt": "msg",
                "to": "loop.doc_counter-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 2380,
        "wires": [
            [
                "950db8159108fd4a"
            ]
        ]
    },
    {
        "id": "0ef1959319d3ca48",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "520c2af02903f751",
        "name": "switch to xlink vault",
        "rules": [
            {
                "t": "set",
                "p": "temp.login_details",
                "pt": "msg",
                "to": "$lookup(flow.login, \"xlink\")",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "temp.login_details.client_id",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_api",
                "pt": "msg",
                "to": "temp.login_details.vault_api",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "session_id",
                "pt": "msg",
                "to": "temp.login_details.session_id",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_domain",
                "pt": "msg",
                "to": "temp.login_details.vault_domain",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "user_id",
                "pt": "msg",
                "to": "temp.login_details.user_id",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1590,
        "y": 2260,
        "wires": [
            [
                "0d34f04f8063645d"
            ]
        ]
    },
    {
        "id": "75c9b4e7b1337120",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 211",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2250,
        "y": 1000,
        "wires": []
    },
    {
        "id": "81bfe1b45e73b92f",
        "type": "brave-redis-queue",
        "z": "3267d34c9be8d15b",
        "g": "38021b70803d451f",
        "name": "",
        "x": 1250,
        "y": 460,
        "wires": [
            [
                "a5db97da4d154c50"
            ],
            []
        ]
    },
    {
        "id": "0c82347a3b9fa968",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "38021b70803d451f",
        "name": "prepare get last run",
        "rules": [
            {
                "t": "set",
                "p": "args.topic",
                "pt": "msg",
                "to": "$replace(\t   $join(\t       [\t           \"LOG__\" & client_id,\t           flow.instruction.name__v,\t           \"last_run\",\t           \"h\"        \t       ],\t       \":\"    \t   ),\t   /[ \"']/,\t   \"_\" \t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "args.method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 460,
        "wires": [
            [
                "81bfe1b45e73b92f"
            ]
        ]
    },
    {
        "id": "a5db97da4d154c50",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "38021b70803d451f",
        "name": "set last run (formula to be corrected to 100 days",
        "rules": [
            {
                "t": "set",
                "p": "flow.instruction.last_run",
                "pt": "msg",
                "to": "flow.instruction.this_run-10*24*60*60*1000",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "flow.instruction.last_run",
                "pt": "msg",
                "to": "($last_run:=payload?$number(payload):0;\t($last_run > flow.instruction.this_run-10*24*60*60*1000)?\t$last_run:flow.instruction.this_run-10*24*60*60*1000\t/*use the last run, if not available or older than 100 days, use -100 days*/\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1760,
        "y": 460,
        "wires": [
            [
                "64ef676694a433f3",
                "6a392db82d34c73b"
            ]
        ]
    },
    {
        "id": "cfba220769f6db1f",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 222",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2650,
        "y": 2420,
        "wires": []
    },
    {
        "id": "64b82e643f79277d",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 234",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2570,
        "y": 2140,
        "wires": []
    },
    {
        "id": "61e0ee3d28eee57f",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 255",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2590,
        "y": 2280,
        "wires": []
    },
    {
        "id": "5b1f08ade618b3a5",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "520c2af02903f751",
        "name": "xlink document metadata",
        "rules": [
            {
                "t": "set",
                "p": "loop.new_sourcedoc",
                "pt": "msg",
                "to": "loop.new_sources[$$.loop.doc_counter].first_source",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$merge([{\t   \"sourceDoc\":loop.new_sourcedoc,\t   \"source_vault_id\":flow.login.source.vault_id,\t   \"xlink_vault_id\":flow.login.xlink.vault_id\t   },   \t   data_source\t])\t",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.jsonata",
                "pt": "msg",
                "to": "flow.instruction.instruction.jsonata",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "base_data",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1610,
        "y": 2320,
        "wires": [
            [
                "801b0c2bfd18a3c4",
                "64b82e643f79277d"
            ]
        ]
    },
    {
        "id": "9eaabc68db190647",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "520c2af02903f751",
        "name": "prepare create doc",
        "rules": [
            {
                "t": "set",
                "p": "loop.new_xlink",
                "pt": "msg",
                "to": "$merge(\t   [\t       payload,\t       {\t           \"major_version_number__v\":loop.new_sourcedoc.major_version_number__v,\t           \"minor_version_number__v\":loop.new_sourcedoc.minor_version_number__v,\t           \"bound_source_major_version__v\":loop.new_sourcedoc.major_version_number__v,\t           \"bound_source_minor_version__v\":loop.new_sourcedoc.minor_version_number__v,\t           \"source_document_id__v\": loop.new_sourcedoc.id,\t           \"source_vault_id__v\": flow.login.source.vault_id,\t           \"source_binding_rule__v\":\"Specific document version\",\t           \"status__v\": loop.new_sourcedoc.minor_version_number__v=0 ? \"Approved\"\t\t       }\t   ]\t)",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "loop.new_xlink",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1590,
        "y": 2380,
        "wires": [
            [
                "61e0ee3d28eee57f",
                "48932cf8043b5582"
            ]
        ]
    },
    {
        "id": "801b0c2bfd18a3c4",
        "type": "function",
        "z": "3267d34c9be8d15b",
        "g": "520c2af02903f751",
        "name": "Apply Jsonata",
        "func": "let jsonataStr = msg.args.jsonata;\nlet inputObject = msg.payload;\nlet result;\n\ntry {\n    if (typeof jsonataStr == 'string') {\n        let template = RED.util.prepareJSONataExpression(jsonataStr, node);\n        result = RED.util.evaluateJSONataExpression(template, inputObject, null);\n    }\n\n    msg.payload = result;\n\n    return [msg, null]\n}\ncatch (err) {\n    msg.payload = \"ERROR\" + JSON.stringify(err)\n    return [null, msg]\n};",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1860,
        "y": 2320,
        "wires": [
            [
                "9eaabc68db190647",
                "64b82e643f79277d"
            ],
            [
                "6118fd21f5dc9d98"
            ]
        ],
        "info": "Transform a node-red object using a jsonata expression provided as a string at runtime. \r\n\r\n### Node information\r\n:Initial Release (string): With building blocks version x.x.x\r\n:Description (string): Transform a node-red object using a jsonata expression provided as a string.\r\n\r\n### Inputs\r\n: args.jsonata (string) : *(required)* The jsonata expression to be used, has to be a valid string appropriately escaped. If empty, output will be SUCCESS and payload undefined\r\n: payload (object)     : *(optional)* A node red data object to be transformed by args.jsonata. If empty, output will be SUCCESS and empty\r\n\r\n### Outputs\r\n1. Success\r\n: payload (object): The transformed object\r\n\r\n1. Failure\r\n: payload (object): Error message on channel 2\r\n"
    },
    {
        "id": "48932cf8043b5582",
        "type": "brave-create-single-document",
        "z": "3267d34c9be8d15b",
        "g": "520c2af02903f751",
        "name": "",
        "x": 1890,
        "y": 2380,
        "wires": [
            [
                "caa91d595e7729da"
            ],
            [
                "6118fd21f5dc9d98"
            ]
        ]
    },
    {
        "id": "0d34f04f8063645d",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "520c2af02903f751",
        "name": "Set loop doc_counter",
        "rules": [
            {
                "t": "set",
                "p": "loop.doc_counter",
                "pt": "msg",
                "to": "$count(loop.new_sources)-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1880,
        "y": 2260,
        "wires": [
            [
                "950db8159108fd4a",
                "64b82e643f79277d"
            ]
        ]
    },
    {
        "id": "38de27d039b9421d",
        "type": "brave-redis-queue",
        "z": "3267d34c9be8d15b",
        "g": "d36af2107dca85dd",
        "name": "",
        "x": 1710,
        "y": 1340,
        "wires": [
            [
                "20f4c29195ed5b64"
            ],
            []
        ]
    },
    {
        "id": "8d79508e559979cf",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "d36af2107dca85dd",
        "name": "prep redis",
        "rules": [
            {
                "t": "set",
                "p": "args.topic",
                "pt": "msg",
                "to": "$replace(\t   $join(\t       [\t            flow.login.instruction.vault_domain,\t            flow.instruction.name__v,\t            loop.vault,\t            loop.object.object_name,\t            \"h\"\t       ],\t       \":\"\t   ),\t   /[ \"']/,\t   \"_\"\t)\t\t",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "args.method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 1340,
        "wires": [
            [
                "38de27d039b9421d"
            ]
        ]
    },
    {
        "id": "20f4c29195ed5b64",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "d36af2107dca85dd",
        "name": "write to loop result and prepare query",
        "rules": [
            {
                "t": "set",
                "p": "loop.redis_result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"SELECT \" & $join(loop.fields, \", \") &\t\" FROM \" & loop.object.object_name &\t($type(loop.redis_result.last_run)=\"number\"?(\t\" WHERE modified_date__v > '\" & \t$fromMillis(loop.redis_result.last_run - 60000, '[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].000Z') & \t\"'\"))",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "loop.run_time",
                "pt": "msg",
                "to": "$millis()",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 1400,
        "wires": [
            [
                "97352a34edca0a7e"
            ]
        ]
    },
    {
        "id": "93fcf8e1e140665c",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "d36af2107dca85dd",
        "name": "prep redis",
        "rules": [
            {
                "t": "set",
                "p": "args.topic",
                "pt": "msg",
                "to": "$replace(\t   $join(\t       [\t            flow.login.instruction.vault_domain,\t            flow.instruction.name__v,\t            loop.vault,\t            loop.object.object_name,\t            \"h\"\t       ],\t       \":\"\t   ),\t   /[ \"']/,\t   \"_\"\t)\t\t",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "args.method",
                "pt": "msg",
                "to": "SET",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"last_run\":loop.run_time,\t   \"data\":loop.result   \t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2180,
        "y": 1340,
        "wires": [
            [
                "0e73f38070ffcfdb"
            ]
        ]
    },
    {
        "id": "0e73f38070ffcfdb",
        "type": "brave-redis-queue",
        "z": "3267d34c9be8d15b",
        "g": "d36af2107dca85dd",
        "name": "",
        "x": 2150,
        "y": 1400,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "a450771d6bf0134c",
        "type": "switch",
        "z": "3267d34c9be8d15b",
        "g": "d36af2107dca85dd",
        "name": "if updated",
        "property": "loop.updated",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2040,
        "y": 1340,
        "wires": [
            [
                "93fcf8e1e140665c"
            ]
        ]
    },
    {
        "id": "852bc6f5cf710b21",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "name": "pair source and xlink to flow doc_pairs",
        "rules": [
            {
                "t": "set",
                "p": "flow.doc_pairs",
                "pt": "msg",
                "to": "$append(\t   $distinct(\t       flow.xlink.doc_vers@$xv.[\t           $$.flow.source.doc_vers[id=$xv.source_document_id__v].\t                    {\"source_id\":id, \t                    \"xlink_id\":$xv.id}\t       ]\t   ),\t   $distinct(\t       [\t           flow.source.doc_vers[\t               $not(\t                   id in $$.flow.xlink.doc_vers.source_document_id__v\t               )\t           ].{\"source_id\":id}\t       ]\t   )\t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "flow.doc_pairs",
                "pt": "msg",
                "to": "flow.doc_pairs@$dp.\t$merge(\t    [\t        $dp,\t        {\t            \"latest_xlink\": $$.flow.xlink.doc_vers[id=$dp.xlink_id]^(>sort_version)[0],\t            \"first_source\": $$.flow.source.doc_vers[id=$dp.source_id]^(sort_version)[0],\t            \"version_pairs\":\t                ($$.flow.source.doc_vers@$ps[$ps.id=$dp.source_id].{\t                    \"source_ver\":$ps,\t                    \"xlink_ver\":\t                            (\t                                $xlsortv:=$$.flow.xlink.doc_vers[id=$dp.xlink_id\t                                    and\t                                    source_document_id__v = $ps.id \t                                    and \t                                    sort_version = $ps.sort_version][0];\t                                $xlbound:=$$.flow.xlink.doc_vers[id=$dp.xlink_id\t                                    and\t                                    source_version_id = $ps.version_id]^(>sort_version)[0];\t                                $xldescr:=$$.flow.xlink.doc_vers[id=$dp.xlink_id\t                                    and\t                                    description__v = $ps.version_id]^(>sort_version)[0];\t                    /* if created by automation the xlink description field has the version_id it was created for ($xldescr),\t                    if this does not point to an existing source, try match by expected parallel version numbering ($xlsortv),\t                    if neither match, match by source_version_id field ($xlbound).*/\t                                $xldescr?$xldescr:($xlsortv?$xlsortv:$xlbound)/**/\t                            )\t                    }\t                )^(source_ver.sort_version)[]\t        }\t    ]\t)\t\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 2780,
        "wires": [
            [
                "b447b1e67e666a8a"
            ]
        ]
    },
    {
        "id": "29715e365a4ec3f9",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 256",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 130,
        "y": 2960,
        "wires": []
    },
    {
        "id": "f3c23d0d463d340b",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 278",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 2400,
        "wires": []
    },
    {
        "id": "01b5de87906e4de1",
        "type": "link in",
        "z": "3267d34c9be8d15b",
        "g": "520c2af02903f751",
        "name": "new docs in",
        "links": [],
        "x": 1305,
        "y": 2260,
        "wires": [
            [
                "0ef1959319d3ca48"
            ]
        ]
    },
    {
        "id": "8eb421dc0aa55bc1",
        "type": "link out",
        "z": "3267d34c9be8d15b",
        "g": "520c2af02903f751",
        "name": "new docs out",
        "mode": "return",
        "links": [],
        "x": 1425,
        "y": 2380,
        "wires": []
    },
    {
        "id": "18a61a65d477fb95",
        "type": "link in",
        "z": "3267d34c9be8d15b",
        "name": "re-evaluate status",
        "links": [
            "96f567fc72b8627e",
            "c1d857993e59759b",
            "9a93388d271e1234",
            "6c35e336e9c4101b"
        ],
        "x": 255,
        "y": 2680,
        "wires": [
            [
                "852bc6f5cf710b21"
            ]
        ]
    },
    {
        "id": "22f771342a04e34d",
        "type": "link out",
        "z": "3267d34c9be8d15b",
        "g": "037851cd06f5fc65",
        "name": "error out",
        "mode": "link",
        "links": [
            "6e23b29b8f76aa72",
            "d27931e31cae90f8"
        ],
        "x": 2305,
        "y": 2480,
        "wires": []
    },
    {
        "id": "fca0b135fbc227ed",
        "type": "switch",
        "z": "3267d34c9be8d15b",
        "g": "037851cd06f5fc65",
        "name": "while updates",
        "property": "loop.update_counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1260,
        "y": 2540,
        "wires": [
            [
                "3a15c73824e29585"
            ],
            [
                "93d3972a25eaec91"
            ]
        ]
    },
    {
        "id": "055b58f8c76fdbf1",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "037851cd06f5fc65",
        "name": "next update",
        "rules": [
            {
                "t": "set",
                "p": "loop.update_counter",
                "pt": "msg",
                "to": "loop.update_counter-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 2600,
        "wires": [
            [
                "fca0b135fbc227ed"
            ]
        ]
    },
    {
        "id": "a3f6c4dcf4f33153",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "037851cd06f5fc65",
        "name": "switch to xlink vault",
        "rules": [
            {
                "t": "set",
                "p": "temp.login_details",
                "pt": "msg",
                "to": "$lookup(flow.login, \"xlink\")",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "temp.login_details.client_id",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_api",
                "pt": "msg",
                "to": "temp.login_details.vault_api",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "session_id",
                "pt": "msg",
                "to": "temp.login_details.session_id",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_domain",
                "pt": "msg",
                "to": "temp.login_details.vault_domain",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "user_id",
                "pt": "msg",
                "to": "temp.login_details.user_id",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1550,
        "y": 2480,
        "wires": [
            [
                "a28fe2204ce772af"
            ]
        ]
    },
    {
        "id": "c5710908ca22bd99",
        "type": "function",
        "z": "3267d34c9be8d15b",
        "g": "037851cd06f5fc65",
        "name": "Apply Jsonata",
        "func": "let jsonataStr = msg.args.jsonata;\nlet inputObject = msg.payload;\nlet result;\n\ntry {\n    if (typeof jsonataStr == 'string') {\n        let template = RED.util.prepareJSONataExpression(jsonataStr, node);\n        result = RED.util.evaluateJSONataExpression(template, inputObject, null);\n    }\n\n    msg.payload = result;\n\n    return [msg, null]\n}\ncatch (err) {\n    msg.payload = \"ERROR\" + JSON.stringify(err)\n    return [null, msg]\n};",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 2540,
        "wires": [
            [
                "b8ae216cc6313388",
                "59b8e7c2bc6451c8"
            ],
            [
                "22f771342a04e34d"
            ]
        ]
    },
    {
        "id": "a28fe2204ce772af",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "037851cd06f5fc65",
        "name": "Set loop update_counter",
        "rules": [
            {
                "t": "set",
                "p": "loop.update_xlink_pairs",
                "pt": "msg",
                "to": "loop.update_xlinks.version_pairs",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "loop.update_counter",
                "pt": "msg",
                "to": "$count(loop.update_xlink_pairs)-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1830,
        "y": 2480,
        "wires": [
            [
                "fca0b135fbc227ed"
            ]
        ]
    },
    {
        "id": "e8106694503bb438",
        "type": "link in",
        "z": "3267d34c9be8d15b",
        "g": "037851cd06f5fc65",
        "name": "update xlink in",
        "links": [
            "233a2f3bcb213b59"
        ],
        "x": 1285,
        "y": 2480,
        "wires": [
            [
                "a3f6c4dcf4f33153"
            ]
        ]
    },
    {
        "id": "3a15c73824e29585",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "037851cd06f5fc65",
        "name": "xlink update metadata",
        "rules": [
            {
                "t": "set",
                "p": "loop.update_xlink",
                "pt": "msg",
                "to": "loop.update_xlink_pairs[$$.loop.update_counter]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$merge([{\t   \"sourceDoc\":loop.update_xlink.source_ver,\t   \"source_vault_id\":flow.login.source.vault_id,\t   \"xlink_vault_id\":flow.login.xlink.vault_id\t   },   \t   data_source\t])\t",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.jsonata",
                "pt": "msg",
                "to": "flow.instruction.instruction.jsonata",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "base_data",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 2540,
        "wires": [
            [
                "525560c0011b84e1"
            ]
        ]
    },
    {
        "id": "b8ae216cc6313388",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "037851cd06f5fc65",
        "name": "prepare update xlink",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$merge(\t   [\t       payload,\t       {\t           \"bound_source_major_version__v\":loop.update_xlink.source_ver.major_version_number__v,\t           \"bound_source_minor_version__v\":loop.update_xlink.source_ver.minor_version_number__v,\t           \"source_document_id__v\": loop.update_xlink.source_ver.id,\t           \"source_vault_id__v\": flow.login.source.vault_id,\t           \"source_binding_rule__v\":\"Specific document version\"\t       }\t   ]\t)",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "loop.update_result",
                "pt": "msg",
                "to": "payload /*$merge([payload,{\"id\":loop.update_xlink.xlink.id}])*/",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.doc_id",
                "pt": "msg",
                "to": "loop.update_xlink.xlink_ver.id",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.major_version",
                "pt": "msg",
                "to": "loop.update_xlink.xlink_ver.major_version_number__v",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.minor_version",
                "pt": "msg",
                "to": "loop.update_xlink.xlink_ver.minor_version_number__v",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 2600,
        "wires": [
            [
                "69850e2055da90d7",
                "d497b7f0a2a80408"
            ]
        ]
    },
    {
        "id": "d497b7f0a2a80408",
        "type": "subflow:743f388ad8cf50d6",
        "z": "3267d34c9be8d15b",
        "g": "037851cd06f5fc65",
        "name": "update crosslink draft version",
        "x": 1840,
        "y": 2600,
        "wires": [
            [
                "2baf56e181b3a81b"
            ],
            [
                "22f771342a04e34d"
            ]
        ]
    },
    {
        "id": "93d3972a25eaec91",
        "type": "link out",
        "z": "3267d34c9be8d15b",
        "g": "037851cd06f5fc65",
        "name": "update xlink out",
        "mode": "return",
        "links": [],
        "x": 1395,
        "y": 2600,
        "wires": []
    },
    {
        "id": "2baf56e181b3a81b",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "037851cd06f5fc65",
        "name": "update xlink in flow.xlink.doc_vers",
        "rules": [
            {
                "t": "set",
                "p": "flow.xlink.doc_vers",
                "pt": "msg",
                "to": "(\t$vid:=$$.loop.update_xlink.xlink_ver.version_id;\t    $append(\t        flow.xlink.doc_vers[$not(version_id=$vid)],\t        $merge(\t            [\t                flow.xlink.doc_vers[version_id=$vid],\t                $$.loop.update_result,\t                {\t                    \"responseStatus\":$$.payload.responseStatus,\t                    \"responseMessage\":$$.payload.responseMessage,\t                    \"source_version_id\":$$.loop.update_result.source_document_id__v & \"_\" & $$.loop.update_result.bound_source_major_version__v & \"_\" & $$.loop.update_result.bound_source_minor_version__v,\t                    \"sort_bound_version\": $$.loop.update_result.bound_source_major_version__v*10000 + $$.loop.update_result.bound_source_minor_version__v,\t                    \"version_modified_date__v\": $now(),\t                    \"xlink_updated\": true\t\t                }\t            ]\t        )\t    )\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2220,
        "y": 2600,
        "wires": [
            [
                "055b58f8c76fdbf1"
            ]
        ]
    },
    {
        "id": "69850e2055da90d7",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 279",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2570,
        "y": 2520,
        "wires": []
    },
    {
        "id": "66a3701619ae33b4",
        "type": "link out",
        "z": "3267d34c9be8d15b",
        "g": "b018f6b429583e1c",
        "name": "error out",
        "mode": "link",
        "links": [
            "6e23b29b8f76aa72",
            "d27931e31cae90f8"
        ],
        "x": 2305,
        "y": 2700,
        "wires": []
    },
    {
        "id": "04519a2cb4965445",
        "type": "switch",
        "z": "3267d34c9be8d15b",
        "g": "b018f6b429583e1c",
        "name": "while approvals",
        "property": "loop.approval_counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1260,
        "y": 2760,
        "wires": [
            [
                "074ba603dddbd0bb"
            ],
            [
                "67867b9d8d1de8e3"
            ]
        ]
    },
    {
        "id": "eb5a7974bafe12d8",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "b018f6b429583e1c",
        "name": "next approval",
        "rules": [
            {
                "t": "set",
                "p": "loop.approval_counter",
                "pt": "msg",
                "to": "loop.approval_counter-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 2820,
        "wires": [
            [
                "04519a2cb4965445"
            ]
        ]
    },
    {
        "id": "78ef23a5f28652f8",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "b018f6b429583e1c",
        "name": "switch to xlink vault",
        "rules": [
            {
                "t": "set",
                "p": "temp.login_details",
                "pt": "msg",
                "to": "$lookup(flow.login, \"xlink\")",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "temp.login_details.client_id",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_api",
                "pt": "msg",
                "to": "temp.login_details.vault_api",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "session_id",
                "pt": "msg",
                "to": "temp.login_details.session_id",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_domain",
                "pt": "msg",
                "to": "temp.login_details.vault_domain",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "user_id",
                "pt": "msg",
                "to": "temp.login_details.user_id",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1550,
        "y": 2700,
        "wires": [
            [
                "c822caf5f1f6d3dd"
            ]
        ]
    },
    {
        "id": "c822caf5f1f6d3dd",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "b018f6b429583e1c",
        "name": "Set loop approval_counter",
        "rules": [
            {
                "t": "set",
                "p": "loop.approval_counter",
                "pt": "msg",
                "to": "$count(loop.approve_xlinks)-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1850,
        "y": 2700,
        "wires": [
            [
                "04519a2cb4965445"
            ]
        ]
    },
    {
        "id": "838c955643ab351b",
        "type": "link in",
        "z": "3267d34c9be8d15b",
        "g": "b018f6b429583e1c",
        "name": "approve xlink in",
        "links": [
            "039c9291b00c03ee"
        ],
        "x": 1285,
        "y": 2700,
        "wires": [
            [
                "78ef23a5f28652f8"
            ]
        ]
    },
    {
        "id": "67867b9d8d1de8e3",
        "type": "link out",
        "z": "3267d34c9be8d15b",
        "g": "b018f6b429583e1c",
        "name": "approve xlink out",
        "mode": "return",
        "links": [],
        "x": 1435,
        "y": 2820,
        "wires": []
    },
    {
        "id": "88924727bebcece1",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "b018f6b429583e1c",
        "name": "update xlink in flow.xlink.doc_vers",
        "rules": [
            {
                "t": "set",
                "p": "flow.xlink.doc_vers",
                "pt": "msg",
                "to": "(\t$xlink:=flow.xlink.doc_vers[version_id=$$.loop.approve_xlink.version_id];\t    $append(\t        flow.xlink.doc_vers[$not(version_id=$xlink.version_id)],\t        $merge(\t            [\t                $xlink,\t                {\t                    \"major_version_number__v\": $xlink.major_version_number__v + 1,\t                    \"minor_version_number__v\": 0,\t                    \"sort_version\": ($xlink.major_version_number__v + 1) * 10000,\t                    \"version_id\": $xlink.id & \"_\" &($xlink.major_version_number__v + 1) & \"_0\",\t                    \"responseStatus\": $$.payload.responseStatus,\t                    \"responseMessage\": $$.payload.responseMessage,\t                    \"version_modified_date__v\": $now(),\t                    \"xlink_approved\": true\t                }\t            ]\t        )\t    )\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2220,
        "y": 2820,
        "wires": [
            [
                "eb5a7974bafe12d8"
            ]
        ]
    },
    {
        "id": "074ba603dddbd0bb",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "b018f6b429583e1c",
        "name": "prepare approve xlink",
        "rules": [
            {
                "t": "set",
                "p": "loop.approve_xlink",
                "pt": "msg",
                "to": "loop.approve_xlinks[$$.loop.approval_counter].version_pairs.xlink_ver[0]",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.id",
                "pt": "msg",
                "to": "loop.approve_xlink.id",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.major_version",
                "pt": "msg",
                "to": "loop.approve_xlink.major_version_number__v",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.minor_version",
                "pt": "msg",
                "to": "loop.approve_xlink.minor_version_number__v",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.documents_or_binders",
                "pt": "msg",
                "to": "documents",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "args.name__v",
                "pt": "msg",
                "to": "flow.instruction.xlink.approval_user_action_name__v",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 2760,
        "wires": [
            [
                "ad8b94371936c0f3"
            ]
        ]
    },
    {
        "id": "ad8b94371936c0f3",
        "type": "brave-initiate-user-action",
        "z": "3267d34c9be8d15b",
        "g": "b018f6b429583e1c",
        "name": "",
        "x": 1830,
        "y": 2760,
        "wires": [
            [
                "a30f7ac0753fe8a2",
                "88924727bebcece1"
            ],
            [
                "b389816e3404d397"
            ]
        ]
    },
    {
        "id": "a30f7ac0753fe8a2",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 281",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2459.333251953125,
        "y": 2741.33349609375,
        "wires": []
    },
    {
        "id": "b389816e3404d397",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 282",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2470,
        "y": 2780,
        "wires": []
    },
    {
        "id": "ddb8a98a06a740f2",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 280",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 2220,
        "wires": []
    },
    {
        "id": "5aa40a1026365147",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 283",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 2640,
        "wires": []
    },
    {
        "id": "164560a5ce4ae4cb",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "c6ebf848c0b01bb2",
        "name": "Set updated Vers Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$join(\t    [\t        \"SELECT\", \t        (\t            $join(\t                $distinct(\t                    $append(\t                        [\t                            \"id\",\t                            \"name__v\",\t                            \"title__v\",\t                            \"version_id\",\t                            \"major_version_number__v\",\t                            \"minor_version_number__v\",\t                            \"version_modified_date__v\",\t                            \"subtype__v\",\t                            \"classification__v\",\t                            \"type__v\"\t                        ],\t                        flow.instruction.source.select\t                    )\t                ),\t                \", \"\t            )\t        ),\t        \"FROM ALLVERSIONS documents\",\t        \"WHERE crosslink__v = false\", \t        /*set the query interval between last run and now, shifted 1 Minute back to avoid any overlaps with ongoing write processes\t        use 1 second overlap between 2 runs to avoid any complications with potential rounding errors worst case an update would be processed twice*/\t        \"AND version_modified_date__v > '\" & $fromMillis(flow.instruction.last_run - 61000,'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].000Z') & \"'\",\t        \"AND version_modified_date__v < '\" & $fromMillis(flow.instruction.this_run - 60000,'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].000Z') & \"'\",\t        (flow.instruction.source.where?\"AND (\" & flow.instruction.source.where & \")\")\t    ], \" \"\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 880,
        "wires": [
            [
                "9b377aafde884640"
            ]
        ]
    },
    {
        "id": "85c5e43fe42198f1",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "c6ebf848c0b01bb2",
        "name": "set updated source doc/vers",
        "rules": [
            {
                "t": "set",
                "p": "flow.source.doc_vers",
                "pt": "msg",
                "to": "$append(\t    $$.flow.source.doc_vers,\t    payload.data@$d[$not($d.version_id in $$.flow.source.doc_vers.version_id)].\t        $merge([\t            $d, \t            {\"sort_version\":$d.major_version_number__v*10000+$d.minor_version_number__v, \t            \"query_source\": \"modified\"}\t            ]\t        ))\t",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1700,
        "y": 880,
        "wires": [
            [
                "db313c314d0f44a5"
            ]
        ]
    },
    {
        "id": "db313c314d0f44a5",
        "type": "switch",
        "z": "3267d34c9be8d15b",
        "g": "c6ebf848c0b01bb2",
        "name": "check if new or updated source document or versions returned",
        "property": "$count(flow.source.doc_vers)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 910,
        "y": 940,
        "wires": [
            [
                "f1c432ba3fc9ad46"
            ],
            [
                "27778e9b3445c87f"
            ]
        ]
    },
    {
        "id": "9b377aafde884640",
        "type": "brave-vql-query",
        "z": "3267d34c9be8d15b",
        "g": "c6ebf848c0b01bb2",
        "name": "",
        "x": 1270,
        "y": 880,
        "wires": [
            [
                "85c5e43fe42198f1",
                "cba2f7db37dffc4d"
            ],
            []
        ]
    },
    {
        "id": "9f11952d3f16129c",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "25f63cd1ce156e24",
        "name": "prepare create new draft",
        "rules": [
            {
                "t": "set",
                "p": "loop.description",
                "pt": "msg",
                "to": "loop.new_source_version.sort_version <= loop.xlink_latest_ver.sort_version?\t\"error\"\t:\t    (loop.new_source_version.sort_version = loop.xlink_latest_ver.sort_version+1 /*a simple single upversioning of draft*/\t    or \t    (\t        loop.new_source_version.minor_version_number__v = 0\t        and \t        loop.new_source_version.major_version_number__v = loop.xlink_latest_ver.major_version_number__v + 1\t    )/*an upversioning to an approved version*/\t    )? \t    loop.new_source_version.id & \"_\" & loop.new_source_version.major_version_number__v & \"_\" & loop.new_source_version.minor_version_number__v /*for the simple case, write the target versions_id into description__v*/\t    :\t        (loop.new_source_version.sort_version > loop.xlink_latest_ver.sort_version+1\t        and\t        loop.new_source_version.major_version_number__v = loop.xlink_latest_ver.major_version_number__v)? /*create a placeholder minor version*/\t        \"placeholder minor version\"\t        :\t        \"placeholder major version\"\t",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "loop.expected_xlink_sort_version",
                "pt": "msg",
                "to": "loop.xlink_latest_ver.sort_version+1",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"createDraft\": \"latestContent\",\t   \"description__v\": loop.description\t}",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.doc_id",
                "pt": "msg",
                "to": "loop.xlink_latest_ver.id",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1610,
        "y": 3040,
        "wires": [
            [
                "3640eda67cb18c9b",
                "c8a8f85f790c48fd",
                "9e5eb81b5288595e"
            ]
        ]
    },
    {
        "id": "2c93528756f2e1c0",
        "type": "link out",
        "z": "3267d34c9be8d15b",
        "g": "25f63cd1ce156e24",
        "name": "error out",
        "mode": "link",
        "links": [
            "d27931e31cae90f8"
        ],
        "x": 2305,
        "y": 2920,
        "wires": []
    },
    {
        "id": "3e794719248359d7",
        "type": "brave-create-single-document-version",
        "z": "3267d34c9be8d15b",
        "g": "25f63cd1ce156e24",
        "name": "",
        "x": 2330,
        "y": 3040,
        "wires": [
            [
                "90628a1f3e0a33c8"
            ],
            [
                "3640eda67cb18c9b"
            ]
        ]
    },
    {
        "id": "55c0cb6d079de5f7",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "g": "25f63cd1ce156e24",
        "name": "debug 284",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2510,
        "y": 2940,
        "wires": []
    },
    {
        "id": "80910e96181b4769",
        "type": "link in",
        "z": "3267d34c9be8d15b",
        "g": "25f63cd1ce156e24",
        "name": "create xlink version in",
        "links": [
            "be7728c806b6de4f"
        ],
        "x": 1205,
        "y": 2920,
        "wires": [
            [
                "462b43452f6f93c8"
            ]
        ]
    },
    {
        "id": "c646d60d6b8d1fe7",
        "type": "link out",
        "z": "3267d34c9be8d15b",
        "g": "25f63cd1ce156e24",
        "name": "create xlink version out",
        "mode": "return",
        "links": [],
        "x": 1385,
        "y": 3040,
        "wires": []
    },
    {
        "id": "bffb231a9dbf2e07",
        "type": "switch",
        "z": "3267d34c9be8d15b",
        "g": "25f63cd1ce156e24",
        "name": "while new vers",
        "property": "loop.nv_counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1260,
        "y": 2980,
        "wires": [
            [
                "d3c0565eaeed8613"
            ],
            [
                "c646d60d6b8d1fe7"
            ]
        ]
    },
    {
        "id": "9d64e34ba6e052b5",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "25f63cd1ce156e24",
        "name": "next doc with new vers",
        "rules": [
            {
                "t": "set",
                "p": "loop.nv_counter",
                "pt": "msg",
                "to": "loop.nv_counter-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 3160,
        "wires": [
            [
                "bffb231a9dbf2e07"
            ]
        ]
    },
    {
        "id": "462b43452f6f93c8",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "25f63cd1ce156e24",
        "name": "switch to xlink vault",
        "rules": [
            {
                "t": "set",
                "p": "temp.login_details",
                "pt": "msg",
                "to": "$lookup(flow.login, \"xlink\")",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "temp.login_details.client_id",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_api",
                "pt": "msg",
                "to": "temp.login_details.vault_api",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "session_id",
                "pt": "msg",
                "to": "temp.login_details.session_id",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_domain",
                "pt": "msg",
                "to": "temp.login_details.vault_domain",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "user_id",
                "pt": "msg",
                "to": "temp.login_details.user_id",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1590,
        "y": 2920,
        "wires": [
            [
                "795bdebf223316ea"
            ]
        ]
    },
    {
        "id": "795bdebf223316ea",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "25f63cd1ce156e24",
        "name": "Set loop nv_counter",
        "rules": [
            {
                "t": "set",
                "p": "loop.nv_counter",
                "pt": "msg",
                "to": "$count(loop.new_versions)-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1940,
        "y": 2920,
        "wires": [
            [
                "bffb231a9dbf2e07"
            ]
        ]
    },
    {
        "id": "d3c0565eaeed8613",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "25f63cd1ce156e24",
        "name": "Set new_version and xlink latest version",
        "rules": [
            {
                "t": "set",
                "p": "loop.new_version",
                "pt": "msg",
                "to": "loop.new_versions[$$.loop.nv_counter]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "loop.xlink_latest_ver",
                "pt": "msg",
                "to": "loop.new_version.latest_xlink",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "loop.new_source_version",
                "pt": "msg",
                "to": "loop.new_version.version_pairs.source_ver^(sort_version)[0]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 2980,
        "wires": [
            [
                "55c0cb6d079de5f7",
                "9f11952d3f16129c"
            ]
        ]
    },
    {
        "id": "7ad40c5a80e9fc92",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 335",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2310,
        "y": 140,
        "wires": []
    },
    {
        "id": "b2e7c3c6afc1c1c5",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "25f63cd1ce156e24",
        "name": "Handle Version Error",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2300,
        "y": 2980,
        "wires": [
            [
                "9e4e3a2c7809afaf"
            ]
        ]
    },
    {
        "id": "7851c3f22cc0d19f",
        "type": "switch",
        "z": "3267d34c9be8d15b",
        "g": "25f63cd1ce156e24",
        "name": "",
        "property": "true",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "jsonata_exp",
                "v": "loop.expected_xlink_sort_version != loop.xlink_latest_ver.sort_version",
                "vt": "jsonata"
            },
            {
                "t": "jsonata_exp",
                "v": "loop.description = \"placeholder minor version\"",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 2250,
        "y": 3100,
        "wires": [
            [
                "ee7eedc7bf65380b"
            ],
            [
                "55c0cb6d079de5f7",
                "9f11952d3f16129c"
            ],
            [
                "9d64e34ba6e052b5",
                "2d77390cc4eb7dbf"
            ]
        ]
    },
    {
        "id": "96f567fc72b8627e",
        "type": "link out",
        "z": "3267d34c9be8d15b",
        "name": "re-evaluate status",
        "mode": "link",
        "links": [
            "18a61a65d477fb95"
        ],
        "x": 875,
        "y": 2320,
        "wires": []
    },
    {
        "id": "41ecf0ec3f5b2e10",
        "type": "link call",
        "z": "3267d34c9be8d15b",
        "name": "new docs",
        "links": [
            "01b5de87906e4de1"
        ],
        "linkType": "static",
        "timeout": "600",
        "x": 920,
        "y": 2260,
        "wires": [
            [
                "96f567fc72b8627e"
            ]
        ]
    },
    {
        "id": "dee55638234b7123",
        "type": "link call",
        "z": "3267d34c9be8d15b",
        "name": "update xlinks",
        "links": [
            "e8106694503bb438"
        ],
        "linkType": "static",
        "timeout": "600",
        "x": 930,
        "y": 2460,
        "wires": [
            [
                "c1d857993e59759b"
            ]
        ]
    },
    {
        "id": "c1d857993e59759b",
        "type": "link out",
        "z": "3267d34c9be8d15b",
        "name": "re-evaluate status",
        "mode": "link",
        "links": [
            "18a61a65d477fb95"
        ],
        "x": 875,
        "y": 2520,
        "wires": []
    },
    {
        "id": "c207b4c9f2877a8d",
        "type": "link call",
        "z": "3267d34c9be8d15b",
        "name": "approve xlinks",
        "links": [
            "838c955643ab351b"
        ],
        "linkType": "static",
        "timeout": "600",
        "x": 940,
        "y": 2700,
        "wires": [
            [
                "9a93388d271e1234"
            ]
        ]
    },
    {
        "id": "9a93388d271e1234",
        "type": "link out",
        "z": "3267d34c9be8d15b",
        "name": "re-evaluate status",
        "mode": "link",
        "links": [
            "18a61a65d477fb95"
        ],
        "x": 875,
        "y": 2760,
        "wires": []
    },
    {
        "id": "6c35e336e9c4101b",
        "type": "link out",
        "z": "3267d34c9be8d15b",
        "name": "re-evaluate status",
        "mode": "link",
        "links": [
            "18a61a65d477fb95"
        ],
        "x": 875,
        "y": 2980,
        "wires": []
    },
    {
        "id": "752121345ec56b6a",
        "type": "link call",
        "z": "3267d34c9be8d15b",
        "name": "create new xlink version",
        "links": [
            "80910e96181b4769"
        ],
        "linkType": "static",
        "timeout": "600",
        "x": 970,
        "y": 2920,
        "wires": [
            [
                "6c35e336e9c4101b"
            ]
        ]
    },
    {
        "id": "95cbbe1ded2e087b",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 336",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 2860,
        "wires": []
    },
    {
        "id": "9e4e3a2c7809afaf",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 337",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2730,
        "y": 2900,
        "wires": []
    },
    {
        "id": "d4ede0621b8e4a67",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 338",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2730,
        "y": 2960,
        "wires": []
    },
    {
        "id": "3640eda67cb18c9b",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 339",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2630,
        "y": 2840,
        "wires": []
    },
    {
        "id": "ee7eedc7bf65380b",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 340",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2730,
        "y": 3020,
        "wires": []
    },
    {
        "id": "e3fbf3c997a1d522",
        "type": "inject",
        "z": "3267d34c9be8d15b",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 290,
        "y": 160,
        "wires": [
            [
                "56f8c9217e41fc9b"
            ]
        ]
    },
    {
        "id": "7ade8842de9a7a64",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 341",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2150,
        "y": 760,
        "wires": []
    },
    {
        "id": "cba2f7db37dffc4d",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 342",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2150,
        "y": 860,
        "wires": []
    },
    {
        "id": "b360eaa961871022",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 343",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 3280,
        "wires": []
    },
    {
        "id": "b447b1e67e666a8a",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "name": "pair source and xlink to doc_pairs",
        "rules": [
            {
                "t": "set",
                "p": "loop",
                "pt": "msg",
                "to": "{\t    \"new_sources\": flow.doc_pairs[xlink_id?false:true][],\t    \"new_versions\": (flow.doc_pairs@$docpair.\t                            {   \"source_id\": $docpair.source_id,\t                                \"xlink_id\": $docpair.xlink_id,\t                                \"latest_xlink\": $docpair.latest_xlink,\t                                \"first_source\": $docpair.first_source,\t                                \"version_pairs\":\t                                    $docpair.version_pairs@$verpair[$verpair.xlink_ver?false:true].{\t                                    \"source_ver\":$verpair.source_ver,\t                                    \"xlink_ver\":$verpair.xlink_ver\t                                    }[]\t                                    })[version_pairs][],\t    \"approve_xlinks\": (flow.doc_pairs@$docpair.\t                            {   \"source_id\": $docpair.source_id,\t                                \"xlink_id\": $docpair.xlink_id,\t                                \"latest_xlink\": $docpair.latest_xlink,\t                                \"first_source\": $docpair.first_source,\t                                \"version_pairs\":\t                                    $append(\t                                        $docpair.version_pairs@$verpair[$verpair.xlink_ver.bound_source_minor_version__v=0 and $verpair.xlink_ver.minor_version_number__v>0\t                                        and $verpair.xlink_ver.bound_source_major_version__v = $verpair.xlink_ver.major_version_number__v+1].{\t                                        \"source_ver\":$verpair.source_ver,\t                                        \"xlink_ver\":$verpair.xlink_ver\t                                        }[],\t                                        [{\"xlink_ver\":$$.flow.xlink.doc_vers[id=$docpair.xlink_id]^(>sort_version)[0][description__v=\"placeholder major version\" and $not(xlink_approved)]}])\t                                    })[version_pairs][],\t    \"update_xlinks\": (flow.doc_pairs@$docpair.\t                            {   \"source_id\": $docpair.source_id,\t                                \"xlink_id\": $docpair.xlink_id,\t                                \"latest_xlink\": $docpair.latest_xlink,\t                                \"first_source\": $docpair.first_source,\t                                \"version_pairs\":\t                                    $docpair.version_pairs@$verpair[$verpair.xlink_ver and $not($verpair.xlink_ver.xlink_created or $verpair.xlink_ver.xlink_updated)].{\t                                    \"source_ver\":$verpair.source_ver,\t                                    \"xlink_ver\":$verpair.xlink_ver\t                                    }[]\t                                    })[version_pairs][],\t    \"matching_xlinks\": (flow.doc_pairs@$docpair.\t                            {   \"source_id\": $docpair.source_id,\t                                \"xlink_id\": $docpair.xlink_id,\t                                \"latest_xlink\": $docpair.latest_xlink,\t                                \"first_source\": $docpair.first_source,\t                                \"version_pairs\":\t                                    $docpair.version_pairs@$verpair[$verpair.xlink_ver.sort_version = $verpair.source_ver.sort_version and $verpair.xlink_ver.sort_version = $verpair.xlink_ver.sort_bound_version].{\t                                    \"source_ver\":$verpair.source_ver,\t                                    \"xlink_ver\":$verpair.xlink_ver\t                                    }[]\t                                    })[version_pairs][]\t\t}\t",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "loop.unmatched_xlinks",
                "pt": "msg",
                "to": "(\t   $ma_xl_vids:=loop.matching_xlinks.version_pairs.xlink_ver.version_id;\t   {\t       \"unmatched_xlinks\": flow.xlink.doc_vers@$dv[\t           $not(\t               $dv.version_id in $ma_xl_vids  /*xlink version is in matching list*/\t               or \t               $dv.sort_version < $$.flow.doc_pairs[xlink_id=$dv.id].first_source.sort_version   /*xlink version is older than the source version in updating scope*/\t           )\t       ].$dv.version_id\t\t   }\t)\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 2840,
        "wires": [
            [
                "29715e365a4ec3f9",
                "e9c9c43d84928588"
            ]
        ]
    },
    {
        "id": "c8a8f85f790c48fd",
        "type": "switch",
        "z": "3267d34c9be8d15b",
        "g": "25f63cd1ce156e24",
        "name": "source version higher than latest xlink version",
        "property": "loop.description != \"error\"",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1970,
        "y": 3040,
        "wires": [
            [
                "d4ede0621b8e4a67",
                "3e794719248359d7"
            ],
            [
                "b2e7c3c6afc1c1c5"
            ]
        ]
    },
    {
        "id": "90628a1f3e0a33c8",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "25f63cd1ce156e24",
        "name": "add created xlink to flow.xlink.doc_vers",
        "rules": [
            {
                "t": "set",
                "p": "loop.xlink_latest_ver",
                "pt": "msg",
                "to": "    {\t   \"major_version_number__v\":payload.major_version_number__v,\t   \"minor_version_number__v\":payload.minor_version_number__v,\t   \"sort_version\": 10000*payload.major_version_number__v + payload.minor_version_number__v,\t   \"id\": loop.xlink_latest_ver.id,\t   \"version_id\":          loop.xlink_latest_ver.id & \"_\" &         payload.major_version_number__v &\t   \"_\" &         payload.minor_version_number__v,\t   \"responseStatus\": $$.payload.responseStatus,\t   \"responseMessage\": $$.payload.responseMessage,\t   \"source_version_id\": $$.loop.new_version.version_id,\t   \"sort_bound_version\": $$.loop.new_xlink.bound_source_major_version__v*10000 + $$.loop.new_xlink.bound_source_minor_version__v,\t   \"version_modified_date__v\": $now(),\t   \"xlink_version_created\": true,\t   \"description__v\": $$.loop.description     \t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "flow.xlink.doc_vers",
                "pt": "msg",
                "to": "$append(\t   $$.flow.xlink.doc_vers,\t   loop.xlink_latest_ver\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1950,
        "y": 3100,
        "wires": [
            [
                "7851c3f22cc0d19f"
            ]
        ]
    },
    {
        "id": "36cb1c960b6626c9",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 344",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 3140,
        "wires": []
    },
    {
        "id": "525560c0011b84e1",
        "type": "switch",
        "z": "3267d34c9be8d15b",
        "g": "037851cd06f5fc65",
        "name": "check if xlink is provided",
        "property": "true",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "jsonata_exp",
                "v": "$exists(loop.update_xlink.xlink_ver)",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1830,
        "y": 2540,
        "wires": [
            [
                "c5710908ca22bd99"
            ],
            [
                "055b58f8c76fdbf1"
            ]
        ]
    },
    {
        "id": "9e5eb81b5288595e",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 345",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "loop.description",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2662,
        "y": 2785,
        "wires": []
    },
    {
        "id": "2d77390cc4eb7dbf",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 346",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2750,
        "y": 3100,
        "wires": []
    },
    {
        "id": "aefed9d4c3ba03ad",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "name": "prepare set last run",
        "rules": [
            {
                "t": "set",
                "p": "args.topic",
                "pt": "msg",
                "to": "$replace(\t   $join(\t       [\t           \"LOG__\" & client_id,\t           flow.instruction.name__v,\t           \"last_run\",\t           \"h\"        \t       ],\t       \":\"    \t   ),\t   /[ \"']/,\t   \"_\" \t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "args.method",
                "pt": "msg",
                "to": "SET",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "flow.instruction.this_run",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 3520,
        "wires": [
            [
                "446e1ec30c336e72",
                "70b6302c7fdf7b33"
            ]
        ]
    },
    {
        "id": "446e1ec30c336e72",
        "type": "brave-redis-queue",
        "z": "3267d34c9be8d15b",
        "name": "",
        "x": 1390,
        "y": 3520,
        "wires": [
            [
                "70b6302c7fdf7b33"
            ],
            [
                "70b6302c7fdf7b33"
            ]
        ]
    },
    {
        "id": "70b6302c7fdf7b33",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 349",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 3420,
        "wires": []
    },
    {
        "id": "56f8c9217e41fc9b",
        "type": "change",
        "z": "3267d34c9be8d15b",
        "g": "811963b2b29fb32c",
        "name": "User pw and instruction vault",
        "rules": [
            {
                "t": "set",
                "p": "flow.login.username",
                "pt": "msg",
                "to": "di.wang3@bayersbx.com",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flow.login.password",
                "pt": "msg",
                "to": "diw@Bayer12138",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "create_xlink",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flow.login.instruction.vault_domain",
                "pt": "msg",
                "to": "bayersbx-bayer-ph-rim-r2-scratchbox-01.veevavault.com",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 180,
        "wires": [
            [
                "2e8c402ed6421625"
            ]
        ]
    },
    {
        "id": "105c2ce0c6029e80",
        "type": "subflow:594e48a4aa27c6b6",
        "z": "3267d34c9be8d15b",
        "name": "Keep this to make sure redis works",
        "x": 2940,
        "y": 100,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6b25258ab0f1af3d",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 350",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1810,
        "y": 80,
        "wires": []
    },
    {
        "id": "e3170974af286ec4",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 430",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2090,
        "y": 260,
        "wires": []
    },
    {
        "id": "b306110f4e66b1dc",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "g": "2960b03e650ec0db",
        "name": "debug 431",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 1460,
        "wires": []
    },
    {
        "id": "7b1a9eedbf6cea7a",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 432",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2130,
        "y": 360,
        "wires": []
    },
    {
        "id": "a1b52fa75089ddb0",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 433",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2130,
        "y": 420,
        "wires": []
    },
    {
        "id": "6a392db82d34c73b",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 434",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2130,
        "y": 480,
        "wires": []
    },
    {
        "id": "59b8e7c2bc6451c8",
        "type": "debug",
        "z": "3267d34c9be8d15b",
        "name": "debug 475",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2503.75,
        "y": 2465,
        "wires": []
    },
    {
        "id": "85640bd8837293e1",
        "type": "e-mail",
        "z": "b0c6d4cf1e903799",
        "server": "ebr.bayer.com",
        "port": "2525",
        "authtype": "BASIC",
        "saslformat": false,
        "token": "token",
        "secure": false,
        "tls": true,
        "name": "di.wang3@bayer.com",
        "dname": "test mail",
        "x": 620,
        "y": 500,
        "wires": []
    },
    {
        "id": "ae865b4436f4ee7c",
        "type": "inject",
        "z": "b0c6d4cf1e903799",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 460,
        "wires": [
            [
                "9a28dcc04200b78e"
            ]
        ]
    },
    {
        "id": "c250552ef17f95cf",
        "type": "debug",
        "z": "b0c6d4cf1e903799",
        "name": "debug 476",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 400,
        "wires": []
    },
    {
        "id": "9a28dcc04200b78e",
        "type": "change",
        "z": "b0c6d4cf1e903799",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "test content",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "test topic",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "token",
                "pt": "msg",
                "to": "eyJ0eXAiOiJKV1QiLCJub25jZSI6ImJBLXkwTkhOd0gzWmxxMlg2LV9HdWNnYWx1eS1JcEpaWS1hNFlsNkhrcTgiLCJhbGciOiJSUzI1NiIsIng1dCI6Ii1LSTNROW5OUjdiUm9meG1lWm9YcWJIWkdldyIsImtpZCI6Ii1LSTNROW5OUjdiUm9meG1lWm9YcWJIWkdldyJ9",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "from",
                "pt": "msg",
                "to": "di.wang3@bayer.com",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 480,
        "wires": [
            [
                "85640bd8837293e1",
                "c250552ef17f95cf"
            ]
        ]
    },
    {
        "id": "21f94f1b917ef214",
        "type": "split",
        "z": "32ccf302392ab325",
        "name": "Split Instruction Job",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 530,
        "y": 600,
        "wires": [
            [
                "125e3939a8087b54"
            ]
        ]
    },
    {
        "id": "7c61b420098faa39",
        "type": "change",
        "z": "32ccf302392ab325",
        "name": "nothing to process",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 190,
        "y": 1200,
        "wires": [
            [
                "cf3b63f7cf60b221"
            ]
        ]
    },
    {
        "id": "6bbb6dabce62d008",
        "type": "switch",
        "z": "32ccf302392ab325",
        "name": "instructions found?",
        "property": "$count(payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 600,
        "wires": [
            [
                "21f94f1b917ef214"
            ],
            [
                "8241817e88ece79e"
            ]
        ]
    },
    {
        "id": "a4a654ba0fa1d4aa",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "429ca0f28c6eb552",
        "name": "get automation configuration XLink Instruction objects",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"SELECT id, name__v \"&\t\"FROM automation_configuration__c \"&\t\"WHERE automation__c = 'Create XLink Instruction \" & flow.login.instruction.subset & \"' AND status__v = 'active__v'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 540,
        "wires": [
            [
                "5d4e65bff3be5948"
            ]
        ]
    },
    {
        "id": "4fa716b595bc5a73",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "429ca0f28c6eb552",
        "name": "Set payload to aray of XLink instructions",
        "rules": [
            {
                "t": "set",
                "p": "flow.instructions",
                "pt": "msg",
                "to": "payload.data",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "flow.instructions[]",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1760,
        "y": 540,
        "wires": [
            [
                "6bbb6dabce62d008",
                "a6173c01ed59b86f"
            ]
        ]
    },
    {
        "id": "c2f38571712ac056",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "81e9aec5f845a51a",
        "name": "Set New Doc/Vers Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$join(\t    [\t        \"SELECT\", \t        (\t            $join(\t                $distinct(\t                    $append(\t                        [\t                            \"id\",\t                            \"name__v\",\t                            \"title__v\",\t                            \"version_id\",\t                            \"major_version_number__v\",\t                            \"minor_version_number__v\",\t                            \"version_modified_date__v\",\t                            \"subtype__v\",\t                            \"classification__v\",\t                            \"type__v\",\t                            \"pages__v\"\t                        ],\t                        flow.instruction.source.select\t                    )\t                ),\t                \", \"\t            )\t        ),\t        \"FROM ALLVERSIONS documents\",\t        \"WHERE crosslink__v = false\", \t        \"AND binder__v = false\",\t        /*set the query interval between last run and now, shifted 2 Minute back to avoid any overlaps with ongoing write processes\t        use 1 second overlap between 2 runs to avoid any complications with potential rounding errors worst case an update would be processed twice*/\t        \"AND version_creation_date__v > '\" & $fromMillis(flow.instruction.last_run - 10,'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].000Z') & \"'\",\t        \"AND version_creation_date__v < '\" & $fromMillis(flow.instruction.this_run - 10,'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].000Z') & \"'\",\t        (flow.instruction.source.where?\"AND (\" & flow.instruction.source.where & \")\")\t    ], \" \"\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 1020,
        "wires": [
            [
                "a1a5eb79e0febac3",
                "901c4527bc686831"
            ]
        ]
    },
    {
        "id": "d79d102ad4097dd6",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "81e9aec5f845a51a",
        "name": "set new source docs/vers",
        "rules": [
            {
                "t": "set",
                "p": "flow.source",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "flow.source.doc_vers",
                "pt": "msg",
                "to": "payload.data@$d.\t    $merge([\t        $d, \t        {\"sort_version\":$d.major_version_number__v*10000+$d.minor_version_number__v,\t        \"query_source\": \"created\"}\t        ]\t    )\t",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1710,
        "y": 1020,
        "wires": [
            [
                "fceb3d3d2e109212",
                "901c4527bc686831"
            ]
        ]
    },
    {
        "id": "1f7bb3f9cee07698",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "efd44d58605fc3aa",
        "name": "set xlink.doc_vers",
        "rules": [
            {
                "t": "set",
                "p": "flow.xlink",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "flow.xlink.doc_vers",
                "pt": "msg",
                "to": "payload.data@$d.\t    $merge(\t        [\t            $d,\t            {\t                \"source_version_id\":$d.source_document_id__v&\"_\"&$d.bound_source_major_version__v&\"_\"&$d.bound_source_minor_version__v,\t                \"sort_version\": $d.major_version_number__v*10000 + $d.minor_version_number__v,\t                \"sort_bound_version\": $d.bound_source_major_version__v*10000 + $d.bound_source_minor_version__v\t            }\t        ]\t    )",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1690,
        "y": 1240,
        "wires": [
            [
                "60d92ecbd137ffc5",
                "c653bd43402589c0"
            ]
        ]
    },
    {
        "id": "5c0e24dc64906e80",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "41304ce80e23ede0",
        "name": "set array of objects",
        "rules": [
            {
                "t": "set",
                "p": "loop.objects",
                "pt": "msg",
                "to": "$lookup(flow.instruction, loop.vault).objects",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "loop.object_counter",
                "pt": "msg",
                "to": "$count(loop.objects)-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 1460,
        "wires": [
            [
                "43d96a0c94607243"
            ]
        ]
    },
    {
        "id": "8e6f0e445fe834fd",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "c9d97f19c3150a81",
        "name": "set object name and fields",
        "rules": [
            {
                "t": "set",
                "p": "loop.object",
                "pt": "msg",
                "to": "loop.objects[$$.loop.object_counter]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "loop.fields",
                "pt": "msg",
                "to": "$distinct(\t   $append(\t       [\"id\",\"name__v\"],\t       (loop.object.fields[]?loop.object.fields[]:[])\t       )\t   )\t",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"SELECT \" & $join(loop.fields, \", \") &\t\" FROM \" & loop.object.object_name/*&\t\" WHERE modified_date__v > '\" & \t$fromMillis(last_run-60000, '[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].000Z') & \t\"'\"*/",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 1540,
        "wires": [
            [
                "a34ef488b787110f"
            ]
        ]
    },
    {
        "id": "a0e45cab2802cf07",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "c9d97f19c3150a81",
        "name": "set objects",
        "rules": [
            {
                "t": "move",
                "p": "payload.data",
                "pt": "msg",
                "to": "loop.result",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "loop.result",
                "pt": "msg",
                "to": "(\t   $upd_ids:= loop.result.id;\t   $append(\t       loop.redis_result.data[$not(id in $upd_ids)][], /*take those from redis source which have not been updated*/\t       loop.result[] /*append the updated*/\t   )\t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "loop.results",
                "pt": "msg",
                "to": "$merge(\t        [\t            loop.results,\t            {loop.object.object_name:loop.result}\t        ]\t    )\t",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "loop.updated",
                "pt": "msg",
                "to": "$boolean($count(loop.result))",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1850,
        "y": 1600,
        "wires": [
            [
                "5f16de4c7ec4bf71",
                "b89ccd2b6a4fe943"
            ]
        ]
    },
    {
        "id": "4c2cd057f4d612dd",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "56bca0108c880039",
        "name": "process in the following order: \\n 1. new doc \\n 2. update xlink \\n 3. approve xlink \\n 4. new version \\n 5. process unmatched \\n 6. done",
        "property": "true",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "jsonata_exp",
                "v": "$count(loop.new_sources) > 0",
                "vt": "jsonata"
            },
            {
                "t": "jsonata_exp",
                "v": "$count(loop.update_xlinks) > 0",
                "vt": "jsonata"
            },
            {
                "t": "jsonata_exp",
                "v": "$count(loop.approve_xlinks) > 0",
                "vt": "jsonata"
            },
            {
                "t": "jsonata_exp",
                "v": "$count(loop.new_versions) > 0",
                "vt": "jsonata"
            },
            {
                "t": "jsonata_exp",
                "v": "$count(loop.unmatched_xlinks) > 0",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 6,
        "x": 1730,
        "y": 3100,
        "wires": [
            [
                "b587d10aedda5fcd"
            ],
            [
                "386b3e9297c89e33"
            ],
            [
                "8cea64c69e31787e"
            ],
            [
                "095d7fef212c31e5"
            ],
            [
                "d25530bf3a20932d"
            ],
            [
                "cf3b63f7cf60b221"
            ]
        ]
    },
    {
        "id": "db3791d9ed978489",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "41304ce80e23ede0",
        "name": "update flow variable",
        "rules": [
            {
                "t": "set",
                "p": "data_source",
                "pt": "msg",
                "to": "$merge([data_source,\t    {\t        loop.vault:\t        $merge([$lookup(data_source, loop.vault),\t        {\"objects\":loop.results}\t        ])\t    }\t])",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "loop.results",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 1680,
        "wires": [
            [
                "7040b85238e089d1",
                "39bdbb6eb6b7e9a6"
            ]
        ]
    },
    {
        "id": "9e5f2290ac163ac6",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "50739f124cb8563b",
        "name": "set vault_domain to source vault",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"vault_domain\": flow.instruction.source.vault_domain,\t    \"username\": flow.login.username,\t    \"password\": flow.login.password\t}",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_domain",
                "pt": "msg",
                "to": "payload.vault_domain",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "delete",
                "p": "vault_api",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "session_id",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "vault_id",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "user_id",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 780,
        "wires": [
            [
                "19bde3e0fb9dfb78"
            ]
        ]
    },
    {
        "id": "125e3939a8087b54",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "429ca0f28c6eb552",
        "name": "prepare get xlink instruction",
        "rules": [
            {
                "t": "set",
                "p": "flow.instruction",
                "pt": "msg",
                "to": "{\"name__v\": payload.name__v}",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "args",
                "pt": "msg",
                "to": "{\"settings_name\": flow.instruction.name__v,\t\"attachment_name\": \"xlink_instruction.json\"}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "$replace(\t   client_id & flow.instruction.name__v,\t   /[ \"']/,\t   \"_\"\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 600,
        "wires": [
            [
                "bc609eeb15ca8db3",
                "ac370157a733f606"
            ]
        ]
    },
    {
        "id": "8241817e88ece79e",
        "type": "link out",
        "z": "32ccf302392ab325",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "b17c60a28ec7cf9d"
        ],
        "x": 135,
        "y": 660,
        "wires": []
    },
    {
        "id": "04be81a30ca8b5f2",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "56418a5f1c01fec3",
        "name": "prepare login and set starttime",
        "rules": [
            {
                "t": "set",
                "p": "starttime",
                "pt": "msg",
                "to": "$now()",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.vault_domain",
                "pt": "msg",
                "to": "flow.login.instruction.vault_domain",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "payload.username",
                "pt": "msg",
                "to": "flow.login.username",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "payload.password",
                "pt": "msg",
                "to": "flow.login.password",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "\"create_xlink__\" & flow.login.instruction.subset",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 320,
        "wires": [
            [
                "5d8fcbc38bdd98ae"
            ]
        ]
    },
    {
        "id": "6d6a4fcc6fff5a7a",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "56418a5f1c01fec3",
        "name": "save settings",
        "rules": [
            {
                "t": "set",
                "p": "flow.settings",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1850,
        "y": 380,
        "wires": [
            [
                "a4a654ba0fa1d4aa",
                "91facf7f2cde805d"
            ]
        ]
    },
    {
        "id": "70cae716aaa25fda",
        "type": "subflow:fca036ab5aa23301",
        "z": "32ccf302392ab325",
        "g": "56418a5f1c01fec3",
        "name": "",
        "x": 1570,
        "y": 380,
        "wires": [
            [
                "6d6a4fcc6fff5a7a"
            ],
            [
                "cfadd0fab9ef544b",
                "c012f787da98de2b"
            ]
        ]
    },
    {
        "id": "cfadd0fab9ef544b",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "56418a5f1c01fec3",
        "name": "Error Abbort",
        "mode": "link",
        "links": [
            "65a23e1026df92f0"
        ],
        "x": 1725,
        "y": 380,
        "wires": [],
        "icon": "font-awesome/fa-hand-stop-o"
    },
    {
        "id": "777a7cc7782db188",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "56418a5f1c01fec3",
        "name": "save login",
        "rules": [
            {
                "t": "set",
                "p": "flow.login.instruction",
                "pt": "msg",
                "to": "$merge(\t   [\t       flow.login.instruction,\t       {\t           \"client_id\":    client_id,\t           \"vault_api\":    vault_api,\t           \"session_id\":   session_id,\t           \"user_id\":      user_id,\t           \"vault_id\":     vault_id,\t           \"vault_domain\": vault_domain\t       }\t   ]\t)",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1860,
        "y": 320,
        "wires": [
            [
                "70cae716aaa25fda"
            ]
        ]
    },
    {
        "id": "5d4e65bff3be5948",
        "type": "brave-vql-query",
        "z": "32ccf302392ab325",
        "g": "429ca0f28c6eb552",
        "name": "",
        "x": 1290,
        "y": 540,
        "wires": [
            [
                "4fa716b595bc5a73"
            ],
            [
                "f31ed7f84d10db2d",
                "a32cf550f15f2149"
            ]
        ]
    },
    {
        "id": "7beeedbcdbb543dd",
        "type": "debug",
        "z": "32ccf302392ab325",
        "name": "catch error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3070,
        "y": 640,
        "wires": []
    },
    {
        "id": "1b602c62a8f8490b",
        "type": "link in",
        "z": "32ccf302392ab325",
        "g": "c7efaadd103f03ab",
        "name": "Error Log and continue",
        "links": [
            "ac87a34d55764163",
            "4bbfae722449baaa",
            "55db3214a632ccd1",
            "5a051ccd4278ef54"
        ],
        "x": 2720,
        "y": 1140,
        "wires": [
            [
                "d9a2762c2e2ad88a",
                "9bb271194bb04e59"
            ]
        ],
        "l": true
    },
    {
        "id": "d9a2762c2e2ad88a",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "c7efaadd103f03ab",
        "name": "LOG to Redis",
        "rules": [
            {
                "t": "set",
                "p": "args.topic",
                "pt": "msg",
                "to": "$replace(\t   $join(\t       [\t           \"LOG__\" & client_id,\t           $string(_object_id),\t           $replace(\t               starttime?starttime:$now()\t               ,\":\",\"-\"),\t           \"WARNING\",\t           \"h\"\t       ],\t       \":\"\t   ),\t   /[ \"']/,\t   \"_\"\t)",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.method",
                "pt": "msg",
                "to": "SET",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(\t   _log,\t   {\t       \"timestamp\": $now(),\t       \"severity\": \"WARNING\",\t       \"message\": $merge($each($, function($v, $k) {($k!=\"req\" and $k!=\"res\")?{$k:$v}})),\t       \"source\":  $string(_event)\t   }\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2940,
        "y": 1140,
        "wires": [
            [
                "48fe5631df2c493f"
            ]
        ]
    },
    {
        "id": "88ffdf68af18353e",
        "type": "brave-redis-queue",
        "z": "32ccf302392ab325",
        "g": "c7efaadd103f03ab",
        "name": "",
        "x": 3270,
        "y": 1140,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "48fe5631df2c493f",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "c7efaadd103f03ab",
        "name": "set expire",
        "rules": [
            {
                "t": "set",
                "p": "args.expire",
                "pt": "msg",
                "to": "6*7*24*60*60",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3120,
        "y": 1140,
        "wires": [
            [
                "88ffdf68af18353e"
            ]
        ]
    },
    {
        "id": "140a8db09b126d12",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "112ad226549927de",
        "name": "LOG to Redis",
        "rules": [
            {
                "t": "set",
                "p": "args.topic",
                "pt": "msg",
                "to": "$replace(\t   $join(\t       [\t           \"LOG__\" & client_id,\t           $string(_object_id),\t           $replace(\t               starttime?starttime:$now()\t               ,\":\",\"-\"),\t           \"ERROR_catched\",\t           \"h\"\t       ],\t       \":\"\t   ),\t   /[ \"']/,\t   \"_\"\t)",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.method",
                "pt": "msg",
                "to": "SET",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "_log",
                "pt": "msg",
                "to": "$append(\t   _log,\t    {\t    \"timestamp\": $now(),\t    \"severity\": \"ERROR\",\t    \"message\": $merge($each($, function($v, $k) {($k!=\"req\" and $k!=\"res\")?{$k:$v}})),\t    \"source\":  \"catch error\"    \t    }\t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "_log",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2900,
        "y": 780,
        "wires": [
            [
                "63d3f29559e1ebef"
            ]
        ]
    },
    {
        "id": "16c13a2dce568692",
        "type": "catch",
        "z": "32ccf302392ab325",
        "g": "112ad226549927de",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 2680,
        "y": 780,
        "wires": [
            [
                "140a8db09b126d12",
                "7beeedbcdbb543dd"
            ]
        ]
    },
    {
        "id": "e3cf621d12ed62ba",
        "type": "brave-redis-queue",
        "z": "32ccf302392ab325",
        "g": "112ad226549927de",
        "name": "",
        "x": 3270,
        "y": 780,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "63d3f29559e1ebef",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "112ad226549927de",
        "name": "set expire",
        "rules": [
            {
                "t": "set",
                "p": "args.expire",
                "pt": "msg",
                "to": "6*7*24*60*60",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3100,
        "y": 780,
        "wires": [
            [
                "e3cf621d12ed62ba"
            ]
        ]
    },
    {
        "id": "c96ca9b21d127acd",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "5921be1c98a95c97",
        "name": "LOG to Redis",
        "rules": [
            {
                "t": "set",
                "p": "args.topic",
                "pt": "msg",
                "to": "$replace(\t   $join(\t       [\t           \"LOG__\" & client_id,\t           $string(_object_id),\t           $replace(\t               starttime?starttime:$now()\t               ,\":\",\"-\"),\t           \"INFO\",\t           \"h\"\t       ],\t       \":\"\t   ),\t   /[ \"']/,\t   \"_\"\t)",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.method",
                "pt": "msg",
                "to": "SET",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(\t   _log,\t   {\t       \"timestamp\": $now(),\t       \"severity\": \"INFO\",\t       \"message\": $merge($each($, function($v, $k) {($k!=\"req\" and $k!=\"res\")?{$k:$v}})),\t       \"source\":  $string(_event)\t   }\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2940,
        "y": 1240,
        "wires": [
            [
                "064dfbf497fd7675"
            ]
        ]
    },
    {
        "id": "064dfbf497fd7675",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "5921be1c98a95c97",
        "name": "set expire",
        "rules": [
            {
                "t": "set",
                "p": "args.expire",
                "pt": "msg",
                "to": "6*7*24*60*60",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3120,
        "y": 1240,
        "wires": [
            [
                "2306fc661c0fce8f"
            ]
        ]
    },
    {
        "id": "2306fc661c0fce8f",
        "type": "brave-redis-queue",
        "z": "32ccf302392ab325",
        "g": "5921be1c98a95c97",
        "name": "",
        "x": 3270,
        "y": 1240,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1ff3562c7836d257",
        "type": "link in",
        "z": "32ccf302392ab325",
        "g": "5921be1c98a95c97",
        "name": "Info",
        "links": [],
        "x": 2670,
        "y": 1240,
        "wires": [
            [
                "f41131fa21eadd1a"
            ]
        ],
        "l": true
    },
    {
        "id": "f41131fa21eadd1a",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "5921be1c98a95c97",
        "name": "",
        "property": "flow.settings.debug",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2790,
        "y": 1240,
        "wires": [
            [
                "c96ca9b21d127acd"
            ]
        ]
    },
    {
        "id": "bc609eeb15ca8db3",
        "type": "subflow:fca036ab5aa23301",
        "z": "32ccf302392ab325",
        "g": "429ca0f28c6eb552",
        "name": "Retrieve Instruction",
        "x": 1290,
        "y": 600,
        "wires": [
            [
                "68fb25c91563f7fa"
            ],
            [
                "31af2fa0558d0fc5"
            ]
        ]
    },
    {
        "id": "68fb25c91563f7fa",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "429ca0f28c6eb552",
        "name": "Set Instruction",
        "rules": [
            {
                "t": "set",
                "p": "flow.instruction",
                "pt": "msg",
                "to": "$merge([flow.instruction, payload])",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "flow.instruction.this_run",
                "pt": "msg",
                "to": "$toMillis(starttime)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1680,
        "y": 600,
        "wires": [
            [
                "408ac06e1066e45f"
            ]
        ]
    },
    {
        "id": "4edbbaa923361a34",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "50739f124cb8563b",
        "name": "save login",
        "rules": [
            {
                "t": "set",
                "p": "flow.login.source",
                "pt": "msg",
                "to": "{\t    \"client_id\":    client_id,\t    \"vault_api\":    vault_api,\t    \"session_id\":   session_id,\t    \"user_id\":      user_id,\t    \"vault_id\":     vault_id,\t    \"vault_domain\": vault_domain\t}",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "_log",
                "pt": "msg",
                "to": "$append(_log, [{\t   \"status\": \"SUCCESS\",\t   \"action\": \"login xlink vault: \" & vaultDNS,\t   \"user_id\": create_xlink.source.vault.user_id\t}])",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1680,
        "y": 780,
        "wires": [
            [
                "ed87816caa006967"
            ]
        ]
    },
    {
        "id": "ed87816caa006967",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "8dfbdc55ff62d17e",
        "name": "set vault_domain to xlink vault",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"vault_domain\": flow.instruction.xlink.vault_domain,\t    \"username\": flow.login.username,\t    \"password\": flow.login.password\t}",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_domain",
                "pt": "msg",
                "to": "payload.vault_domain",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 880,
        "wires": [
            [
                "318fe22d13edfa91"
            ]
        ]
    },
    {
        "id": "fdc58e621ebbbe79",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "8dfbdc55ff62d17e",
        "name": "save login",
        "rules": [
            {
                "t": "set",
                "p": "flow.login.xlink",
                "pt": "msg",
                "to": "{\t    \"client_id\":    client_id,\t    \"vault_api\":    vault_api,\t    \"session_id\":   session_id,\t    \"user_id\":      user_id,\t    \"vault_id\":     vault_id,\t    \"vault_domain\": vault_domain\t}",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "_log",
                "pt": "msg",
                "to": "$append(_log, [{\t   \"status\": \"SUCCESS\",\t   \"action\": \"login source vault: \" & vaultDNS,\t   \"user_id\": create_xlink.source.vault.user_id\t}])",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1680,
        "y": 880,
        "wires": [
            [
                "f051b5df1b4109a6"
            ]
        ]
    },
    {
        "id": "a1a5eb79e0febac3",
        "type": "brave-vql-query",
        "z": "32ccf302392ab325",
        "g": "81e9aec5f845a51a",
        "name": "",
        "x": 1330,
        "y": 1020,
        "wires": [
            [
                "d79d102ad4097dd6"
            ],
            [
                "9819636b1d12be9c"
            ]
        ]
    },
    {
        "id": "147a9502b275b3c1",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "efd44d58605fc3aa",
        "name": "set Document Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"SELECT \"&\t$join(\t   [\t       \"id\",\t       \"name__v\",\t       \"title__v\",\t       \"version_id\",\t       \"source_binding_rule__v\",\t       \"source_vault_id__v\",\t       \"source_document_id__v\",\t       \"major_version_number__v\",\t       \"minor_version_number__v\",\t       \"bound_source_major_version__v\",\t       \"bound_source_minor_version__v\",\t       \"version_modified_date__v\",\t       \"subtype__v\",\t       \"classification__v\",\t       \"type__v\",\t       \"description__v\"\t    ],\t   \", \"\t)\t&\" FROM ALLVERSIONS documents\" \t&\" WHERE crosslink__v = true \"\t/* &\" AND source_binding_rule__v = 'Specific document version'\"*/\t&\" AND created_by__v = \" & user_id\t&\" AND source_vault_id__v = \" & $string(flow.login.source.vault_id)\t&\" AND source_document_id__v CONTAINS (\"&  \t        $join($distinct(flow.source.doc_vers.$string(id)[]\t                    ),\t            \", \")\t   &\")\"\t/*version modified date is useless for xlinks, since all versions get updated on almost?? any change of the source document, so just get all xlinks of a document.\tand work with it in the automation, seems to be just a waste of query time.\t&\" AND version_modified_date__v > '\" & $fromMillis(flow.instruction.last_run - 60*1000,'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].000Z') & \"'\"\t&\" AND version_modified_date__v < '\" & $fromMillis(flow.instruction.this_run - 60*1000,'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].000Z') & \"'\"*/\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 1240,
        "wires": [
            [
                "5df8e0d3f39b8b71",
                "c653bd43402589c0"
            ]
        ]
    },
    {
        "id": "5df8e0d3f39b8b71",
        "type": "brave-vql-query",
        "z": "32ccf302392ab325",
        "g": "efd44d58605fc3aa",
        "name": "",
        "x": 1330,
        "y": 1240,
        "wires": [
            [
                "1f7bb3f9cee07698"
            ],
            [
                "2a3858970a774fd8"
            ]
        ]
    },
    {
        "id": "d0e185a4bfe350ac",
        "type": "brave-vql-query",
        "z": "32ccf302392ab325",
        "g": "c9d97f19c3150a81",
        "name": "",
        "x": 1570,
        "y": 1600,
        "wires": [
            [
                "a0e45cab2802cf07",
                "39bdbb6eb6b7e9a6"
            ],
            [
                "abac2caf7c1bcc06"
            ]
        ]
    },
    {
        "id": "15bec87d7432aaf9",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "fd69ea7b671c7ec8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "loop.vault",
                "pt": "msg",
                "to": "loop.vaults[$$.loop.vault_counter]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 1380,
        "wires": [
            [
                "e76b320db8a24dcf"
            ]
        ]
    },
    {
        "id": "f051b5df1b4109a6",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "81e9aec5f845a51a",
        "name": "switch to source vault",
        "rules": [
            {
                "t": "set",
                "p": "temp.login_details",
                "pt": "msg",
                "to": "$lookup(flow.login, \"source\")",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "temp.login_details.client_id",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_api",
                "pt": "msg",
                "to": "temp.login_details.vault_api",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "session_id",
                "pt": "msg",
                "to": "temp.login_details.session_id",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_domain",
                "pt": "msg",
                "to": "temp.login_details.vault_domain",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "user_id",
                "pt": "msg",
                "to": "temp.login_details.user_id",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 1020,
        "wires": [
            [
                "c2f38571712ac056"
            ]
        ]
    },
    {
        "id": "8e8c0131b37a7786",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "efd44d58605fc3aa",
        "name": "switch to xlink vault",
        "rules": [
            {
                "t": "set",
                "p": "temp.login_details",
                "pt": "msg",
                "to": "$lookup(flow.login, \"xlink\")",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "temp.login_details.client_id",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_api",
                "pt": "msg",
                "to": "temp.login_details.vault_api",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "session_id",
                "pt": "msg",
                "to": "temp.login_details.session_id",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_domain",
                "pt": "msg",
                "to": "temp.login_details.vault_domain",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "user_id",
                "pt": "msg",
                "to": "temp.login_details.user_id",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 1240,
        "wires": [
            [
                "147a9502b275b3c1"
            ]
        ]
    },
    {
        "id": "e76b320db8a24dcf",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "fd69ea7b671c7ec8",
        "name": "switch to loop.vault",
        "rules": [
            {
                "t": "set",
                "p": "temp.login_details",
                "pt": "msg",
                "to": "$lookup(flow.login, loop.vault)",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "temp.login_details.client_id",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_api",
                "pt": "msg",
                "to": "temp.login_details.vault_api",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "session_id",
                "pt": "msg",
                "to": "temp.login_details.session_id",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_domain",
                "pt": "msg",
                "to": "temp.login_details.vault_domain",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "user_id",
                "pt": "msg",
                "to": "temp.login_details.user_id",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 1380,
        "wires": [
            [
                "5c0e24dc64906e80"
            ]
        ]
    },
    {
        "id": "43d96a0c94607243",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "c9d97f19c3150a81",
        "name": "while objects",
        "property": "loop.object_counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 1540,
        "wires": [
            [
                "8e6f0e445fe834fd"
            ],
            [
                "db3791d9ed978489"
            ]
        ]
    },
    {
        "id": "5f16de4c7ec4bf71",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "c9d97f19c3150a81",
        "name": "next object",
        "rules": [
            {
                "t": "set",
                "p": "loop.object_counter",
                "pt": "msg",
                "to": "loop.object_counter-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 1600,
        "wires": [
            [
                "43d96a0c94607243"
            ]
        ]
    },
    {
        "id": "7040b85238e089d1",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "4d78ed85bdabae1a",
        "name": "set array of picklists",
        "rules": [
            {
                "t": "set",
                "p": "loop.picklists",
                "pt": "msg",
                "to": "$lookup(flow.instruction, loop.vault).picklists",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "loop.picklist_counter",
                "pt": "msg",
                "to": "$count(loop.picklists)-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 1780,
        "wires": [
            [
                "c2cbee537b4269aa"
            ]
        ]
    },
    {
        "id": "45758664e9dcef85",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "4d78ed85bdabae1a",
        "name": "update flow variable",
        "rules": [
            {
                "t": "set",
                "p": "data_source",
                "pt": "msg",
                "to": "$merge([data_source,\t    {\t        loop.vault:\t        $merge([$lookup(data_source, loop.vault),\t        {\"picklists\":loop.results}\t        ])\t    }\t])",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "loop.results",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 2000,
        "wires": [
            [
                "6240821847615af2",
                "7d904bf04f4f0d3f"
            ]
        ]
    },
    {
        "id": "e771e758c444a406",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "0f92c18136fd3dc8",
        "name": "set picklist name",
        "rules": [
            {
                "t": "set",
                "p": "loop.picklist",
                "pt": "msg",
                "to": "loop.picklists[$$.loop.picklist_counter]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "args.picklist_name",
                "pt": "msg",
                "to": "loop.picklist.picklist_name",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1860,
        "wires": [
            [
                "ef27b3b6b9051978",
                "7d904bf04f4f0d3f"
            ]
        ]
    },
    {
        "id": "c39b4bba303e859e",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "0f92c18136fd3dc8",
        "name": "set picklists",
        "rules": [
            {
                "t": "set",
                "p": "loop.results",
                "pt": "msg",
                "to": "$merge(\t        [\t            loop.results,\t            {loop.picklist.picklist_name:payload.picklistValues}\t        ]\t    )\t",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1850,
        "y": 1860,
        "wires": [
            [
                "b332f296eb49434e"
            ]
        ]
    },
    {
        "id": "c2cbee537b4269aa",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "0f92c18136fd3dc8",
        "name": "while picklists",
        "property": "loop.picklist_counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1040,
        "y": 1860,
        "wires": [
            [
                "e771e758c444a406"
            ],
            [
                "45758664e9dcef85"
            ]
        ]
    },
    {
        "id": "b332f296eb49434e",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "0f92c18136fd3dc8",
        "name": "next picklist",
        "rules": [
            {
                "t": "set",
                "p": "loop.picklist_counter",
                "pt": "msg",
                "to": "loop.picklist_counter-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 1920,
        "wires": [
            [
                "c2cbee537b4269aa"
            ]
        ]
    },
    {
        "id": "ef27b3b6b9051978",
        "type": "brave-retrieve-picklist-values",
        "z": "32ccf302392ab325",
        "g": "0f92c18136fd3dc8",
        "name": "",
        "x": 1610,
        "y": 1860,
        "wires": [
            [
                "c39b4bba303e859e",
                "7d904bf04f4f0d3f"
            ],
            [
                "fb9d5cc853187d94"
            ]
        ]
    },
    {
        "id": "6240821847615af2",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "bbf1e46794a4a441",
        "name": "set array of mappings",
        "rules": [
            {
                "t": "set",
                "p": "loop.mappings",
                "pt": "msg",
                "to": "$lookup(flow.instruction, loop.vault).mappings",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "loop.mapping_counter",
                "pt": "msg",
                "to": "$count(loop.mappings)-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 2100,
        "wires": [
            [
                "a97c47fec71fbe28"
            ]
        ]
    },
    {
        "id": "9d7a8b92db25bb45",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "bbf1e46794a4a441",
        "name": "update flow variable",
        "rules": [
            {
                "t": "set",
                "p": "data_source",
                "pt": "msg",
                "to": "$merge([data_source,\t    {\t        loop.vault:\t        $merge([$lookup(data_source, loop.vault),\t        {\"mappings\":loop.results}\t        ])\t    }\t])",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "loop.results",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 2320,
        "wires": [
            [
                "dc75f7a699c004da",
                "5a08d75fb4074cc4"
            ]
        ]
    },
    {
        "id": "a37dd9a1bb2b8117",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "2fb1f8ac58d94586",
        "name": "set mapping name",
        "rules": [
            {
                "t": "set",
                "p": "loop.mapping",
                "pt": "msg",
                "to": "loop.mappings[$$.loop.mapping_counter]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "args.settings_name",
                "pt": "msg",
                "to": "loop.mapping.mapping_name",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.attachment_name",
                "pt": "msg",
                "to": "loop.mapping.attachment_name",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 2180,
        "wires": [
            [
                "0d5a5d47eaecf373",
                "5a08d75fb4074cc4"
            ]
        ]
    },
    {
        "id": "737be07023240fb1",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "2fb1f8ac58d94586",
        "name": "set mappings",
        "rules": [
            {
                "t": "set",
                "p": "loop.results",
                "pt": "msg",
                "to": "$merge(\t        [\t            loop.results,\t            {loop.mapping.mapping_name: payload}\t        ]\t    )\t",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1850,
        "y": 2180,
        "wires": [
            [
                "293ff87595bea7c7"
            ]
        ]
    },
    {
        "id": "a97c47fec71fbe28",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "2fb1f8ac58d94586",
        "name": "while mappings",
        "property": "loop.mapping_counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1040,
        "y": 2180,
        "wires": [
            [
                "a37dd9a1bb2b8117"
            ],
            [
                "9d7a8b92db25bb45"
            ]
        ]
    },
    {
        "id": "293ff87595bea7c7",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "2fb1f8ac58d94586",
        "name": "next mapping",
        "rules": [
            {
                "t": "set",
                "p": "loop.mapping_counter",
                "pt": "msg",
                "to": "loop.mapping_counter-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 2240,
        "wires": [
            [
                "a97c47fec71fbe28"
            ]
        ]
    },
    {
        "id": "0d5a5d47eaecf373",
        "type": "subflow:fca036ab5aa23301",
        "z": "32ccf302392ab325",
        "g": "2fb1f8ac58d94586",
        "name": "Retrieve Mapping",
        "x": 1590,
        "y": 2180,
        "wires": [
            [
                "737be07023240fb1",
                "5a08d75fb4074cc4"
            ],
            [
                "40dc7c66631ca966"
            ]
        ]
    },
    {
        "id": "dc75f7a699c004da",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "fd69ea7b671c7ec8",
        "name": "next vault",
        "rules": [
            {
                "t": "set",
                "p": "loop.vault_counter",
                "pt": "msg",
                "to": "loop.vault_counter-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 2320,
        "wires": [
            [
                "5799f448191fa7c7"
            ]
        ]
    },
    {
        "id": "5799f448191fa7c7",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "fd69ea7b671c7ec8",
        "name": "while vaults",
        "property": "loop.vault_counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 1440,
        "wires": [
            [
                "15bec87d7432aaf9"
            ],
            [
                "a2f3b0281c0886fa"
            ]
        ]
    },
    {
        "id": "60d92ecbd137ffc5",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "fd69ea7b671c7ec8",
        "name": "Set vauls",
        "rules": [
            {
                "t": "set",
                "p": "loop.vaults",
                "pt": "msg",
                "to": "[\"source\", \"xlink\", \"instruction\"]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "loop.vault_counter",
                "pt": "msg",
                "to": "$count(loop.vaults)-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 1380,
        "wires": [
            [
                "5799f448191fa7c7"
            ]
        ]
    },
    {
        "id": "4ae38e7a8fc4137a",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "ef776e6ae30994ac",
        "name": "add created xlink to flow.xlink.doc_vers and log",
        "rules": [
            {
                "t": "set",
                "p": "flow.xlink.doc_vers",
                "pt": "msg",
                "to": "$append(\t   $$.flow.xlink.doc_vers,\t   $merge(\t       [\t           $$.loop.new_xlink,\t           {\t               \"id\":$$.new_doc_id,\t               \"responseStatus\":$$.payload.responseStatus,\t               \"responseMessage\":$$.payload.responseMessage,\t               \"source_version_id\":\t                   $$.loop.new_xlink.source_document_id__v & \"_\" &\t                   $$.loop.new_xlink.bound_source_major_version__v & \"_\" &\t                   $$.loop.new_xlink.bound_source_minor_version__v,\t               \"sort_version\": 1, /*$$.loop.new_xlink.major_version_number__v*10000 + $$.loop.new_xlink.minor_version_number__v,*/\t               \"sort_bound_version\": $$.loop.new_xlink.bound_source_major_version__v*10000 + $$.loop.new_xlink.bound_source_minor_version__v,\t               \"version_id\": \t                   $$.new_doc_id & \"_0_1\", /*\"_\" &\t                   $$.loop.new_xlink.major_version_number__v & \"_\" &\t                   $$.loop.new_xlink.minor_version_number__v,*/\t               \"version_modified_date__v\":$now(),\t               \"xlink_created\": true,\t               \"major_version_number__v\":$$.payload.data.major_version_number__v,\t               \"minor_version_number__v\": $$.payload.data.minor_version_number__v\t            }\t        ]\t    )\t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "_log",
                "pt": "msg",
                "to": "$append(\t   _log,\t   {\t       \"timestamp\": $now(),\t       \"severity\": \"INFORMATION\",\t       \"message\": \t          {\t               \"id\":$$.payload.id,\t               \"responseStatus\":$$.payload.responseStatus,\t               \"responseMessage\":$$.payload.responseMessage,\t               \"source_version_id\":\t                   $$.loop.new_xlink.source_document_id__v & \"_\" &\t                   $$.loop.new_xlink.bound_source_major_version__v & \"_\" &\t                   $$.loop.new_xlink.bound_source_minor_version__v,\t               \"version_id\": \t                   $$.payload.id & \"_\" &\t                   $$.loop.new_xlink.major_version_number__v & \"_\" &\t                   $$.loop.new_xlink.minor_version_number__v\t            },\t       \"source\":  \"create new xlink\"\t   } \t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3500,
        "y": 2640,
        "wires": [
            [
                "a046b66f689f0103",
                "601dd3c7dc2817a5"
            ]
        ]
    },
    {
        "id": "fe91fdf3664267b3",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "ef776e6ae30994ac",
        "name": "while new documents",
        "property": "loop.doc_counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2420,
        "y": 2580,
        "wires": [
            [
                "27aaa00a66ac305c"
            ],
            [
                "eec083cedae89262"
            ]
        ]
    },
    {
        "id": "a046b66f689f0103",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "ef776e6ae30994ac",
        "name": "next document",
        "rules": [
            {
                "t": "set",
                "p": "loop.doc_counter",
                "pt": "msg",
                "to": "loop.doc_counter-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2400,
        "y": 2640,
        "wires": [
            [
                "fe91fdf3664267b3"
            ]
        ]
    },
    {
        "id": "98bff536a7899301",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "ef776e6ae30994ac",
        "name": "switch to xlink vault",
        "rules": [
            {
                "t": "set",
                "p": "temp.login_details",
                "pt": "msg",
                "to": "$lookup(flow.login, \"xlink\")",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "temp.login_details.client_id",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_api",
                "pt": "msg",
                "to": "temp.login_details.vault_api",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "session_id",
                "pt": "msg",
                "to": "temp.login_details.session_id",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_domain",
                "pt": "msg",
                "to": "temp.login_details.vault_domain",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "user_id",
                "pt": "msg",
                "to": "temp.login_details.user_id",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2730,
        "y": 2520,
        "wires": [
            [
                "ed4a759ee7b60391"
            ]
        ]
    },
    {
        "id": "a636dd3b7fabfe4a",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "efd44d58605fc3aa",
        "name": "related xlinks",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2130,
        "y": 1260,
        "wires": []
    },
    {
        "id": "b29b726eb9cc87b8",
        "type": "brave-redis-queue",
        "z": "32ccf302392ab325",
        "g": "429ca0f28c6eb552",
        "name": "",
        "x": 1270,
        "y": 660,
        "wires": [
            [
                "d348b58ca7101db9"
            ],
            [
                "f4fca5f780970cc4"
            ]
        ]
    },
    {
        "id": "408ac06e1066e45f",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "429ca0f28c6eb552",
        "name": "prepare get last run",
        "rules": [
            {
                "t": "set",
                "p": "args.topic",
                "pt": "msg",
                "to": "$replace(\t   $join(\t       [\t           \"LOG__\" & client_id,\t           flow.instruction.name__v,\t           \"last_run\",\t           \"h\"        \t       ],\t       \":\"    \t   ),\t   /[ \"']/,\t   \"_\" \t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "args.method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 660,
        "wires": [
            [
                "b29b726eb9cc87b8"
            ]
        ]
    },
    {
        "id": "d348b58ca7101db9",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "429ca0f28c6eb552",
        "name": "set last run, if not within last 100 days, set to this run - 100days",
        "rules": [
            {
                "t": "set",
                "p": "flow.instruction.last_run",
                "pt": "msg",
                "to": "($last_run:=$contains($string(payload),/^-?\\d+\\.?\\d*([e,E][+,-]?\\d{1,3})?$/)?$number(payload):0;\t($last_run > flow.instruction.this_run-100*24*60*60*1000 and $last_run < flow.instruction.this_run)?\t    $last_run:\t    flow.instruction.this_run-100*24*60*60*1000\t)\t/*use the last run, if not available or older than 100 days, use this run -100 days*/\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1830,
        "y": 660,
        "wires": [
            [
                "9e5f2290ac163ac6"
            ]
        ]
    },
    {
        "id": "27aaa00a66ac305c",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "ef776e6ae30994ac",
        "name": "xlink document metadata",
        "rules": [
            {
                "t": "set",
                "p": "loop.new_sourcedoc",
                "pt": "msg",
                "to": "loop.new_sources[$$.loop.doc_counter].first_source",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$merge([{\t   \"sourceDoc\":loop.new_sourcedoc,\t   \"source_vault_id\":flow.login.source.vault_id,\t   \"xlink_vault_id\":flow.login.xlink.vault_id\t   },   \t   data_source\t])\t",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.jsonata",
                "pt": "msg",
                "to": "flow.instruction.instruction.jsonata",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "base_data",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2750,
        "y": 2580,
        "wires": [
            [
                "3dbcba8702bb65e4",
                "84d2d885eab2a49d"
            ]
        ]
    },
    {
        "id": "37705f57c15c0028",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "ef776e6ae30994ac",
        "name": "prepare create doc",
        "rules": [
            {
                "t": "set",
                "p": "loop.new_xlink",
                "pt": "msg",
                "to": "$merge(\t   [\t       payload,\t       {\t           /*\"major_version_number__v\":loop.new_sourcedoc.major_version_number__v,\t           \"minor_version_number__v\":loop.new_sourcedoc.minor_version_number__v,\t           \"status__v\": loop.new_sourcedoc.minor_version_number__v=0 ? \"Approved\",*/\t           \"bound_source_major_version__v\":loop.new_sourcedoc.major_version_number__v,\t           \"bound_source_minor_version__v\":loop.new_sourcedoc.minor_version_number__v,\t           \"source_document_id__v\": loop.new_sourcedoc.id,\t           \"source_vault_id__v\": flow.login.source.vault_id,\t           \"source_binding_rule__v\":\"Specific document version\"\t       }\t   ]\t)",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "loop.new_xlink",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2730,
        "y": 2640,
        "wires": [
            [
                "a65ce93c89c2599a",
                "17c4fb4d7dad9588"
            ]
        ]
    },
    {
        "id": "84d2d885eab2a49d",
        "type": "function",
        "z": "32ccf302392ab325",
        "g": "ef776e6ae30994ac",
        "name": "Apply Jsonata",
        "func": "let jsonataStr = msg.args.jsonata;\nlet inputObject = msg.payload;\nlet result;\n\ntry {\n    if (typeof jsonataStr == 'string') {\n        let template = RED.util.prepareJSONataExpression(jsonataStr, node);\n        result = RED.util.evaluateJSONataExpression(template, inputObject, null);\n    }\n\n    msg.payload = result;\n\n    return [msg, null]\n}\ncatch (err) {\n    msg.payload = \"ERROR\" + JSON.stringify(err)\n    return [null, msg]\n};",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3080,
        "y": 2580,
        "wires": [
            [
                "3dbcba8702bb65e4",
                "37705f57c15c0028"
            ],
            [
                "e691ceecf149b649"
            ]
        ],
        "info": "Transform a node-red object using a jsonata expression provided as a string at runtime. \r\n\r\n### Node information\r\n:Initial Release (string): With building blocks version x.x.x\r\n:Description (string): Transform a node-red object using a jsonata expression provided as a string.\r\n\r\n### Inputs\r\n: args.jsonata (string) : *(required)* The jsonata expression to be used, has to be a valid string appropriately escaped. If empty, output will be SUCCESS and payload undefined\r\n: payload (object)     : *(optional)* A node red data object to be transformed by args.jsonata. If empty, output will be SUCCESS and empty\r\n\r\n### Outputs\r\n1. Success\r\n: payload (object): The transformed object\r\n\r\n1. Failure\r\n: payload (object): Error message on channel 2\r\n"
    },
    {
        "id": "124aafaa5fce09e1",
        "type": "brave-create-single-document",
        "z": "32ccf302392ab325",
        "g": "ef776e6ae30994ac",
        "name": "",
        "x": 3130,
        "y": 2640,
        "wires": [
            [
                "eab86cc5f867e0de"
            ],
            [
                "e691ceecf149b649"
            ]
        ]
    },
    {
        "id": "ed4a759ee7b60391",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "ef776e6ae30994ac",
        "name": "Set loop doc_counter",
        "rules": [
            {
                "t": "set",
                "p": "loop.doc_counter",
                "pt": "msg",
                "to": "$count(loop.new_sources)-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3020,
        "y": 2520,
        "wires": [
            [
                "fe91fdf3664267b3",
                "3dbcba8702bb65e4"
            ]
        ]
    },
    {
        "id": "7bb2f67d59a99ce1",
        "type": "brave-redis-queue",
        "z": "32ccf302392ab325",
        "g": "c9d97f19c3150a81",
        "name": "",
        "x": 1730,
        "y": 1540,
        "wires": [
            [
                "cdc14257acca5730"
            ],
            [
                "abac2caf7c1bcc06"
            ]
        ]
    },
    {
        "id": "a34ef488b787110f",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "c9d97f19c3150a81",
        "name": "prep redis",
        "rules": [
            {
                "t": "set",
                "p": "args.topic",
                "pt": "msg",
                "to": "$replace(\t   $join(\t       [\t            flow.login.instruction.vault_domain,\t            flow.instruction.name__v,\t            loop.vault,\t            loop.object.object_name,\t            \"h\"\t       ],\t       \":\"\t   ),\t   /[ \"']/,\t   \"_\"\t)\t\t",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "args.method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 1540,
        "wires": [
            [
                "7bb2f67d59a99ce1"
            ]
        ]
    },
    {
        "id": "cdc14257acca5730",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "c9d97f19c3150a81",
        "name": "write to loop result and prepare query",
        "rules": [
            {
                "t": "set",
                "p": "loop.redis_result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"SELECT \" & $join(loop.fields, \", \") &\t\" FROM \" & loop.object.object_name &\t($type(loop.redis_result.last_run)=\"number\"?(\t\" WHERE modified_date__v > '\" & \t$fromMillis(loop.redis_result.last_run - 60000, '[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].000Z') & \t\"'\"))",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "loop.run_time",
                "pt": "msg",
                "to": "$millis()",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1600,
        "wires": [
            [
                "d0e185a4bfe350ac",
                "39bdbb6eb6b7e9a6"
            ]
        ]
    },
    {
        "id": "fcd73c6797d71c36",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "c9d97f19c3150a81",
        "name": "prep redis",
        "rules": [
            {
                "t": "set",
                "p": "args.topic",
                "pt": "msg",
                "to": "$replace(\t   $join(\t       [\t            flow.login.instruction.vault_domain,\t            flow.instruction.name__v,\t            loop.vault,\t            loop.object.object_name,\t            \"h\"\t       ],\t       \":\"\t   ),\t   /[ \"']/,\t   \"_\"\t)\t\t",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "args.method",
                "pt": "msg",
                "to": "SET",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"last_run\":loop.run_time,\t   \"data\":loop.result   \t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 1540,
        "wires": [
            [
                "ed32e152cfaf8dd3"
            ]
        ]
    },
    {
        "id": "ed32e152cfaf8dd3",
        "type": "brave-redis-queue",
        "z": "32ccf302392ab325",
        "g": "c9d97f19c3150a81",
        "name": "",
        "x": 2170,
        "y": 1600,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b89ccd2b6a4fe943",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "c9d97f19c3150a81",
        "name": "if updated",
        "property": "loop.updated",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2060,
        "y": 1540,
        "wires": [
            [
                "fcd73c6797d71c36"
            ]
        ]
    },
    {
        "id": "0d0607b42a600041",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "56bca0108c880039",
        "name": "pair source and xlink to flow doc_pairs",
        "rules": [
            {
                "t": "set",
                "p": "flow.doc_pairs",
                "pt": "msg",
                "to": "/* create a list of document id pairs for source and xlink based on the source_document_id__v field of the xlink */\t$append(\t   $distinct(\t       /*source documents referenced by xlinks*/\t       flow.xlink.doc_vers@$xv.[\t           $$.flow.source.doc_vers[id=$xv.source_document_id__v].\t                    {\"source_id\":id, \t                    \"xlink_id\":$xv.id}\t       ]\t   ),\t   $distinct(\t       /*source documents not referenced by xlinks*/\t       [\t           flow.source.doc_vers[\t               $not(\t                   id in $$.flow.xlink.doc_vers.source_document_id__v\t               )\t           ].{\"source_id\":id}\t       ]\t   )\t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "flow.doc_pairs",
                "pt": "msg",
                "to": "/*enrich doc pairs with relevant xlink and source version information*/\tflow.doc_pairs@$dp.\t/*for each doc pair add data*/\t$merge(\t    [\t        $dp,\t        {\t            \"latest_xlink\": $$.flow.xlink.doc_vers[id=$dp.xlink_id]^(>sort_version)[0],\t            \"first_source\": $$.flow.source.doc_vers[id=$dp.source_id]^(sort_version)[0],\t            \"version_pairs\":\t            /* go through every version of the source doc of the doc pair*/\t                ($$.flow.source.doc_vers@$ps[$ps.id=$dp.source_id].{\t                    \"source_ver\":$ps,\t                    \"xlink_ver\":\t                            (\t                                /* xlsortv: the xlink with identical (sort) version number */\t                                $xlsortv:=$$.flow.xlink.doc_vers[id=$dp.xlink_id\t                                    and\t                                    source_document_id__v = $ps.id \t                                    and \t                                    sort_version = $ps.sort_version][0];\t                                /* xlbound: the xlink with a binding to the source version number */\t                                $xlbound:=$$.flow.xlink.doc_vers[id=$dp.xlink_id\t                                    and\t                                    source_version_id = $ps.version_id]^(>sort_version)[0];\t                                /* xldescr: the xlink which defines the source version in the description field */\t                                $xldescr:=$$.flow.xlink.doc_vers[id=$dp.xlink_id\t                                    and\t                                    description__v = $ps.version_id]^(>sort_version)[0];\t                    /* if created by automation the xlink description field has the version_id it was created for ($xldescr),\t                    if this does not point to an existing source, try match by expected parallel version numbering ($xlsortv),\t                    if neither match, match by source_version_id field ($xlbound).*/\t                                $xldescr?$xldescr:($xlsortv?$xlsortv:$xlbound)/**/\t                            )\t                    }\t                )^(source_ver.sort_version)[]\t        }\t    ]\t)\t\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 3160,
        "wires": [
            [
                "23aca15730715d76",
                "d8b66721dacadcc8"
            ]
        ]
    },
    {
        "id": "7486b4e656d25b50",
        "type": "link in",
        "z": "32ccf302392ab325",
        "g": "ef776e6ae30994ac",
        "name": "new docs in",
        "links": [],
        "x": 2445,
        "y": 2520,
        "wires": [
            [
                "98bff536a7899301"
            ]
        ]
    },
    {
        "id": "eec083cedae89262",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "ef776e6ae30994ac",
        "name": "new docs out",
        "mode": "return",
        "links": [],
        "x": 2565,
        "y": 2640,
        "wires": []
    },
    {
        "id": "b7487ff351fb7a6b",
        "type": "link in",
        "z": "32ccf302392ab325",
        "g": "56bca0108c880039",
        "name": "re-evaluate status",
        "links": [
            "b3ee3c13b1a0f8e6",
            "ce482cbccec6ba9a",
            "991ef6455c72733e",
            "bd9bf511fd82441b"
        ],
        "x": 695,
        "y": 2940,
        "wires": [
            [
                "a2f3b0281c0886fa"
            ]
        ]
    },
    {
        "id": "3f6d08e5985c1ee6",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "d496576295362680",
        "name": "while updates",
        "property": "loop.update_counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2400,
        "y": 2800,
        "wires": [
            [
                "d8989a5a8e7f7392"
            ],
            [
                "99b037967a704cef"
            ]
        ]
    },
    {
        "id": "2f1a17522978e333",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "d496576295362680",
        "name": "next update",
        "rules": [
            {
                "t": "set",
                "p": "loop.update_counter",
                "pt": "msg",
                "to": "loop.update_counter-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2390,
        "y": 2860,
        "wires": [
            [
                "3f6d08e5985c1ee6"
            ]
        ]
    },
    {
        "id": "e0a56539a6eb8f83",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "d496576295362680",
        "name": "switch to xlink vault",
        "rules": [
            {
                "t": "set",
                "p": "temp.login_details",
                "pt": "msg",
                "to": "$lookup(flow.login, \"xlink\")",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "temp.login_details.client_id",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_api",
                "pt": "msg",
                "to": "temp.login_details.vault_api",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "session_id",
                "pt": "msg",
                "to": "temp.login_details.session_id",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_domain",
                "pt": "msg",
                "to": "temp.login_details.vault_domain",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "user_id",
                "pt": "msg",
                "to": "temp.login_details.user_id",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2690,
        "y": 2740,
        "wires": [
            [
                "51a7fc6be94ab1c3"
            ]
        ]
    },
    {
        "id": "1cd5a9446f947f14",
        "type": "function",
        "z": "32ccf302392ab325",
        "g": "d496576295362680",
        "name": "Apply Jsonata",
        "func": "let jsonataStr = msg.args.jsonata;\nlet inputObject = msg.payload;\nlet result;\n\ntry {\n    if (typeof jsonataStr == 'string') {\n        let template = RED.util.prepareJSONataExpression(jsonataStr, node);\n        result = RED.util.evaluateJSONataExpression(template, inputObject, null);\n    }\n\n    msg.payload = result;\n\n    return [msg, null]\n}\ncatch (err) {\n    msg.payload = \"ERROR\" + JSON.stringify(err)\n    return [null, msg]\n};",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3220,
        "y": 2800,
        "wires": [
            [
                "33ad49373220d220",
                "9e91e62cc3a6ca70"
            ],
            [
                "c304a13f5e331386"
            ]
        ]
    },
    {
        "id": "51a7fc6be94ab1c3",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "d496576295362680",
        "name": "Set loop update_counter",
        "rules": [
            {
                "t": "set",
                "p": "loop.update_xlink_pairs",
                "pt": "msg",
                "to": "loop.update_xlinks.version_pairs",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "loop.update_counter",
                "pt": "msg",
                "to": "$count(loop.update_xlink_pairs)-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2970,
        "y": 2740,
        "wires": [
            [
                "3f6d08e5985c1ee6"
            ]
        ]
    },
    {
        "id": "43c95e6e9db87c7a",
        "type": "link in",
        "z": "32ccf302392ab325",
        "g": "d496576295362680",
        "name": "update xlink in",
        "links": [
            "233a2f3bcb213b59"
        ],
        "x": 2425,
        "y": 2740,
        "wires": [
            [
                "e0a56539a6eb8f83"
            ]
        ]
    },
    {
        "id": "d8989a5a8e7f7392",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "d496576295362680",
        "name": "xlink update metadata",
        "rules": [
            {
                "t": "set",
                "p": "loop.update_xlink",
                "pt": "msg",
                "to": "loop.update_xlink_pairs[$$.loop.update_counter]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$merge([{\t   \"sourceDoc\":loop.update_xlink.source_ver,\t   \"source_vault_id\":flow.login.source.vault_id,\t   \"xlink_vault_id\":flow.login.xlink.vault_id\t   },   \t   data_source\t])\t",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.jsonata",
                "pt": "msg",
                "to": "flow.instruction.instruction.jsonata",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "base_data",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2700,
        "y": 2800,
        "wires": [
            [
                "f6df9325f7fcf4ee",
                "33ad49373220d220"
            ]
        ]
    },
    {
        "id": "9e91e62cc3a6ca70",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "d496576295362680",
        "name": "prepare update xlink",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$merge(\t   [\t       payload,\t       {\t           \"bound_source_major_version__v\":loop.update_xlink.source_ver.major_version_number__v,\t           \"bound_source_minor_version__v\":loop.update_xlink.source_ver.minor_version_number__v,\t           \"source_document_id__v\": loop.update_xlink.source_ver.id,\t           \"source_vault_id__v\": flow.login.source.vault_id,\t           \"source_binding_rule__v\":\"Specific document version\"\t       }\t   ]\t)",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "loop.update_result",
                "pt": "msg",
                "to": "payload /*$merge([payload,{\"id\":loop.update_xlink.xlink.id}])*/",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.doc_id",
                "pt": "msg",
                "to": "loop.update_xlink.xlink_ver.id",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.major_version",
                "pt": "msg",
                "to": "loop.update_xlink.xlink_ver.major_version_number__v",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.minor_version",
                "pt": "msg",
                "to": "loop.update_xlink.xlink_ver.minor_version_number__v",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2700,
        "y": 2860,
        "wires": [
            [
                "df15d77211abf767",
                "67b2a2395494575b"
            ]
        ]
    },
    {
        "id": "df15d77211abf767",
        "type": "subflow:743f388ad8cf50d6",
        "z": "32ccf302392ab325",
        "g": "d496576295362680",
        "name": "update crosslink draft version",
        "x": 2980,
        "y": 2860,
        "wires": [
            [
                "688a4cd78e17dea5",
                "2dde79e37bfd9a7e"
            ],
            [
                "c304a13f5e331386"
            ]
        ]
    },
    {
        "id": "99b037967a704cef",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "d496576295362680",
        "name": "update xlink out",
        "mode": "return",
        "links": [],
        "x": 2535,
        "y": 2860,
        "wires": []
    },
    {
        "id": "688a4cd78e17dea5",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "d496576295362680",
        "name": "update xlink in flow.xlink.doc_vers and log",
        "rules": [
            {
                "t": "set",
                "p": "flow.xlink.doc_vers",
                "pt": "msg",
                "to": "(\t$vid:=$$.loop.update_xlink.xlink_ver.version_id;\t    $append(\t        flow.xlink.doc_vers[$not(version_id=$vid)],\t        $merge(\t            [\t                flow.xlink.doc_vers[version_id=$vid],\t                $$.loop.update_result,\t                {\t                    \"responseStatus\":$$.payload.responseStatus,\t                    \"responseMessage\":$$.payload.responseMessage,\t                    \"source_version_id\":$$.loop.update_result.source_document_id__v & \"_\" & $$.loop.update_result.bound_source_major_version__v & \"_\" & $$.loop.update_result.bound_source_minor_version__v,\t                    \"sort_bound_version\": $$.loop.update_result.bound_source_major_version__v*10000 + $$.loop.update_result.bound_source_minor_version__v,\t                    \"version_modified_date__v\": $now(),\t                    \"xlink_updated\": true,\t                    \"major_version_number__v\":$$.loop.new_xlink.major_version_number__v,\t                    \"minor_version_number__v\": $$.loop.new_xlink.minor_version_number__v\t                    \t\t\t                }\t            ]\t        )\t    )\t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "_log",
                "pt": "msg",
                "to": "$append(\t   _log,\t   {\t       \"timestamp\": $now(),\t       \"severity\": \"INFORMATION\",\t       \"message\": \t        $merge(\t            [\t                $$.loop.update_result,\t                {\t                    \"responseStatus\":$$.payload.responseStatus,\t                    \"responseMessage\":$$.payload.responseMessage,\t                    \"source_version_id\":$$.loop.update_result.source_document_id__v & \"_\" & $$.loop.update_result.bound_source_major_version__v & \"_\" & $$.loop.update_result.bound_source_minor_version__v\t                }\t            ]),\t       \"source\": \"update xlink\"\t   } \t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3440,
        "y": 2860,
        "wires": [
            [
                "2f1a17522978e333"
            ]
        ]
    },
    {
        "id": "231ef98d049b3df4",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "020992df4203b447",
        "name": "while approvals",
        "property": "loop.approval_counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2400,
        "y": 3020,
        "wires": [
            [
                "a92b04646d9c6f2e"
            ],
            [
                "71f4891304500c83"
            ]
        ]
    },
    {
        "id": "6c4a81fb20829fdd",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "020992df4203b447",
        "name": "next approval",
        "rules": [
            {
                "t": "set",
                "p": "loop.approval_counter",
                "pt": "msg",
                "to": "loop.approval_counter-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2400,
        "y": 3080,
        "wires": [
            [
                "231ef98d049b3df4"
            ]
        ]
    },
    {
        "id": "013646429b7bbe47",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "020992df4203b447",
        "name": "switch to xlink vault",
        "rules": [
            {
                "t": "set",
                "p": "temp.login_details",
                "pt": "msg",
                "to": "$lookup(flow.login, \"xlink\")",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "temp.login_details.client_id",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_api",
                "pt": "msg",
                "to": "temp.login_details.vault_api",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "session_id",
                "pt": "msg",
                "to": "temp.login_details.session_id",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_domain",
                "pt": "msg",
                "to": "temp.login_details.vault_domain",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "user_id",
                "pt": "msg",
                "to": "temp.login_details.user_id",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2690,
        "y": 2960,
        "wires": [
            [
                "6470b39167ae9d5d"
            ]
        ]
    },
    {
        "id": "6470b39167ae9d5d",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "020992df4203b447",
        "name": "Set loop approval_counter",
        "rules": [
            {
                "t": "set",
                "p": "loop.approval_counter",
                "pt": "msg",
                "to": "$count(loop.approve_xlinks)-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2990,
        "y": 2960,
        "wires": [
            [
                "231ef98d049b3df4"
            ]
        ]
    },
    {
        "id": "c66395e6cab17ac0",
        "type": "link in",
        "z": "32ccf302392ab325",
        "g": "020992df4203b447",
        "name": "approve xlink in",
        "links": [
            "039c9291b00c03ee"
        ],
        "x": 2425,
        "y": 2960,
        "wires": [
            [
                "013646429b7bbe47"
            ]
        ]
    },
    {
        "id": "71f4891304500c83",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "020992df4203b447",
        "name": "approve xlink out",
        "mode": "return",
        "links": [],
        "x": 2575,
        "y": 3080,
        "wires": []
    },
    {
        "id": "19823a545a71267e",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "020992df4203b447",
        "name": "update xlink in flow.xlink.doc_vers and log",
        "rules": [
            {
                "t": "set",
                "p": "flow.xlink.doc_vers",
                "pt": "msg",
                "to": "(\t$xlink:=flow.xlink.doc_vers[version_id=$$.loop.approve_xlink.version_id];\t    $append(\t        flow.xlink.doc_vers[$not(version_id=$xlink.version_id)],\t        $merge(\t            [\t                $xlink,\t                {\t                    \"major_version_number__v\": $xlink.major_version_number__v + 1,\t                    \"minor_version_number__v\": 0,\t                    \"sort_version\": ($xlink.major_version_number__v + 1) * 10000,\t                    \"version_id\": $xlink.id & \"_\" &($xlink.major_version_number__v + 1) & \"_0\",\t                    \"responseStatus\": $$.payload.responseStatus,\t                    \"responseMessage\": $$.payload.responseMessage,\t                    \"version_modified_date__v\": $now(),\t                    \"xlink_approved\": true\t                }\t            ]\t        )\t    )\t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "_log",
                "pt": "msg",
                "to": "$append(\t   _log,\t   {\t       \"timestamp\": $now(),\t       \"severity\": \"INFORMATION\",\t       \"message\": \t        $merge(\t            [\t                $$.loop.approve_xlink,\t                {\t                    \"responseStatus\":$$.payload.responseStatus,\t                    \"responseMessage\":$$.payload.responseMessage,\t                    \"version_id\": $$.loop.approve_xlink.id & \"_\" & ($number($$.loop.approve_xlink.major_version_number__v) + 1) & \"_0\",\t                    \"major_version_number__v\":$number($$.loop.approve_xlink.major_version_number__v)+1,\t                    \"minor_version_number__v\":0\t                }\t            ]),\t       \"source\": \"approve xlink\"\t   } \t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3380,
        "y": 3080,
        "wires": [
            [
                "6c4a81fb20829fdd"
            ]
        ]
    },
    {
        "id": "a92b04646d9c6f2e",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "020992df4203b447",
        "name": "prepare approve xlink",
        "rules": [
            {
                "t": "set",
                "p": "loop.approve_xlink",
                "pt": "msg",
                "to": "loop.approve_xlinks[$$.loop.approval_counter].version_pairs.xlink_ver[0]",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.id",
                "pt": "msg",
                "to": "loop.approve_xlink.id",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.major_version",
                "pt": "msg",
                "to": "loop.approve_xlink.major_version_number__v",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.minor_version",
                "pt": "msg",
                "to": "loop.approve_xlink.minor_version_number__v",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.documents_or_binders",
                "pt": "msg",
                "to": "documents",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "args.name__v",
                "pt": "msg",
                "to": "flow.instruction.xlink.approval_user_action_name__v",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2700,
        "y": 3020,
        "wires": [
            [
                "d3b98b30a63a3596"
            ]
        ]
    },
    {
        "id": "d3b98b30a63a3596",
        "type": "brave-initiate-user-action",
        "z": "32ccf302392ab325",
        "g": "020992df4203b447",
        "name": "",
        "x": 2970,
        "y": 3020,
        "wires": [
            [
                "19823a545a71267e",
                "af9a694663793e5b"
            ],
            [
                "3eaf6da9cf266a16"
            ]
        ]
    },
    {
        "id": "fceb3d3d2e109212",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "81e9aec5f845a51a",
        "name": "Set updated Vers Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$join(\t    [\t        \"SELECT\", \t        (\t            $join(\t                $distinct(\t                    $append(\t                        [\t                            \"id\",\t                            \"name__v\",\t                            \"title__v\",\t                            \"version_id\",\t                            \"major_version_number__v\",\t                            \"minor_version_number__v\",\t                            \"version_modified_date__v\",\t                            \"subtype__v\",\t                            \"classification__v\",\t                            \"type__v\",\t                            \"pages__v\"\t                        ],\t                        flow.instruction.source.select\t                    )\t                ),\t                \", \"\t            )\t        ),\t        \"FROM ALLVERSIONS documents\",\t        \"WHERE crosslink__v = false\", \t        \"AND binder__v = false\",\t        /*set the query interval between last run and now, shifted 2 Minute back to avoid any overlaps with ongoing write processes\t        use 1 second overlap between 2 runs to avoid any complications with potential rounding errors worst case an update would be processed twice*/\t        \"AND version_modified_date__v > '\" & $fromMillis(flow.instruction.last_run - 10,'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].000Z') & \"'\",\t        \"AND version_modified_date__v < '\" & $fromMillis(flow.instruction.this_run - 10,'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].000Z') & \"'\",\t        (flow.instruction.source.where?\"AND (\" & flow.instruction.source.where & \")\")\t    ], \" \"\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 1080,
        "wires": [
            [
                "1aa5333fd512107a",
                "4b5f5ecc9586eae4"
            ]
        ]
    },
    {
        "id": "bda58b47abff21b6",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "81e9aec5f845a51a",
        "name": "set updated source doc/vers",
        "rules": [
            {
                "t": "set",
                "p": "flow.source.doc_vers",
                "pt": "msg",
                "to": "$append(\t    $$.flow.source.doc_vers,\t    payload.data@$d[$not($d.version_id in $$.flow.source.doc_vers.version_id)].\t        $merge([\t            $d, \t            {\"sort_version\":$d.major_version_number__v*10000+$d.minor_version_number__v, \t            \"query_source\": \"modified\"}\t            ]\t        ))\t",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 1080,
        "wires": [
            [
                "1c8e4c4cdf03eee2",
                "4b5f5ecc9586eae4"
            ]
        ]
    },
    {
        "id": "1c8e4c4cdf03eee2",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "81e9aec5f845a51a",
        "name": "check if new or updated source document or versions returned",
        "property": "$count(flow.source.doc_vers)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 1140,
        "wires": [
            [
                "8e8c0131b37a7786"
            ],
            [
                "7c61b420098faa39"
            ]
        ]
    },
    {
        "id": "1aa5333fd512107a",
        "type": "brave-vql-query",
        "z": "32ccf302392ab325",
        "g": "81e9aec5f845a51a",
        "name": "",
        "x": 1330,
        "y": 1080,
        "wires": [
            [
                "bda58b47abff21b6"
            ],
            [
                "da98651e508e280e"
            ]
        ]
    },
    {
        "id": "62482c2b6fe5d356",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "prepare create new draft",
        "rules": [
            {
                "t": "set",
                "p": "loop.description",
                "pt": "msg",
                "to": "((loop.new_source_version.sort_version <= loop.xlink_latest_ver.sort_version) or (loop.new_source_version = null))?\t\"error\"\t:\t    (loop.new_source_version.sort_version = loop.xlink_latest_ver.sort_version+1 /*a simple single upversioning of draft*/\t    or \t    (\t        loop.new_source_version.minor_version_number__v = 0\t        and \t        loop.new_source_version.major_version_number__v = loop.xlink_latest_ver.major_version_number__v + 1\t    )/*an upversioning to an approved version*/\t    )? \t    loop.new_source_version.id & \"_\" & loop.new_source_version.major_version_number__v & \"_\" & loop.new_source_version.minor_version_number__v /*for the simple case, write the target versions_id into description__v*/\t    :\t        (loop.new_source_version.sort_version > loop.xlink_latest_ver.sort_version+1\t        and\t        loop.new_source_version.major_version_number__v = loop.xlink_latest_ver.major_version_number__v)? /*create a placeholder minor version*/\t        \"placeholder minor version\"\t        :\t        \"placeholder major version\"\t",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "loop.expected_xlink_sort_version",
                "pt": "msg",
                "to": "loop.xlink_latest_ver.sort_version+1",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"createDraft\": \"latestContent\",\t   \"description__v\": loop.description\t}",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.doc_id",
                "pt": "msg",
                "to": "loop.xlink_latest_ver.id",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2750,
        "y": 3300,
        "wires": [
            [
                "cdbab5695af22447",
                "36fca2e5794c69c5"
            ]
        ]
    },
    {
        "id": "b4a72a8be8ce5d3d",
        "type": "brave-create-single-document-version",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "",
        "x": 3470,
        "y": 3300,
        "wires": [
            [
                "671e961d7f1d5256"
            ],
            [
                "2bf5639b323869c7"
            ]
        ]
    },
    {
        "id": "f51c8f2b94947845",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "upversion xlinks: step 3 case 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4010,
        "y": 3360,
        "wires": []
    },
    {
        "id": "e47ea65863ab8ee8",
        "type": "link in",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "create xlink version in",
        "links": [
            "be7728c806b6de4f"
        ],
        "x": 2345,
        "y": 3180,
        "wires": [
            [
                "aece933906d11804"
            ]
        ]
    },
    {
        "id": "c06c861fe1ebfd32",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "create xlink version out",
        "mode": "return",
        "links": [],
        "x": 2525,
        "y": 3300,
        "wires": []
    },
    {
        "id": "a3afcdbe24dc6eb3",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "while new vers",
        "property": "loop.nv_counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2400,
        "y": 3240,
        "wires": [
            [
                "38f19c85f8776edb"
            ],
            [
                "c06c861fe1ebfd32"
            ]
        ]
    },
    {
        "id": "f508067b8052749b",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "next doc with new vers",
        "rules": [
            {
                "t": "set",
                "p": "loop.nv_counter",
                "pt": "msg",
                "to": "loop.nv_counter-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2420,
        "y": 3440,
        "wires": [
            [
                "a3afcdbe24dc6eb3"
            ]
        ]
    },
    {
        "id": "aece933906d11804",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "switch to xlink vault",
        "rules": [
            {
                "t": "set",
                "p": "temp.login_details",
                "pt": "msg",
                "to": "$lookup(flow.login, \"xlink\")",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "temp.login_details.client_id",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_api",
                "pt": "msg",
                "to": "temp.login_details.vault_api",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "session_id",
                "pt": "msg",
                "to": "temp.login_details.session_id",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_domain",
                "pt": "msg",
                "to": "temp.login_details.vault_domain",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "user_id",
                "pt": "msg",
                "to": "temp.login_details.user_id",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2730,
        "y": 3180,
        "wires": [
            [
                "24c7af1c1b65735a"
            ]
        ]
    },
    {
        "id": "24c7af1c1b65735a",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "Set loop nv_counter",
        "rules": [
            {
                "t": "set",
                "p": "loop.nv_counter",
                "pt": "msg",
                "to": "$count(loop.new_versions)-1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3080,
        "y": 3180,
        "wires": [
            [
                "a3afcdbe24dc6eb3"
            ]
        ]
    },
    {
        "id": "38f19c85f8776edb",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "Set new_version and xlink latest version",
        "rules": [
            {
                "t": "set",
                "p": "loop.new_version",
                "pt": "msg",
                "to": "loop.new_versions[$$.loop.nv_counter]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "loop.xlink_latest_ver",
                "pt": "msg",
                "to": "loop.new_version.latest_xlink",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "loop.new_source_version",
                "pt": "msg",
                "to": "loop.new_version.version_pairs.source_ver^(sort_version)[0]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2800,
        "y": 3240,
        "wires": [
            [
                "62482c2b6fe5d356"
            ]
        ]
    },
    {
        "id": "d0a3763e41c828b1",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "56418a5f1c01fec3",
        "name": "start",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2230,
        "y": 320,
        "wires": []
    },
    {
        "id": "2bf5639b323869c7",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "Handle Version Error",
        "rules": [
            {
                "t": "set",
                "p": "_log",
                "pt": "msg",
                "to": "$append(\t   _log,\t   [{\t       \"timestamp\": $now(),\t       \"severity\": \"ERROR\",\t       \"message\": $$.loop.new_source_version,\t       \"source\": \"create new draft xlink\"\t   },\t   {\t       \"timestamp\": $now(),\t       \"severity\": \"ERROR\",\t       \"message\": \"document version: \" & loop.new_source_version.version_id &  \" and has been excluded from this xlink run.\",\t       \"source\": \"create new draft xlink\"\t   }]\t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "flow.source.doc_vers",
                "pt": "msg",
                "to": "flow.source.doc_vers[version_id!=$$.loop.new_source_version.version_id]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3480,
        "y": 3440,
        "wires": [
            [
                "5a051ccd4278ef54",
                "f508067b8052749b"
            ]
        ]
    },
    {
        "id": "2033738e5affc8df",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "",
        "property": "true",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "jsonata_exp",
                "v": "loop.expected_xlink_sort_version != loop.xlink_latest_ver.sort_version",
                "vt": "jsonata"
            },
            {
                "t": "jsonata_exp",
                "v": "loop.description = \"placeholder minor version\"",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 3590,
        "y": 3380,
        "wires": [
            [
                "86277ed87d5d5203",
                "2bf5639b323869c7"
            ],
            [
                "62482c2b6fe5d356",
                "cc5b2d57360c96c7"
            ],
            [
                "f508067b8052749b",
                "0a29d75785637f19"
            ]
        ]
    },
    {
        "id": "b3ee3c13b1a0f8e6",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "56bca0108c880039",
        "name": "re-evaluate status",
        "mode": "link",
        "links": [
            "b7487ff351fb7a6b"
        ],
        "x": 2015,
        "y": 2580,
        "wires": []
    },
    {
        "id": "b587d10aedda5fcd",
        "type": "link call",
        "z": "32ccf302392ab325",
        "g": "56bca0108c880039",
        "name": "new docs",
        "links": [
            "7486b4e656d25b50"
        ],
        "linkType": "static",
        "timeout": "600",
        "x": 2060,
        "y": 2520,
        "wires": [
            [
                "b3ee3c13b1a0f8e6"
            ]
        ]
    },
    {
        "id": "386b3e9297c89e33",
        "type": "link call",
        "z": "32ccf302392ab325",
        "g": "56bca0108c880039",
        "name": "update xlinks",
        "links": [
            "43c95e6e9db87c7a"
        ],
        "linkType": "static",
        "timeout": "600",
        "x": 2070,
        "y": 2720,
        "wires": [
            [
                "ce482cbccec6ba9a"
            ]
        ]
    },
    {
        "id": "ce482cbccec6ba9a",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "56bca0108c880039",
        "name": "re-evaluate status",
        "mode": "link",
        "links": [
            "b7487ff351fb7a6b"
        ],
        "x": 2015,
        "y": 2780,
        "wires": []
    },
    {
        "id": "8cea64c69e31787e",
        "type": "link call",
        "z": "32ccf302392ab325",
        "g": "56bca0108c880039",
        "name": "approve xlinks",
        "links": [
            "c66395e6cab17ac0"
        ],
        "linkType": "static",
        "timeout": "600",
        "x": 2080,
        "y": 2960,
        "wires": [
            [
                "991ef6455c72733e"
            ]
        ]
    },
    {
        "id": "991ef6455c72733e",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "56bca0108c880039",
        "name": "re-evaluate status",
        "mode": "link",
        "links": [
            "b7487ff351fb7a6b"
        ],
        "x": 2015,
        "y": 3020,
        "wires": []
    },
    {
        "id": "bd9bf511fd82441b",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "56bca0108c880039",
        "name": "re-evaluate status",
        "mode": "link",
        "links": [
            "b7487ff351fb7a6b"
        ],
        "x": 2015,
        "y": 3240,
        "wires": []
    },
    {
        "id": "095d7fef212c31e5",
        "type": "link call",
        "z": "32ccf302392ab325",
        "g": "56bca0108c880039",
        "name": "create new xlink version",
        "links": [
            "e47ea65863ab8ee8"
        ],
        "linkType": "static",
        "timeout": "600",
        "x": 2110,
        "y": 3180,
        "wires": [
            [
                "bd9bf511fd82441b"
            ]
        ]
    },
    {
        "id": "9dba81b02b1c9883",
        "type": "inject",
        "z": "32ccf302392ab325",
        "g": "56418a5f1c01fec3",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 770,
        "y": 320,
        "wires": [
            [
                "77a81cf3288f38df"
            ]
        ]
    },
    {
        "id": "cea63348a4243ca7",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "81e9aec5f845a51a",
        "name": "new source documents",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2170,
        "y": 1060,
        "wires": []
    },
    {
        "id": "761ee2b200f2362d",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "81e9aec5f845a51a",
        "name": "updated source documents",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2180,
        "y": 1140,
        "wires": []
    },
    {
        "id": "d8b66721dacadcc8",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "56bca0108c880039",
        "name": "pair source and xlink to doc_pairs",
        "rules": [
            {
                "t": "set",
                "p": "loop",
                "pt": "msg",
                "to": "/* assign doc version pairs to different groups. A single pair maybe assigned to more than one group, e.g. new source and new version. This will be handled by the order of processing. */\t{\t    /* new_sources: all source documents without any xlink */\t    \"new_sources\": flow.doc_pairs[xlink_id?false:true][],\t    /* new_versions: all source document versions without a xlink */\t    \"new_versions\": (flow.doc_pairs@$docpair.\t                            {   \"source_id\": $docpair.source_id,\t                                \"xlink_id\": $docpair.xlink_id,\t                                \"latest_xlink\": $docpair.latest_xlink,\t                                \"first_source\": $docpair.first_source,\t                                \"version_pairs\":\t                                    /* only if the version pair does not include an xlink */\t                                    $docpair.version_pairs@$verpair[$verpair.xlink_ver?false:true].{\t                                    \"source_ver\":$verpair.source_ver\t                                    }[]\t                            }\t                        )[version_pairs][],\t    /* approve_xlinks: xlinks which need approval to next major version. */\t    \"approve_xlinks\": (flow.doc_pairs@$docpair.\t                            {   \"source_id\": $docpair.source_id,\t                                \"xlink_id\": $docpair.xlink_id,\t                                \"latest_xlink\": $docpair.latest_xlink,\t                                \"first_source\": $docpair.first_source,\t                                \"version_pairs\":\t                                    $append(\t                                        /* source version / xlink version pairs, where the bound source version is a major version (i.e. minor vers = 0) and the major version number is the consequential number */\t                                        $docpair.version_pairs@$verpair[\t                                                $verpair.xlink_ver.bound_source_minor_version__v = 0 \t                                            and $verpair.xlink_ver.minor_version_number__v > 0\t                                            and $verpair.xlink_ver.bound_source_major_version__v = $verpair.xlink_ver.major_version_number__v + 1\t                                            ].{\t                                                \"source_ver\":$verpair.source_ver,\t                                                \"xlink_ver\":$verpair.xlink_ver\t                                            }[],\t                                        /* xlink versions which are just created as placeholder for approval, i.e. an interim major version of the source had been deleted. This is added to the version description, xlink_approved is an internal flag of the automation run set after approval.*/\t                                        [\t                                            {\t                                                \"xlink_ver\":$$.flow.xlink.doc_vers[id=$docpair.xlink_id]^(>sort_version)[0][description__v=\"placeholder major version\" and $not(xlink_approved)]\t                                            }\t                                        ]\t                                    )\t                            }\t                        )[version_pairs][],\t    /* update_xlinks: xlinks where the source version has been updated since last run. */\t    \"update_xlinks\": (flow.doc_pairs@$docpair.\t                            {   \"source_id\": $docpair.source_id,\t                                \"xlink_id\": $docpair.xlink_id,\t                                \"latest_xlink\": $docpair.latest_xlink,\t                                \"first_source\": $docpair.first_source,\t                                \"version_pairs\":\t                                    /* the version pair includes a xlink but this has not just be created or updated, determined by internal flags of the automation run set after such action.*/\t                                    $docpair.version_pairs@$verpair[\t                                            $verpair.xlink_ver \t                                        and $not($verpair.xlink_ver.xlink_created or $verpair.xlink_ver.xlink_updated)\t                                    ].{\t                                        \"source_ver\":$verpair.source_ver,\t                                        \"xlink_ver\":$verpair.xlink_ver\t                                    }[]\t                            }\t                        )[version_pairs][],\t    /* matching pairs, may include those still needing updates */\t    \"matching_xlinks\": (flow.doc_pairs@$docpair.\t                            {   \"source_id\": $docpair.source_id,\t                                \"xlink_id\": $docpair.xlink_id,\t                                \"latest_xlink\": $docpair.latest_xlink,\t                                \"first_source\": $docpair.first_source,\t                                \"version_pairs\":\t                                    $docpair.version_pairs@$verpair[\t                                            $verpair.xlink_ver.sort_version = $verpair.source_ver.sort_version \t                                        and $verpair.xlink_ver.sort_version = $verpair.xlink_ver.sort_bound_version].{\t                                    \"source_ver\":$verpair.source_ver,\t                                    \"xlink_ver\":$verpair.xlink_ver\t                                    }[]\t                                    })[version_pairs][]\t\t}\t",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "loop.unmatched_xlinks",
                "pt": "msg",
                "to": "(\t   $ma_xl_vids:=loop.matching_xlinks.version_pairs.xlink_ver.version_id;\t/*   {\t       \"unmatched_xlinks\": */flow.xlink.doc_vers@$dv[\t           $not(\t               $dv.version_id in $ma_xl_vids  /*xlink version is in matching list*/\t               or \t               $dv.sort_version < $$.flow.doc_pairs[xlink_id=$dv.id].first_source.sort_version   /*xlink version is older than the source version in updating scope*/\t           )\t       ].$dv.version_id\t\t/*   }*/\t)\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 3160,
        "wires": [
            [
                "23aca15730715d76",
                "4c2cd057f4d612dd"
            ]
        ]
    },
    {
        "id": "cdbab5695af22447",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "source version higher than latest xlink version",
        "property": "loop.description != \"error\"",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 3110,
        "y": 3300,
        "wires": [
            [
                "b4a72a8be8ce5d3d",
                "441779e175d965b5"
            ],
            [
                "2bf5639b323869c7"
            ]
        ]
    },
    {
        "id": "671e961d7f1d5256",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "add created xlink to flow.xlink.doc_vers",
        "rules": [
            {
                "t": "set",
                "p": "loop.xlink_latest_ver",
                "pt": "msg",
                "to": "    {\t   \"major_version_number__v\":payload.major_version_number__v,\t   \"minor_version_number__v\":payload.minor_version_number__v,\t   \"sort_version\": 10000*payload.major_version_number__v + payload.minor_version_number__v,\t   \"id\": loop.xlink_latest_ver.id,\t   \"version_id\":          loop.xlink_latest_ver.id & \"_\" &         payload.major_version_number__v &\t   \"_\" &         payload.minor_version_number__v,\t   \"responseStatus\": $$.payload.responseStatus,\t   \"responseMessage\": $$.payload.responseMessage,\t   \"source_version_id\": $$.loop.new_version.version_id,\t   \"sort_bound_version\": $$.loop.new_xlink.bound_source_major_version__v*10000 + $$.loop.new_xlink.bound_source_minor_version__v,\t   \"version_modified_date__v\": $now(),\t   \"xlink_version_created\": true,\t   \"description__v\": $$.loop.description,\t   \"bound_source_major_version__v\" : $$.loop.new_source_version.major_version_number__v,\t   \"bound_source_minor_version__v\" : $$.loop.new_source_version.minor_version_number__v\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "flow.xlink.doc_vers",
                "pt": "msg",
                "to": "$append(\t   $$.flow.xlink.doc_vers,\t   loop.xlink_latest_ver\t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "_log",
                "pt": "msg",
                "to": "$append(\t   _log,\t   {\t       \"timestamp\": $now(),\t       \"severity\": \"INFORMATION\",\t       \"message\": $$.loop.xlink_latest_ver,\t       \"source\": \"create new draft xlink\"\t   } \t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3350,
        "y": 3380,
        "wires": [
            [
                "2033738e5affc8df"
            ]
        ]
    },
    {
        "id": "f6df9325f7fcf4ee",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "d496576295362680",
        "name": "check if xlink is provided",
        "property": "true",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "jsonata_exp",
                "v": "$exists(loop.update_xlink.xlink_ver)",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2970,
        "y": 2800,
        "wires": [
            [
                "1cd5a9446f947f14"
            ],
            [
                "2f1a17522978e333"
            ]
        ]
    },
    {
        "id": "cf3b63f7cf60b221",
        "type": "change",
        "z": "32ccf302392ab325",
        "name": "prepare set last run",
        "rules": [
            {
                "t": "set",
                "p": "args.topic",
                "pt": "msg",
                "to": "$replace(\t   $join(\t       [\t           \"LOG__\" & client_id,\t           flow.instruction.name__v,\t           \"last_run\",\t           \"h\"        \t       ],\t       \":\"    \t   ),\t   /[ \"']/,\t   \"_\" \t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "args.method",
                "pt": "msg",
                "to": "SET",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "flow.instruction.this_run",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 3580,
        "wires": [
            [
                "b130a6157b27c6dc"
            ]
        ]
    },
    {
        "id": "b130a6157b27c6dc",
        "type": "brave-redis-queue",
        "z": "32ccf302392ab325",
        "name": "",
        "x": 870,
        "y": 3580,
        "wires": [
            [
                "6ae0051eeaef56db",
                "d0107ff77feed2a1"
            ],
            [
                "627ecdc1591df35a",
                "d0107ff77feed2a1"
            ]
        ]
    },
    {
        "id": "1ca05f26dbfb52ca",
        "type": "debug",
        "z": "32ccf302392ab325",
        "name": "debug 349",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1790,
        "y": 3640,
        "wires": []
    },
    {
        "id": "77a81cf3288f38df",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "56418a5f1c01fec3",
        "name": "manually set flow.login",
        "rules": [
            {
                "t": "set",
                "p": "flow.login.username",
                "pt": "msg",
                "to": "gembrave.connection@bayersbx.com",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flow.login.password",
                "pt": "msg",
                "to": "0MPOB1k4FJ2lQdw!1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "create_xlink",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flow.login.instruction.vault_domain",
                "pt": "msg",
                "to": "bayersbx-bayer-ph-rim-r2-explore.veevavault.com",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flow.login.instruction.subset",
                "pt": "msg",
                "to": "dummy1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 320,
        "wires": [
            [
                "04be81a30ca8b5f2"
            ]
        ]
    },
    {
        "id": "1743802bb44984d7",
        "type": "subflow:594e48a4aa27c6b6",
        "z": "32ccf302392ab325",
        "name": "Keep this to make sure redis works",
        "x": 2960,
        "y": 300,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "3ce9fc6e576dabe1",
        "type": "http in",
        "z": "32ccf302392ab325",
        "g": "56418a5f1c01fec3",
        "name": "",
        "url": "create_xlink",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 810,
        "y": 260,
        "wires": [
            [
                "27f0ad638de63534"
            ]
        ]
    },
    {
        "id": "74ef0e332df6263a",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "56418a5f1c01fec3",
        "name": "debug 351",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 200,
        "wires": []
    },
    {
        "id": "27f0ad638de63534",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "56418a5f1c01fec3",
        "name": "set flow.login from payload",
        "rules": [
            {
                "t": "set",
                "p": "flow.login",
                "pt": "msg",
                "to": "{\t    \"username\":payload.username,\t    \"password\":payload.password,\t    \"instruction\":{\"vault_domain\":payload.vault_domain, \"subset\":payload.subset}\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 260,
        "wires": [
            [
                "04be81a30ca8b5f2"
            ]
        ]
    },
    {
        "id": "a33054588653f5e0",
        "type": "http response",
        "z": "32ccf302392ab325",
        "g": "429ca0f28c6eb552",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2290,
        "y": 540,
        "wires": []
    },
    {
        "id": "78537d38ed716bca",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "56418a5f1c01fec3",
        "name": "login failed",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "login failed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1790,
        "y": 200,
        "wires": [
            [
                "49f8195583d786cf"
            ]
        ]
    },
    {
        "id": "49f8195583d786cf",
        "type": "http response",
        "z": "32ccf302392ab325",
        "g": "56418a5f1c01fec3",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2030,
        "y": 200,
        "wires": []
    },
    {
        "id": "27776784864da7d3",
        "type": "http response",
        "z": "32ccf302392ab325",
        "g": "56418a5f1c01fec3",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1550,
        "y": 260,
        "wires": []
    },
    {
        "id": "680916713482071c",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "56418a5f1c01fec3",
        "name": "Flow not active",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Flow not active",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 260,
        "wires": [
            [
                "27776784864da7d3"
            ]
        ]
    },
    {
        "id": "91facf7f2cde805d",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "56418a5f1c01fec3",
        "name": "debug?",
        "property": "flow.settings.debug",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2080,
        "y": 320,
        "wires": [
            [
                "d0a3763e41c828b1"
            ]
        ]
    },
    {
        "id": "a6173c01ed59b86f",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "429ca0f28c6eb552",
        "name": "OK",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "login and start OK",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2090,
        "y": 540,
        "wires": [
            [
                "a33054588653f5e0"
            ]
        ]
    },
    {
        "id": "c012f787da98de2b",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "56418a5f1c01fec3",
        "name": "retrieve settings failed",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "retrieve settings failed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1840,
        "y": 260,
        "wires": [
            [
                "65c7183a4ac89787"
            ]
        ]
    },
    {
        "id": "65c7183a4ac89787",
        "type": "http response",
        "z": "32ccf302392ab325",
        "g": "56418a5f1c01fec3",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2030,
        "y": 260,
        "wires": []
    },
    {
        "id": "a32cf550f15f2149",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "429ca0f28c6eb552",
        "name": "retrieve instructions failed",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "retrieve instructions failed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2030,
        "y": 480,
        "wires": [
            [
                "ac4a83b089c383d2"
            ]
        ]
    },
    {
        "id": "ac4a83b089c383d2",
        "type": "http response",
        "z": "32ccf302392ab325",
        "g": "429ca0f28c6eb552",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2270,
        "y": 480,
        "wires": []
    },
    {
        "id": "f31ed7f84d10db2d",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "429ca0f28c6eb552",
        "name": "Error Abbort",
        "mode": "link",
        "links": [
            "65a23e1026df92f0"
        ],
        "x": 1445,
        "y": 540,
        "wires": [],
        "icon": "font-awesome/fa-hand-stop-o"
    },
    {
        "id": "31af2fa0558d0fc5",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "429ca0f28c6eb552",
        "name": "Error Abbort",
        "mode": "link",
        "links": [
            "65a23e1026df92f0"
        ],
        "x": 1445,
        "y": 600,
        "wires": [],
        "icon": "font-awesome/fa-hand-stop-o"
    },
    {
        "id": "f4fca5f780970cc4",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "429ca0f28c6eb552",
        "name": "Error status update",
        "rules": [
            {
                "t": "set",
                "p": "_log",
                "pt": "msg",
                "to": "$append(\t   _log,\t   {\t       \"timestamp\": $now(),\t       \"severity\": \"WARNING\",\t       \"message\": payload,\t       \"source\":  \"Error retrieve last run time\"\t   }\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1405,
        "y": 680,
        "wires": [
            [
                "ac87a34d55764163",
                "d348b58ca7101db9"
            ]
        ],
        "l": false
    },
    {
        "id": "ac87a34d55764163",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "429ca0f28c6eb552",
        "name": "Error log and continue",
        "mode": "link",
        "links": [
            "1b602c62a8f8490b"
        ],
        "x": 1545,
        "y": 680,
        "wires": [],
        "icon": "font-awesome/fa-warning"
    },
    {
        "id": "7cd49bbb21845b99",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "56418a5f1c01fec3",
        "name": "Error Abbort",
        "mode": "link",
        "links": [
            "65a23e1026df92f0"
        ],
        "x": 1725,
        "y": 320,
        "wires": [],
        "icon": "font-awesome/fa-hand-stop-o"
    },
    {
        "id": "65a23e1026df92f0",
        "type": "link in",
        "z": "32ccf302392ab325",
        "g": "1f8f94a681476572",
        "name": "Error Abbort",
        "links": [
            "128d254562eefa6d",
            "1471bb087e0151a1",
            "1581a680db671e5c",
            "237ec4378b954253",
            "2d4fea7ab5be2b2d",
            "2f69e1a30bdfb343",
            "382c142b2728b2ed",
            "3cae3fc43b4ec3a4",
            "4e18791855151808",
            "50fd31f5ce377d4c",
            "514d6d3b62ea32ed",
            "6118fd21f5dc9d98",
            "cfadd0fab9ef544b",
            "841d5405f127271f",
            "84896e26921b7704",
            "866a06205046b29d",
            "8aac891cf0cd37ad",
            "93013df967f1cb8e",
            "9838823c52dca3d9",
            "9e1b8ba0d0864e72",
            "9f252d9d55c756e6",
            "ae338033f5247ad4",
            "b6c096abb27dca98",
            "d91be8663ab18314",
            "e2dac2eaf5e7a887",
            "41931d136ad315d4",
            "ee45d82f4de0766c",
            "7bbbe1cc5739c7eb",
            "810558cfb37deaa9",
            "5954662b0f9ec8f0",
            "4b8871e780cde765",
            "97db13b20a3edac9",
            "58d93fbb6b0dddf0",
            "00dbaccb200ea05a",
            "ced81cb6249e47d5",
            "8acbd2b5d2c7b0df",
            "90f2d501681c289c",
            "17483d6514c74edc",
            "22f771342a04e34d",
            "d82eeb3e686d43df",
            "08ef418a352ddb94",
            "bb938a9810fc26b8",
            "23a6c4f5ae98bf1d",
            "66a3701619ae33b4",
            "58b0f1ab4a989e2a",
            "0b61a5e97c10d2d2",
            "2c93528756f2e1c0",
            "cbf20dc425315569",
            "f31ed7f84d10db2d",
            "31af2fa0558d0fc5",
            "7cd49bbb21845b99",
            "2d7618f632dd69a0",
            "8eb57d4712531671",
            "569532f3498a01b6",
            "9819636b1d12be9c",
            "da98651e508e280e",
            "2a3858970a774fd8",
            "abac2caf7c1bcc06",
            "fb9d5cc853187d94",
            "40dc7c66631ca966",
            "e691ceecf149b649",
            "c304a13f5e331386",
            "3eaf6da9cf266a16",
            "67e248fc7982d262",
            "95b08c0e9b4188a1",
            "4fd633d3741e7505",
            "7210199be077cd2e"
        ],
        "x": 2690,
        "y": 960,
        "wires": [
            [
                "5026767d85263364",
                "0b253214fbe672c6"
            ]
        ],
        "l": true
    },
    {
        "id": "5026767d85263364",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "1f8f94a681476572",
        "name": "LOG to Redis",
        "rules": [
            {
                "t": "set",
                "p": "args.topic",
                "pt": "msg",
                "to": "$replace(\t   $join(\t       [\t           \"LOG__\" & client_id,\t           $string(_object_id),\t           $replace(\t               starttime?starttime:$now()\t               ,\":\",\"-\"),\t           \"ERROR\",\t           \"h\"\t       ],\t       \":\"\t   ),\t   /[ \"']/,\t   \"_\"\t)",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "args.method",
                "pt": "msg",
                "to": "SET",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "_log",
                "pt": "msg",
                "to": "$append(\t   _log,\t   {\t       \"timestamp\": $now(),\t       \"severity\": \"FATAL ERROR\",\t       \"message\": $merge($each($, function($v, $k) {($k!=\"req\" and $k!=\"res\")?{$k:$v}})),\t       \"source\":  $string(_event)\t   }\t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "_log",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2940,
        "y": 960,
        "wires": [
            [
                "ddaeb86daaab9cdf"
            ]
        ]
    },
    {
        "id": "c33863e74002c7d8",
        "type": "brave-redis-queue",
        "z": "32ccf302392ab325",
        "g": "1f8f94a681476572",
        "name": "",
        "x": 3270,
        "y": 960,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "ddaeb86daaab9cdf",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "1f8f94a681476572",
        "name": "set expire",
        "rules": [
            {
                "t": "set",
                "p": "args.expire",
                "pt": "msg",
                "to": "6*7*24*60*60",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3120,
        "y": 960,
        "wires": [
            [
                "c33863e74002c7d8"
            ]
        ]
    },
    {
        "id": "d25530bf3a20932d",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "56bca0108c880039",
        "name": "Error incomplete run",
        "rules": [
            {
                "t": "set",
                "p": "_log",
                "pt": "msg",
                "to": "$append(\t   _log,\t   {\t       \"timestamp\": $now(),\t       \"severity\": \"WARNING\",\t       \"message\": payload,\t       \"source\":  \"Error incomplete run\"\t   }\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2080,
        "y": 3480,
        "wires": [
            [
                "cf3b63f7cf60b221",
                "4bbfae722449baaa"
            ]
        ]
    },
    {
        "id": "4bbfae722449baaa",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "56bca0108c880039",
        "name": "Error log and continue",
        "mode": "link",
        "links": [
            "1b602c62a8f8490b"
        ],
        "x": 2255,
        "y": 3480,
        "wires": [],
        "icon": "font-awesome/fa-warning"
    },
    {
        "id": "627ecdc1591df35a",
        "type": "change",
        "z": "32ccf302392ab325",
        "name": "Error incomplete run",
        "rules": [
            {
                "t": "set",
                "p": "_log",
                "pt": "msg",
                "to": "$append(\t   _log,\t   {\t       \"timestamp\": $now(),\t       \"severity\": \"WARNING\",\t       \"message\": payload,\t       \"source\":  \"Error incomplete run\"\t   }\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 3720,
        "wires": [
            [
                "55db3214a632ccd1"
            ]
        ]
    },
    {
        "id": "55db3214a632ccd1",
        "type": "link out",
        "z": "32ccf302392ab325",
        "name": "Error log and continue",
        "mode": "link",
        "links": [
            "1b602c62a8f8490b"
        ],
        "x": 1355,
        "y": 3720,
        "wires": [],
        "icon": "font-awesome/fa-warning"
    },
    {
        "id": "6ae0051eeaef56db",
        "type": "change",
        "z": "32ccf302392ab325",
        "name": "Information log",
        "rules": [
            {
                "t": "set",
                "p": "args.topic",
                "pt": "msg",
                "to": "$replace(\t   $join(\t       [\t           \"LOG__\" & client_id,\t           flow.instruction.name__v,\t           \"INFORMATION\",\t           \"h\"        \t       ],\t       \":\"    \t   ),\t   /[ \"']/,\t   \"_\" \t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "args.method",
                "pt": "msg",
                "to": "SET",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "_log",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 3560,
        "wires": [
            [
                "ab6058618f7a9d8b"
            ]
        ]
    },
    {
        "id": "ab6058618f7a9d8b",
        "type": "brave-redis-queue",
        "z": "32ccf302392ab325",
        "name": "",
        "x": 1410,
        "y": 3560,
        "wires": [
            [
                "d0107ff77feed2a1"
            ],
            [
                "d0107ff77feed2a1"
            ]
        ]
    },
    {
        "id": "8eb57d4712531671",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "50739f124cb8563b",
        "name": "Error Abbort",
        "mode": "link",
        "links": [
            "65a23e1026df92f0"
        ],
        "x": 1445,
        "y": 780,
        "wires": [],
        "icon": "font-awesome/fa-hand-stop-o"
    },
    {
        "id": "569532f3498a01b6",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "8dfbdc55ff62d17e",
        "name": "Error Abbort",
        "mode": "link",
        "links": [
            "65a23e1026df92f0"
        ],
        "x": 1445,
        "y": 880,
        "wires": [],
        "icon": "font-awesome/fa-hand-stop-o"
    },
    {
        "id": "9819636b1d12be9c",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "81e9aec5f845a51a",
        "name": "Error Abbort",
        "mode": "link",
        "links": [
            "65a23e1026df92f0"
        ],
        "x": 1445,
        "y": 1020,
        "wires": [],
        "icon": "font-awesome/fa-hand-stop-o"
    },
    {
        "id": "da98651e508e280e",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "81e9aec5f845a51a",
        "name": "Error Abbort",
        "mode": "link",
        "links": [
            "65a23e1026df92f0"
        ],
        "x": 1445,
        "y": 1100,
        "wires": [],
        "icon": "font-awesome/fa-hand-stop-o"
    },
    {
        "id": "2a3858970a774fd8",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "efd44d58605fc3aa",
        "name": "Error Abbort",
        "mode": "link",
        "links": [
            "65a23e1026df92f0"
        ],
        "x": 1455,
        "y": 1260,
        "wires": [],
        "icon": "font-awesome/fa-hand-stop-o"
    },
    {
        "id": "abac2caf7c1bcc06",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "c9d97f19c3150a81",
        "name": "Error Abbort",
        "mode": "link",
        "links": [
            "65a23e1026df92f0"
        ],
        "x": 1895,
        "y": 1560,
        "wires": [],
        "icon": "font-awesome/fa-hand-stop-o"
    },
    {
        "id": "fb9d5cc853187d94",
        "type": "link out",
        "z": "32ccf302392ab325",
        "name": "Error Abbort",
        "mode": "link",
        "links": [
            "65a23e1026df92f0"
        ],
        "x": 1832,
        "y": 1930,
        "wires": [],
        "icon": "font-awesome/fa-hand-stop-o"
    },
    {
        "id": "40dc7c66631ca966",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "2fb1f8ac58d94586",
        "name": "Error Abbort",
        "mode": "link",
        "links": [
            "65a23e1026df92f0"
        ],
        "x": 1845,
        "y": 2240,
        "wires": [],
        "icon": "font-awesome/fa-hand-stop-o"
    },
    {
        "id": "e691ceecf149b649",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "ef776e6ae30994ac",
        "name": "Error Abbort",
        "mode": "link",
        "links": [
            "65a23e1026df92f0"
        ],
        "x": 3305,
        "y": 2580,
        "wires": [],
        "icon": "font-awesome/fa-hand-stop-o"
    },
    {
        "id": "c304a13f5e331386",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "d496576295362680",
        "name": "Error Abbort",
        "mode": "link",
        "links": [
            "65a23e1026df92f0"
        ],
        "x": 3455,
        "y": 2800,
        "wires": [],
        "icon": "font-awesome/fa-hand-stop-o"
    },
    {
        "id": "3eaf6da9cf266a16",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "020992df4203b447",
        "name": "Error Abbort",
        "mode": "link",
        "links": [
            "65a23e1026df92f0"
        ],
        "x": 3115,
        "y": 3080,
        "wires": [],
        "icon": "font-awesome/fa-hand-stop-o"
    },
    {
        "id": "5a051ccd4278ef54",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "Error Abbort",
        "mode": "link",
        "links": [
            "1b602c62a8f8490b"
        ],
        "x": 3645,
        "y": 3440,
        "wires": [],
        "icon": "font-awesome/fa-warning"
    },
    {
        "id": "901c4527bc686831",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "81e9aec5f845a51a",
        "name": "debug?",
        "property": "flow.settings.debug",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1940,
        "y": 1060,
        "wires": [
            [
                "cea63348a4243ca7"
            ]
        ]
    },
    {
        "id": "4b5f5ecc9586eae4",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "81e9aec5f845a51a",
        "name": "debug?",
        "property": "flow.settings.debug",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1940,
        "y": 1140,
        "wires": [
            [
                "761ee2b200f2362d"
            ]
        ]
    },
    {
        "id": "c653bd43402589c0",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "efd44d58605fc3aa",
        "name": "debug?",
        "property": "flow.settings.debug",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1920,
        "y": 1260,
        "wires": [
            [
                "a636dd3b7fabfe4a"
            ]
        ]
    },
    {
        "id": "0a29d75785637f19",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "debug?",
        "property": "flow.settings.debug",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3780,
        "y": 3420,
        "wires": [
            [
                "1a8c840ed51562f0"
            ]
        ]
    },
    {
        "id": "cc5b2d57360c96c7",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "debug?",
        "property": "flow.settings.debug",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3780,
        "y": 3360,
        "wires": [
            [
                "f51c8f2b94947845"
            ]
        ]
    },
    {
        "id": "86277ed87d5d5203",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "debug?",
        "property": "flow.settings.debug",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3780,
        "y": 3300,
        "wires": [
            [
                "f17e97139cc1335f"
            ]
        ]
    },
    {
        "id": "441779e175d965b5",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "debug?",
        "property": "flow.settings.debug",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3780,
        "y": 3240,
        "wires": [
            [
                "1fcd58a9e26226c2"
            ]
        ]
    },
    {
        "id": "36fca2e5794c69c5",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "debug?",
        "property": "flow.settings.debug",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3780,
        "y": 3180,
        "wires": [
            [
                "abaaf1402b79ef05"
            ]
        ]
    },
    {
        "id": "af9a694663793e5b",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "020992df4203b447",
        "name": "debug?",
        "property": "flow.settings.debug",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3780,
        "y": 2980,
        "wires": [
            [
                "57013fc0b1ca7087"
            ]
        ]
    },
    {
        "id": "57013fc0b1ca7087",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "020992df4203b447",
        "name": "approve xlinks",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3960,
        "y": 2980,
        "wires": []
    },
    {
        "id": "abaaf1402b79ef05",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "upversion xlinks: step 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3990,
        "y": 3180,
        "wires": []
    },
    {
        "id": "1fcd58a9e26226c2",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "upversion xlinks: step 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3990,
        "y": 3240,
        "wires": []
    },
    {
        "id": "f17e97139cc1335f",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "upversion xlinks: step 3 case 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4010,
        "y": 3300,
        "wires": []
    },
    {
        "id": "1a8c840ed51562f0",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "upversion xlinks: step 3 case 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4010,
        "y": 3420,
        "wires": []
    },
    {
        "id": "33ad49373220d220",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "d496576295362680",
        "name": "debug?",
        "property": "flow.settings.debug",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3780,
        "y": 2740,
        "wires": [
            [
                "eba5c10f5be82a5d"
            ]
        ]
    },
    {
        "id": "eba5c10f5be82a5d",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "d496576295362680",
        "name": "update xlinks: step 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3980,
        "y": 2740,
        "wires": []
    },
    {
        "id": "67b2a2395494575b",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "d496576295362680",
        "name": "debug?",
        "property": "flow.settings.debug",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3780,
        "y": 2800,
        "wires": [
            [
                "3af2752e5c61f07e"
            ]
        ]
    },
    {
        "id": "3af2752e5c61f07e",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "d496576295362680",
        "name": "update xlinks: step 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3980,
        "y": 2800,
        "wires": []
    },
    {
        "id": "2dde79e37bfd9a7e",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "d496576295362680",
        "name": "debug?",
        "property": "flow.settings.debug",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3780,
        "y": 2860,
        "wires": [
            [
                "d1e7ad315bc25c6b"
            ]
        ]
    },
    {
        "id": "d1e7ad315bc25c6b",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "d496576295362680",
        "name": "update xlinks: step 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3980,
        "y": 2860,
        "wires": []
    },
    {
        "id": "a65ce93c89c2599a",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "ef776e6ae30994ac",
        "name": "debug?",
        "property": "flow.settings.debug",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3780,
        "y": 2580,
        "wires": [
            [
                "d4d55db365ec4e3d"
            ]
        ]
    },
    {
        "id": "d4d55db365ec4e3d",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "ef776e6ae30994ac",
        "name": "new xlinks: step 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3970,
        "y": 2580,
        "wires": []
    },
    {
        "id": "601dd3c7dc2817a5",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "ef776e6ae30994ac",
        "name": "debug?",
        "property": "flow.settings.debug",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3780,
        "y": 2640,
        "wires": [
            [
                "fc82347c85b692dd"
            ]
        ]
    },
    {
        "id": "fc82347c85b692dd",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "ef776e6ae30994ac",
        "name": "new xlinks: step 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3970,
        "y": 2640,
        "wires": []
    },
    {
        "id": "3dbcba8702bb65e4",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "ef776e6ae30994ac",
        "name": "debug?",
        "property": "flow.settings.debug",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3780,
        "y": 2500,
        "wires": [
            [
                "7ce5bb81dd221063"
            ]
        ]
    },
    {
        "id": "db1f8c0193412c4d",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "ef776e6ae30994ac",
        "name": "new xlinks: step 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 4150,
        "y": 2480,
        "wires": []
    },
    {
        "id": "39bdbb6eb6b7e9a6",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "41304ce80e23ede0",
        "name": "debug?",
        "property": "flow.settings.debug",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1800,
        "y": 1680,
        "wires": [
            [
                "883c657b5f0a1cea"
            ]
        ]
    },
    {
        "id": "883c657b5f0a1cea",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "41304ce80e23ede0",
        "name": "get objects",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2090,
        "y": 1680,
        "wires": []
    },
    {
        "id": "7d904bf04f4f0d3f",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "4d78ed85bdabae1a",
        "name": "debug?",
        "property": "flow.settings.debug",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1800,
        "y": 2000,
        "wires": [
            [
                "f9dfa363677e53f2"
            ]
        ]
    },
    {
        "id": "f9dfa363677e53f2",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "4d78ed85bdabae1a",
        "name": "get picklists",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2090,
        "y": 2000,
        "wires": []
    },
    {
        "id": "5a08d75fb4074cc4",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "bbf1e46794a4a441",
        "name": "debug?",
        "property": "flow.settings.debug",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1820,
        "y": 2320,
        "wires": [
            [
                "eeb4b752bdaa01ef"
            ]
        ]
    },
    {
        "id": "eeb4b752bdaa01ef",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "bbf1e46794a4a441",
        "name": "get mappings",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2080,
        "y": 2320,
        "wires": []
    },
    {
        "id": "23aca15730715d76",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "56bca0108c880039",
        "name": "debug?",
        "property": "flow.settings.debug",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1640,
        "y": 2820,
        "wires": [
            [
                "39f91ba891be52fb"
            ]
        ]
    },
    {
        "id": "39f91ba891be52fb",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "56bca0108c880039",
        "name": "pairing xlinks and sources",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1830,
        "y": 2820,
        "wires": []
    },
    {
        "id": "d0107ff77feed2a1",
        "type": "switch",
        "z": "32ccf302392ab325",
        "name": "debug?",
        "property": "flow.settings.debug",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1520,
        "y": 3640,
        "wires": [
            [
                "1ca05f26dbfb52ca"
            ]
        ]
    },
    {
        "id": "9bb271194bb04e59",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "5921be1c98a95c97",
        "name": "Error Log and Continue",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3190,
        "y": 1060,
        "wires": []
    },
    {
        "id": "0b253214fbe672c6",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "5921be1c98a95c97",
        "name": "Error Abbort",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3150,
        "y": 860,
        "wires": []
    },
    {
        "id": "ac370157a733f606",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "429ca0f28c6eb552",
        "name": "debug?",
        "property": "flow.settings.debug",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2080,
        "y": 620,
        "wires": [
            [
                "0dba09b269e5f30b"
            ]
        ]
    },
    {
        "id": "0dba09b269e5f30b",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "429ca0f28c6eb552",
        "name": "get instructions",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2260,
        "y": 620,
        "wires": []
    },
    {
        "id": "95d4b4ac2dd7c142",
        "type": "comment",
        "z": "32ccf302392ab325",
        "g": "ef776e6ae30994ac",
        "name": "",
        "info": "",
        "x": 3460,
        "y": 2540,
        "wires": []
    },
    {
        "id": "17c4fb4d7dad9588",
        "type": "function",
        "z": "32ccf302392ab325",
        "g": "ef776e6ae30994ac",
        "name": "",
        "func": "let adjustData = {};\nfor (let opt in msg.payload) {\n    if (msg.payload.hasOwnProperty(opt)) {\n        let val = msg.payload[opt];\n        if (val !== undefined && val !== null  && val !== []) {\n            if (Array.isArray(val)) {\n                    let newval = val.join(\", \")\n                    adjustData[opt] = newval;\n            } else {\n                adjustData[opt] = val;\n            }\n        }\n    }\n}\nmsg.payload = adjustData;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2920,
        "y": 2640,
        "wires": [
            [
                "124aafaa5fce09e1",
                "a65ce93c89c2599a"
            ]
        ]
    },
    {
        "id": "1b43fe3be09de519",
        "type": "comment",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "check what happens here?",
        "info": "",
        "x": 3790,
        "y": 3320,
        "wires": []
    },
    {
        "id": "5d8fcbc38bdd98ae",
        "type": "brave-login",
        "z": "32ccf302392ab325",
        "g": "56418a5f1c01fec3",
        "name": "",
        "x": 1550,
        "y": 320,
        "wires": [
            [
                "777a7cc7782db188"
            ],
            [
                "78537d38ed716bca",
                "7cd49bbb21845b99"
            ]
        ]
    },
    {
        "id": "19bde3e0fb9dfb78",
        "type": "brave-login",
        "z": "32ccf302392ab325",
        "g": "50739f124cb8563b",
        "name": "",
        "x": 1270,
        "y": 780,
        "wires": [
            [
                "4edbbaa923361a34"
            ],
            [
                "8eb57d4712531671"
            ]
        ]
    },
    {
        "id": "318fe22d13edfa91",
        "type": "brave-login",
        "z": "32ccf302392ab325",
        "g": "8dfbdc55ff62d17e",
        "name": "",
        "x": 1270,
        "y": 880,
        "wires": [
            [
                "fdc58e621ebbbe79"
            ],
            [
                "569532f3498a01b6"
            ]
        ]
    },
    {
        "id": "7ce5bb81dd221063",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "ef776e6ae30994ac",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "current_time",
                "pt": "msg",
                "to": "$now()",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3990,
        "y": 2520,
        "wires": [
            [
                "db1f8c0193412c4d"
            ]
        ]
    },
    {
        "id": "4bd63ff9f2411770",
        "type": "change",
        "z": "32ccf302392ab325",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "a2f3b0281c0886fa",
        "type": "switch",
        "z": "32ccf302392ab325",
        "g": "56bca0108c880039",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "jsonata_exp",
                "v": "$not(flow.instruction.stacked)",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 2940,
        "wires": [
            [
                "845f6eae17b50a7d"
            ],
            [
                "0d0607b42a600041"
            ]
        ]
    },
    {
        "id": "2c7085e58c2346e5",
        "type": "inject",
        "z": "32ccf302392ab325",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 2700,
        "wires": [
            [
                "77a81cf3288f38df"
            ]
        ]
    },
    {
        "id": "e3c178d7b608883b",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "bde86bab3f2c1ca4",
        "name": "set Document Query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"SELECT id, major_version_number__v, minor_version_number__v FROM documents WHERE id = \" & new_doc_id",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2840,
        "y": 2260,
        "wires": [
            [
                "fad0a5373258034c",
                "1b9e5dc0c9d78ff7"
            ]
        ]
    },
    {
        "id": "fad0a5373258034c",
        "type": "brave-vql-query",
        "z": "32ccf302392ab325",
        "g": "bde86bab3f2c1ca4",
        "name": "",
        "x": 3110,
        "y": 2260,
        "wires": [
            [
                "1b9e5dc0c9d78ff7",
                "4ae38e7a8fc4137a"
            ],
            [
                "95b08c0e9b4188a1",
                "1b9e5dc0c9d78ff7"
            ]
        ]
    },
    {
        "id": "447a4057f42cad0a",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "bde86bab3f2c1ca4",
        "name": "switch to xlink vault",
        "rules": [
            {
                "t": "set",
                "p": "temp.login_details",
                "pt": "msg",
                "to": "$lookup(flow.login, \"xlink\")",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "temp.login_details.client_id",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_api",
                "pt": "msg",
                "to": "temp.login_details.vault_api",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "session_id",
                "pt": "msg",
                "to": "temp.login_details.session_id",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "vault_domain",
                "pt": "msg",
                "to": "temp.login_details.vault_domain",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "user_id",
                "pt": "msg",
                "to": "temp.login_details.user_id",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2570,
        "y": 2260,
        "wires": [
            [
                "e3c178d7b608883b"
            ]
        ]
    },
    {
        "id": "95b08c0e9b4188a1",
        "type": "link out",
        "z": "32ccf302392ab325",
        "g": "bde86bab3f2c1ca4",
        "name": "Error Abbort",
        "mode": "link",
        "links": [
            "65a23e1026df92f0"
        ],
        "x": 3235,
        "y": 2280,
        "wires": [],
        "icon": "font-awesome/fa-hand-stop-o"
    },
    {
        "id": "eab86cc5f867e0de",
        "type": "change",
        "z": "32ccf302392ab325",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "new_doc_id",
                "pt": "msg",
                "to": "payload.id",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2520,
        "y": 2360,
        "wires": [
            [
                "447a4057f42cad0a"
            ]
        ]
    },
    {
        "id": "1b9e5dc0c9d78ff7",
        "type": "debug",
        "z": "32ccf302392ab325",
        "name": "debug 468",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3470,
        "y": 2180,
        "wires": []
    },
    {
        "id": "845f6eae17b50a7d",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "56bca0108c880039",
        "name": "pair source and xlink to flow doc_pairs",
        "rules": [
            {
                "t": "set",
                "p": "source_temp",
                "pt": "msg",
                "to": "flow.source.doc_vers@$val.(\t    $mav := $val.major_version_number__v;\t    $miv := $val.minor_version_number__v;(\t        $miv = 0 ? $merge($append($val,{\"level\" : $mav-1})):$merge($append($val,{\"level\" : $mav})))\t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "xlink_temp",
                "pt": "msg",
                "to": "flow.xlink.doc_vers@$val.(\t    $mav := $val.bound_source_major_version__v;\t    $miv := $val.bound_source_minor_version__v;(\t        $miv = 0 ? $merge($append($val,{\"level\" : $mav-1})):$merge($append($val,{\"level\" : $mav})))\t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "flow.doc_pairs",
                "pt": "msg",
                "to": "/* create a list of document id pairs for source and xlink based on the source_document_id__v field of the xlink */\t$append(\t   $distinct(\t       /*source documents referenced by xlinks*/\t       xlink_temp@$xv.[\t           $$.source_temp[(id=$xv.source_document_id__v) and (level = $xv.level)].\t                    {\"source_id\":id, \t                    \"xlink_id\":$xv.id,\t                    \"level\":$xv.level}\t       ]\t   ),\t       /*source documents referenced by xlinks*/\t       $distinct(source_temp@$xv.(\t           $not($exists(xlink_temp[source_document_id__v = $xv.id ].id))?{\"source_id\":$xv.id, \"level\":$xv.level}:\t           ($exists(xlink_temp[source_document_id__v = $xv.id].id) and $not($xv.level in (xlink_temp[source_document_id__v = $xv.id].level)))?{\"source_id\":$xv.id, \"level\":$xv.level}\t       )\t    )\t   \t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "flow.doc_pairs",
                "pt": "msg",
                "to": "/*enrich doc pairs with relevant xlink and source version information*/\tflow.doc_pairs@$dp.\t/*for each doc pair add data*/\t$merge(\t    [\t        $dp,\t        {\t            \"latest_xlink\": $$.xlink_temp[id=$dp.xlink_id and level = $dp.level]^(>sort_version)[0],\t            \"first_source\": $$.source_temp[id=$dp.source_id and level = $dp.level]^(sort_version)[0],\t            \"version_pairs\":\t            /* go through every version of the source doc of the doc pair*/\t                ($$.source_temp@$ps[$ps.id=$dp.source_id and $ps.level = $dp.level].{\t                    \"source_ver\":$ps,\t                    \"xlink_ver\":\t                            (\t                                /* xlsortv: the xlink with identical (sort) version number */\t                                $xlsortv:=$$.flow.xlink.doc_vers[id=$dp.xlink_id\t                                    and\t                                    source_document_id__v = $ps.id \t                                    and \t                                    sort_version = $ps.sort_version][0];\t                                /* xlbound: the xlink with a binding to the source version number */\t                                $xlbound:=$$.flow.xlink.doc_vers[id=$dp.xlink_id\t                                    and\t                                    source_version_id = $ps.version_id]^(>sort_version)[0];\t                                /* xldescr: the xlink which defines the source version in the description field */\t                                $xldescr:=$$.flow.xlink.doc_vers[id=$dp.xlink_id\t                                    and\t                                    description__v = $ps.version_id]^(>sort_version)[0];\t                    /* if created by automation the xlink description field has the version_id it was created for ($xldescr),\t                    if this does not point to an existing source, try match by expected parallel version numbering ($xlsortv),\t                    if neither match, match by source_version_id field ($xlbound).*/\t                                $xldescr?$xldescr:($xlsortv?$xlsortv:$xlbound)/**/\t                            )\t                    }\t                )^(source_ver.sort_version)[]\t        }\t    ]\t)\t\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 3060,
        "wires": [
            [
                "23aca15730715d76",
                "9c4edc1d36acfd39",
                "68f29b259a54ab24"
            ]
        ]
    },
    {
        "id": "9c4edc1d36acfd39",
        "type": "change",
        "z": "32ccf302392ab325",
        "g": "56bca0108c880039",
        "name": "pair source and xlink to doc_pairs",
        "rules": [
            {
                "t": "set",
                "p": "loop",
                "pt": "msg",
                "to": "/* assign doc version pairs to different groups. A single pair maybe assigned to more than one group, e.g. new source and new version. This will be handled by the order of processing. */\t{\t    /* new_sources: all source documents without any xlink */\t    \"new_sources\": flow.doc_pairs[xlink_id?false:true][],\t    /* new_versions: all source document versions without a xlink */\t    \"new_versions\": (flow.doc_pairs@$docpair.\t                            {   \"source_id\": $docpair.source_id,\t                                \"xlink_id\": $docpair.xlink_id,\t                                \"latest_xlink\": $docpair.latest_xlink,\t                                \"first_source\": $docpair.first_source,\t                                \"version_pairs\":\t                                    /* only if the version pair does not include an xlink */\t                                    $docpair.version_pairs@$verpair[$verpair.xlink_ver?false:true].{\t                                    \"source_ver\":$verpair.source_ver\t                                    }[]\t                            }\t                        )[version_pairs][],\t    /* approve_xlinks: xlinks which need approval to next major version. */\t    \"approve_xlinks\": (flow.doc_pairs@$docpair.\t                            {   \"source_id\":  $docpair.source_id,\t                                \"xlink_id\": $docpair.xlink_id,\t                                \"latest_xlink\": $docpair.latest_xlink,\t                                \"first_source\": $docpair.first_source,\t                                \"version_pairs\":\t                                    $append(\t                                        /* source version / xlink version pairs, where the bound source version is a major version (i.e. minor vers = 0) and the major version number is the consequential number */\t                                        $docpair.version_pairs@$verpair[\t                                                $verpair.xlink_ver.bound_source_minor_version__v = 0 \t                                            and $verpair.xlink_ver.minor_version_number__v > 0\t                                            and $verpair.xlink_ver.bound_source_major_version__v = $verpair.xlink_ver.major_version_number__v + level + 1\t                                            ].{\t                                                \"source_ver\": $verpair.source_ver,\t                                                \"xlink_ver\":$verpair.xlink_ver\t                                            }[],\t                                        /* xlink versions which are just created as placeholder for approval, i.e. an interim major version of the source had been deleted. This is added to the version description, xlink_approved is an internal flag of the automation run set after approval.*/\t                                        [\t                                            {\t                                                \"xlink_ver\":$$.flow.xlink.doc_vers[id=$docpair.xlink_id]^(>sort_version)[0][description__v=\"placeholder major version\" and $not(xlink_approved)]\t                                            }\t                                        ]\t                                    )\t                            }\t                        )[version_pairs][],\t    /* update_xlinks: xlinks where the source version has been updated since last run. */\t    \"update_xlinks\": (flow.doc_pairs@$docpair.\t                            {   \"source_id\": $docpair.source_id,\t                                \"xlink_id\": $docpair.xlink_id,\t                                \"latest_xlink\": $docpair.latest_xlink,\t                                \"first_source\": $docpair.first_source,\t                                \"version_pairs\":\t                                    /* the version pair includes a xlink but this has not just be created or updated, determined by internal flags of the automation run set after such action.*/\t                                    $docpair.version_pairs@$verpair[\t                                            $verpair.xlink_ver \t                                        and $not($verpair.xlink_ver.xlink_created or $verpair.xlink_ver.xlink_updated)\t                                    ].{\t                                        \"source_ver\":$verpair.source_ver,\t                                        \"xlink_ver\":$verpair.xlink_ver\t                                    }[]\t                            }\t                        )[version_pairs][],\t    /* matching pairs, may include those still needing updates */\t    \"matching_xlinks\": (flow.doc_pairs@$docpair.\t                            {   \"source_id\": $docpair.source_id,\t                                \"xlink_id\": $docpair.xlink_id,\t                                \"latest_xlink\": $docpair.latest_xlink,\t                                \"first_source\": $docpair.first_source,\t                                \"version_pairs\":\t                                    $docpair.version_pairs@$verpair[\t                                            $verpair.xlink_ver.sort_version = $verpair.source_ver.sort_version \t                                        and $verpair.xlink_ver.sort_version = $verpair.xlink_ver.sort_bound_version].{\t                                    \"source_ver\":$verpair.source_ver,\t                                    \"xlink_ver\":$verpair.xlink_ver\t                                    }[]\t                                    })[version_pairs][]\t\t}\t",
                "tot": "jsonata",
                "dc": true
            },
            {
                "t": "set",
                "p": "loop.unmatched_xlinks",
                "pt": "msg",
                "to": "(\t   $ma_xl_vids:=loop.matching_xlinks.version_pairs.xlink_ver.version_id;\t/*   {\t       \"unmatched_xlinks\": */flow.xlink.doc_vers@$dv[\t           $not(\t               $dv.version_id in $ma_xl_vids  /*xlink version is in matching list*/\t               or \t               $dv.sort_version < $$.flow.doc_pairs[xlink_id=$dv.id].first_source.sort_version   /*xlink version is older than the source version in updating scope*/\t           )\t       ].$dv.version_id\t\t/*   }*/\t)\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 3060,
        "wires": [
            [
                "23aca15730715d76",
                "4c2cd057f4d612dd"
            ]
        ]
    },
    {
        "id": "ea1f0b63744ce41a",
        "type": "comment",
        "z": "32ccf302392ab325",
        "g": "d496576295362680",
        "name": "",
        "info": "",
        "x": 3560,
        "y": 2840,
        "wires": []
    },
    {
        "id": "d79797fa2d8e6d07",
        "type": "comment",
        "z": "32ccf302392ab325",
        "g": "f919a01e47ab17d2",
        "name": "",
        "info": "",
        "x": 3360,
        "y": 3360,
        "wires": []
    },
    {
        "id": "2030346c40447351",
        "type": "change",
        "z": "32ccf302392ab325",
        "name": "manually set flow.login",
        "rules": [
            {
                "t": "set",
                "p": "flow.login.username",
                "pt": "msg",
                "to": "di.wang3@bayersbx.com",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flow.login.password",
                "pt": "msg",
                "to": "diw@Bayer12138",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "client_id",
                "pt": "msg",
                "to": "create_xlink",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flow.login.instruction.vault_domain",
                "pt": "msg",
                "to": "bayersbx-bayer-ph-rim-r2-scratchbox-01.veevavault.com",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "flow.login.instruction.subset",
                "pt": "msg",
                "to": "dummy_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 380,
        "wires": [
            [
                "04be81a30ca8b5f2"
            ]
        ]
    },
    {
        "id": "220906ea7a4bf2b1",
        "type": "inject",
        "z": "32ccf302392ab325",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 290,
        "y": 380,
        "wires": [
            [
                "2030346c40447351"
            ]
        ]
    },
    {
        "id": "48b8b66ab99a68bb",
        "type": "comment",
        "z": "32ccf302392ab325",
        "name": "EU CTR",
        "info": "",
        "x": 640,
        "y": 300,
        "wires": []
    },
    {
        "id": "883d9122b8d5191b",
        "type": "comment",
        "z": "32ccf302392ab325",
        "name": "BRAVE -> Gemstone",
        "info": "",
        "x": 440,
        "y": 340,
        "wires": []
    },
    {
        "id": "68f29b259a54ab24",
        "type": "debug",
        "z": "32ccf302392ab325",
        "g": "56bca0108c880039",
        "name": "debug 474",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 2820,
        "wires": []
    }
]